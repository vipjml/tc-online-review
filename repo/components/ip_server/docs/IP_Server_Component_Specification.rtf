{\rtf1\ansi\ansicpg936\uc2\deff0\stshfdbch13\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe2052{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Palatino};}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial{\*\falt Arial};}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New{\*\falt Courier New};}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol{\*\falt Symbol};}{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings{\*\falt Wingdings};}
{\f13\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}\'cb\'ce\'cc\'e5{\*\falt SimSun};}{\f30\froman\fcharset1\fprq2{\*\panose 00000400000000000000}Sendnya{\*\falt Courier New};}
{\f35\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@\'cb\'ce\'cc\'e5;}{\f210\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Palatino};}{\f211\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Palatino};}
{\f213\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Palatino};}{\f214\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Palatino};}{\f215\froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Palatino};}
{\f216\froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Palatino};}{\f217\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Palatino};}{\f218\froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Palatino};}
{\f220\fswiss\fcharset238\fprq2 Arial CE{\*\falt Arial};}{\f221\fswiss\fcharset204\fprq2 Arial Cyr{\*\falt Arial};}{\f223\fswiss\fcharset161\fprq2 Arial Greek{\*\falt Arial};}{\f224\fswiss\fcharset162\fprq2 Arial Tur{\*\falt Arial};}
{\f225\fswiss\fcharset177\fprq2 Arial (Hebrew){\*\falt Arial};}{\f226\fswiss\fcharset178\fprq2 Arial (Arabic){\*\falt Arial};}{\f227\fswiss\fcharset186\fprq2 Arial Baltic{\*\falt Arial};}{\f228\fswiss\fcharset163\fprq2 Arial (Vietnamese){\*\falt Arial};}
{\f230\fmodern\fcharset238\fprq1 Courier New CE{\*\falt Courier New};}{\f231\fmodern\fcharset204\fprq1 Courier New Cyr{\*\falt Courier New};}{\f233\fmodern\fcharset161\fprq1 Courier New Greek{\*\falt Courier New};}
{\f234\fmodern\fcharset162\fprq1 Courier New Tur{\*\falt Courier New};}{\f235\fmodern\fcharset177\fprq1 Courier New (Hebrew){\*\falt Courier New};}{\f236\fmodern\fcharset178\fprq1 Courier New (Arabic){\*\falt Courier New};}
{\f237\fmodern\fcharset186\fprq1 Courier New Baltic{\*\falt Courier New};}{\f238\fmodern\fcharset163\fprq1 Courier New (Vietnamese){\*\falt Courier New};}{\f342\fnil\fcharset0\fprq2 SimSun Western{\*\falt SimSun};}
{\f562\fnil\fcharset0\fprq2 @\'cb\'ce\'cc\'e5 Western;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{\s2\ql \li0\ri0\sb120\sa60\sl240\slmult0
\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 \sbasedon1 \snext0 heading 2;}{
\s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 \i\fs20\lang1033\langfe1033\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 \sbasedon1 \snext0 
heading 3;}{\s4\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 
\sbasedon1 \snext0 heading 4;}{\s5\ql \li0\ri0\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl4\outlinelevel4\adjustright\rin0\lin0\itap0 
\fs22\lang1033\langfe1033\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 5;}{\s6\ql \li0\ri0\sb240\sa60\sl240\slmult0\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl5\outlinelevel5\adjustright\rin0\lin0\itap0 \i\fs22\lang1033\langfe1033\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 6;}{\s7\ql \li0\ri0\sb240\sa60\sl240\slmult0
\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl6\outlinelevel6\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 7;}{
\s8\ql \li0\ri0\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl7\outlinelevel7\adjustright\rin0\lin0\itap0 \i\fs20\lang1033\langfe1033\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 
heading 8;}{\s9\ql \li0\ri0\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl8\outlinelevel8\adjustright\rin0\lin0\itap0 \b\i\fs18\lang1033\langfe1033\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext0 heading 9;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\loch\f0\hich\af0\dbch\af13\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\*\cs15 \additive \ul\cf2 \sbasedon10 Hyperlink;}{
\s16\ql \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 Body Text;}{\s17\ql \li720\ri0\sa120\sl240\slmult0
\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs20\lang1033\langfe1033\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 \sautoupd \styrsid10236033 InfoBlue;}{
\s18\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs20\lang1033\langfe1033\loch\f1\hich\af1\dbch\af30\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext18 \styrsid10236033 Body Text 2;}}
{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\listtable{\list\listtemplateid-985754512{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\s1\jclisttab\tx360 }
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03\'00.\'01;}{\levelnumbers\'01\'03;}\s2\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'05\'00.\'01.\'02;}{\levelnumbers\'01\'03\'05;}\s3\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'07\'00.\'01.\'02.\'03;}{\levelnumbers\'01\'03\'05\'07;}\s4\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'09\'00.\'01.\'02.\'03.\'04;}{\levelnumbers
\'01\'03\'05\'07\'09;}\s5\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0b\'00.\'01.\'02.\'03.\'04.\'05;}{\levelnumbers\'01\'03\'05\'07\'09\'0b;}\s6\jclisttab\tx0 }
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0d\'00.\'01.\'02.\'03.\'04.\'05.\'06;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}\s7\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0f\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\s8\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'11\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\s9\jclisttab\tx0 }{\listname ;}\listid-5}{\list\listtemplateid-160384884\listhybrid
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3913 ?};}{\levelnumbers;}\f3\fbias0 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc4\levelnfcn4\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713
\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3960\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4680
\jclisttab\tx4680\lin4680 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5400\jclisttab\tx5400\lin5400 }{\listlevel
\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6840\jclisttab\tx6840\lin6840 }{\listname ;}\listid806357716}{\list\listtemplateid932329388\listhybrid{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3913 ?};}{\levelnumbers;}\f3\fbias0 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698693\'01{\uc1\u-3929 ?};}{\levelnumbers;}\f10\fbias0 \fi-360\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698689\'01{\uc1\u-3913 ?};}{\levelnumbers;}\f3\fbias0 \fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691
\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3960\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01{\uc1\u-3929 ?};}{\levelnumbers;}
\f10\fbias0 \fi-360\li4680\jclisttab\tx4680\lin4680 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01{\uc1\u-3913 ?};}{\levelnumbers;}\f3\fbias0 \fi-360\li5400
\jclisttab\tx5400\lin5400 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01{\uc1\u-3929 ?};}{\levelnumbers;}\f10\fbias0 \fi-360\li6840\jclisttab\tx6840\lin6840 }{\listname ;}\listid876431865}}
{\*\listoverridetable{\listoverride\listid-5\listoverridecount9{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel
\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls1}{\listoverride\listid806357716
\listoverridecount9{\lfolevel}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}
{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls2}{\listoverride\listid876431865\listoverridecount9{\lfolevel}{\lfolevel}{\lfolevel}{\lfolevel}{\lfolevel}{\lfolevel}
{\lfolevel}{\lfolevel}{\lfolevel}\ls3}{\listoverride\listid-5\listoverridecount0\ls4}{\listoverride\listid-5\listoverridecount9{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat
\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel
\listoverridestartat\levelstartat1}\ls5}{\listoverride\listid-5\listoverridecount9{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat
\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls6}
{\listoverride\listid-5\listoverridecount9{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat
\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls7}{\listoverride\listid-5\listoverridecount9{\lfolevel
\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat
\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls8}{\listoverride\listid-5\listoverridecount9{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel
\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat
\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls9}}{\*\rsidtbl \rsid66528\rsid663361\rsid677367\rsid747324\rsid1008202\rsid1330860\rsid1526568\rsid1532817\rsid1726048\rsid1847108\rsid2256958
\rsid2504197\rsid3022664\rsid3090399\rsid3231117\rsid3408042\rsid3422423\rsid4342604\rsid4466006\rsid4736182\rsid4801372\rsid4999966\rsid5113759\rsid5177671\rsid5199142\rsid5317412\rsid5379612\rsid5380226\rsid5404215\rsid5922531\rsid6357146\rsid6884544
\rsid7544626\rsid7606774\rsid7831228\rsid7941118\rsid8091548\rsid8346960\rsid8596901\rsid8601021\rsid8798146\rsid8850610\rsid8929777\rsid9318955\rsid9374656\rsid9519010\rsid9519557\rsid9780290\rsid9861032\rsid9904220\rsid10096175\rsid10180972\rsid10236033
\rsid10433280\rsid10760316\rsid10879759\rsid11030733\rsid11036559\rsid11697136\rsid11933863\rsid12082264\rsid12156654\rsid12342412\rsid12482519\rsid13582146\rsid13990177\rsid14249188\rsid14430908\rsid14771534\rsid14904167\rsid15224535\rsid15491690
\rsid16585266}{\*\generator Microsoft Word 11.0.5604;}{\info{\title <<Component>> <<Version>> Component Specification}{\author gpaul}{\operator TCSDESIGNER}{\creatim\yr2004\mo6\dy16\hr17\min44}{\revtim\yr2005\mo9\dy13\hr22\min38}{\version42}{\edmins676}
{\nofpages20}{\nofwords6957}{\nofchars39658}{\*\company TopCoder}{\nofcharsws46522}{\vern24689}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0 
\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1800\dgvorigin1440\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\rsidroot1726048 \fet0\sectd \linex0\endnhere\sectlinegrid360\sectdefaultcl\sftnbj {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxta \dbch )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}
{\pntxta \dbch )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0
\keepn\nowidctlpar\tx720\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\fs28\ul\loch\af0\hich\af0\dbch\af0\insrsid13582146 
IP Server 2.0 Component Specification
\par }\pard\plain \s16\ql \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 
\par {\listtext\pard\plain\s1 \b\f1\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 1.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Design
\par }\pard\plain \s16\qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid5113759 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid5113759 \hich\af1\dbch\af13\loch\f1 
This component implements a server \hich\f1 \endash \hich\af1\dbch\af13\loch\f1 
 client communication model over TCP/IP. The server is multithreaded and uses the New Java I/O API for maximum performance. The server uses only one thread to handle listening for connections, accepting and reading requests. The idea of the component is t
\hich\af1\dbch\af13\loch\f1 o\hich\af1\dbch\af13\loch\f1  provide TCP/IP communication services to applications without exposing them to the Java socket API or to java.nio.
\par \hich\af1\dbch\af13\loch\f1 The main classes of this design are IPServer and IPClient. One represents the server side and one represents the client side. The IPServer c\hich\af1\dbch\af13\loch\f1 
lass has configuration details such as bind address, listening port and maximum number of connections. It also allows configuring who handles each type of request. The requests are handled by Handler subclasses. Finally it has methods to start and stop th
\hich\af1\dbch\af13\loch\f1 e\hich\af1\dbch\af13\loch\f1  server.
\par \hich\af1\dbch\af13\loch\f1 
The IPClient class has configuration details such as the address and port of the server to connect to. It has methods for connecting, disconnecting, sending and receiving messages in a synchronous (blocking) or asynchronous (non-blocking) manner.
\par \hich\af1\dbch\af13\loch\f1 
The Handler abstract class is a base for subclasses that handle requests. Each handler has a unique name and the requests indicate this name. The IPServer does the dispatching and calls the appropriate handler for each request. Handlers are also notified 
\hich\af1\dbch\af13\loch\f1 a\hich\af1\dbch\af13\loch\f1 bout incoming connections. A handler has a limit on the number of requests it can service simultaneously (a waiting queue).
\par \hich\af1\dbch\af13\loch\f1 The Connection class is a data only class that holds information about a connection.
\par \hich\af1\dbch\af13\loch\f1 The IPServerManager is a singleton class that c\hich\af1\dbch\af13\loch\f1 
an be used to manage more IP server instances. The IP server instances are identified by unique names. The usage of this manager is optional. It should only be used if needed. This manager also provides configuration file abilities. It allows setting serv
\hich\af1\dbch\af13\loch\f1 e\hich\af1\dbch\af13\loch\f1 rs with handlers up by using only a configuration file. The servers can even be started automatically.
\par \hich\af1\dbch\af13\loch\f1 The KeepAliveHandler class implements a Handler that responds to keep-alive message (simply sends the request message back). The server side does not nee\hich\af1\dbch\af13\loch\f1 
d any other modifications to support keep-alive functionality. All the user has to do is add an instance of this class to the IP server.
\par \hich\af1\dbch\af13\loch\f1 The KeepAliveIPClient implements an IP client that sends keep-alive messages on configurable intervals. It simply inter\hich\af1\dbch\af13\loch\f1 
cepts the connect and disconnect calls (by overriding and proxying) and sets up using the Heartbeat component the periodic execution of a method that sends and receives keep-alive methods.
\par }{\i\insrsid5113759\charrsid5113759 \hich\af1\dbch\af13\loch\f1 Changes in 2.0}{\i\insrsid5113759 \hich\af1\dbch\af13\loch\f1 :
\par }{\insrsid5113759 \hich\af1\dbch\af13\loch\f1 The major change in IP Server 2.0 is the change of \hich\af1\dbch\af13\loch\f1 message}{\insrsid14430908 \hich\af1\dbch\af13\loch\f1  handling}{\insrsid5113759 \hich\af1\dbch\af13\loch\f1 
. New interfaces and classes are introduced in order to adopt different serialization method}{\insrsid14430908 \hich\af1\dbch\af13\loch\f1 s}{\insrsid5113759 \hich\af1\dbch\af13\loch\f1  easily. The seri}{\insrsid14430908 \hich\af1\dbch\af13\loch\f1 
alization method can be}{\insrsid5113759 \hich\af1\dbch\af13\loch\f1  Java\hich\f1 \rquote \loch\f1 s serialization }{\insrsid14430908 \hich\af1\dbch\af13\loch\f1 framework,}{\insrsid5113759 \hich\af1\dbch\af13\loch\f1  Serialization 1.0 component}{
\insrsid14430908 \hich\af1\dbch\af13\loch\f1 , or any customized serialization algorithm}{\insrsid5113759 \hich\af1\dbch\af13\loch\f1 .
\par }{\insrsid7606774 \hich\af1\dbch\af13\loch\f1 Si\hich\af1\dbch\af13\loch\f1 
nce a message factory is provided, application should avoid directly create a message instance by calling the constructor. Instead, use the message factory to create the message. This can provide flexibility when new message replaces the old one without m
\hich\af1\dbch\af13\loch\f1 o\hich\af1\dbch\af13\loch\f1 difying the code.
\par }\pard \s16\qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10236033 {\insrsid10236033 \hich\af1\dbch\af13\loch\f1 
The Message interface is used to send data between client and server. This can be a request or a response or something else, depending on the semantics defined by the application using it. The Message interface also contains a method whic
\hich\af1\dbch\af13\loch\f1 h defines which MessageSerializer implementation is used to serialize/deserialize the message.}{\insrsid4801372 \hich\af1\dbch\af13\loch\f1 
 An abstract Message implementation is not provided since serialization algorithm may require all super classes to implement certain interface (e.g. java.io.Seria\hich\af1\dbch\af13\loch\f1 lizable).}{\insrsid10236033 
\par }{\insrsid10236033 \hich\af1\dbch\af13\loch\f1 
The MessageSerializer interface is used to serialize/deserialize a group of Message implementations, such as all Message implementations implementing java.io.Serializable interface. It contains two methods which seriali}{\insrsid5922531 
\hich\af1\dbch\af13\loch\f1 ze and deserialize the mess\hich\af1\dbch\af13\loch\f1 age. Impl}{\insrsid4801372 \hich\af1\dbch\af13\loch\f1 ementations should be stateless.}{\insrsid10236033\charrsid5113759 
\par }\pard \s16\qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid5113759 {\insrsid10236033 \hich\af1\dbch\af13\loch\f1 
The MessageFactory interface is a factory class managing a map of names and message types. It can create messages according to the name or a byte array by deserializing the data. It can also serialize a given messa\hich\af1\dbch\af13\loch\f1 
ge into a byte array.}{\insrsid5113759 
\par }{\insrsid5922531 \hich\af1\dbch\af13\loch\f1 The }{\insrsid3090399 \hich\af1\dbch\af13\loch\f1 DefaultMessageFactory}{\insrsid5922531 \hich\af1\dbch\af13\loch\f1 
 class implements MessageFactory interface. It provides the feature to load the name-message mapping from configuration. It also provides the methods to modify the mapping programmatically.}{\insrsid4801372 \hich\af1\dbch\af13\loch\f1  When serializing th
\hich\af1\dbch\af13\loch\f1 
e data, it adds class name of the MessageSerializer implementation in order to quickly identify the proper serializer when deserializing the data. It also keeps all used MessageSerializer instances in a map in order to avoid redundant instantiation via re
\hich\af1\dbch\af13\loch\f1 f\hich\af1\dbch\af13\loch\f1 lection.}{\insrsid5922531 
\par }{\insrsid4801372 \hich\af1\dbch\af13\loch\f1 
The SimpleSerializableMessage class implements Message interface to provide a basic implementation. It contains only handler ID and request ID without any other data. This class also implements java.io.Serializable interface, thus it can be the ba
\hich\af1\dbch\af13\loch\f1 se class of all messages implements java.io.Serializable. It uses SerializableMessageSerializer class as the serializer.
\par \hich\af1\dbch\af13\loch\f1 The }{\insrsid4801372\charrsid4801372 \hich\af1\dbch\af13\loch\f1 Se}{\insrsid4801372 \hich\af1\dbch\af13\loch\f1 
rializableMessageSerializer class implements MessageSerializer interface to provide the functionality of serializing any Message \hich\af1\dbch\af13\loch\f1 
implementation that implements java.io.Serializable. It uses ObjectInputStream and ObjectOutputStream to fulfill the requirement.
\par }{\insrsid1008202 \hich\af1\dbch\af13\loch\f1 In order to handle partially received message, the length of the serialized message should be transmitted before the message i\hich\af1\dbch\af13\loch\f1 
tself. When sending or receiving messages, the first four bytes }{\lang1033\langfe2052\langfenp2052\insrsid747324 \hich\af1\dbch\af13\loch\f1 d\hich\af1\dbch\af13\loch\f1 enote}{\insrsid1008202 \hich\af1\dbch\af13\loch\f1  the }{\insrsid14249188 
\hich\af1\dbch\af13\loch\f1 length of message in a Big-Indian order}{\insrsid1008202 \hich\af1\dbch\af13\loch\f1 .}{\insrsid1008202\charrsid4801372 
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 1.1\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Design Patterns 
\par }\pard\plain \s16\ql \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10236033 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid10236033 \hich\af1\dbch\af13\loch\f1 
The singleton pattern is used by the manager class because there is no reason to have multiple managers. It also provid\hich\af1\dbch\af13\loch\f1 es an easy access point for the users.
\par }\pard \s16\qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10236033 {\insrsid10236033 \hich\af1\dbch\af13\loch\f1 
The data value object pattern is used in the Connection. This class facilitates the data exchange inside the component.
\par \hich\af1\dbch\af13\loch\f1 The strategy pattern is used in the Handler abstract class, Message interface and Mess\hich\af1\dbch\af13\loch\f1 
ageSerializer interface. Handler abstract class is used to abstract the processing of the client requests. Note that the connection notification corresponds more to a listener pattern. Message interface is used to carry various data between clients and se
\hich\af1\dbch\af13\loch\f1 r\hich\af1\dbch\af13\loch\f1 vers. MessageSerializer interface is used to serialize/deserialize a message.
\par \hich\af1\dbch\af13\loch\f1 The factory pattern is used in the MessageFactory interface. It is used to create/serialize/deserialize messages with in a class.
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 1.2\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Industry Standards 
\par }\pard\plain \s17\ql \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10236033 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\dbch\af30\insrsid10236033\charrsid10236033 
\hich\af1\dbch\af30\loch\f1 TCP/IP, sockets, Java Ne\hich\af1\dbch\af30\loch\f1 w I/O.
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 1.3\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Required Algorithms
\par {\listtext\pard\plain\s3 \i\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid4801372 \hich\af1\dbch\af13\loch\f1 1.3.1\tab}}\pard\plain \s3\qj \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid4801372 \i\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 \hich\af1\dbch\af13\loch\f1 
Loading the configuration file}{\insrsid14430908 \hich\af1\dbch\af13\loch\f1  for IPServerManager}{\insrsid4801372 
\par }\pard\plain \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid4801372 \hich\af1\dbch\af13\loch\f1 
The default configuration manager file is loaded only if the configuration manager namespace is not created when the component is instantiated for the \hich\af1\dbch\af13\loch\f1 
first time. This gives the flexibility to use other configuration manager file locations or formats, essential in development of applications using many different components, with different configuration files, to avoid the nightmare of having a lot of di
\hich\af1\dbch\af13\loch\f1 f\hich\af1\dbch\af13\loch\f1 ferent configuration files, spread everywhere. The configuration file loading algorithm is the following:  
\par 
\par }{\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2  read server names ("servers") 
\par \hich\af2\dbch\af13\loch\f2  for each server_name in server names 
\par \hich\af2\dbch\af13\loch\f2     read server address (server_name + "_address") (optional) 
\par \hich\af2\dbch\af13\loch\f2     read serv\hich\af2\dbch\af13\loch\f2 er port (server_name + "_port") 
\par \hich\af2\dbch\af13\loch\f2     read server max connections (server_name + "_max_connections") (0 if missing) 
\par }{\f2\fs16\insrsid11030733 \hich\af2\dbch\af13\loch\f2     read namespace used to create message factory
\par \hich\af2\dbch\af13\loch\f2         (server_name + "_message_factory_namespace")
\par }{\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2     read server backlog (server_name \hich\af2\dbch\af13\loch\f2 + "_backlog") (}{\f2\fs16\insrsid8601021 \hich\af2\dbch\af13\loch\f2 0}{\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2  if missing)

\par \hich\af2\dbch\af13\loch\f2     read server started (server_name + "_started") 
\par \hich\af2\dbch\af13\loch\f2     read server handler names (server_name + "_handlers") 
\par \hich\af2\dbch\af13\loch\f2     create IPServer instance wit}{\f2\fs16\insrsid11030733 \hich\af2\dbch\af13\loch\f2 h read port, max connections and factory namespace}{\f2\fs16\insrsid4801372 
\par \hich\af2\dbch\af13\loch\f2     for each handler_name in hand\hich\af2\dbch\af13\loch\f2 ler names 
\par \hich\af2\dbch\af13\loch\f2        read handler class (server_name + "_" + handler_name + "_class") 
\par \hich\af2\dbch\af13\loch\f2        read handler max requests (server_name + "_" + handler_name + "_max_requests") 
\par \hich\af2\dbch\af13\loch\f2           (0 if missing) 
\par \hich\af2\dbch\af13\loch\f2        create handler using reflection (Class.forName, Clas\hich\af2\dbch\af13\loch\f2 s.newInstance) 
\par \hich\af2\dbch\af13\loch\f2        add handler to server 
\par \hich\af2\dbch\af13\loch\f2     add server to map 
\par \hich\af2\dbch\af13\loch\f2     if server started}{\f2\fs16\insrsid4801372\charrsid10879759 \hich\af2\dbch\af13\loch\f2  property is true, start it.
\par {\listtext\pard\plain\s3 \i\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid4801372 \hich\af1\dbch\af13\loch\f1 1.3.2\tab}}\pard\plain \s3\qj \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid4801372 \i\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 \hich\af1\dbch\af13\loch\f1 
Setting up the server for listening
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid4801372 \hich\af1\dbch\af13\loch\f1 
The following code can be used to set up the listening socket:
\par 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 // create the server socket channel
\par \hich\af2\dbch\af13\loch\f2 ServerSocketChannel server = ServerSocketChannel.open();
\par \hich\af2\dbch\af13\loch\f2 // set non-blocking I/O
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \tab \hich\af2\dbch\af13\loch\f2 server.configureBlocking(false);
\par \tab \hich\af2\dbch\af13\loch\f2 // set listening port
\par \tab \hich\af2\dbch\af13\loch\f2 If (address == null)\{
\par \tab \hich\af2\dbch\af13\loch\f2    Address = }{\f2\fs16\insrsid4801372\charrsid8091548 \hich\af2\dbch\af13\loch\f2 InetAddress.getLocalHost().getHostName()}{\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 ;}{\f2\fs16\insrsid4801372\charrsid8091548 

\par }{\f2\fs16\insrsid4801372 \tab \}
\par \tab \hich\af2\dbch\af13\loch\f2 server.socket().bind(new InetSocketAddress(address, port), maxConnections);
\par \tab \hich\af2\dbch\af13\loch\f2 // create the selector
\par \tab \hich\af2\dbch\af13\loch\f2 Selector selector = Selector.open();
\par \tab \hich\af2\dbch\af13\loch\f2 // recording server to selector (type OP_ACCEPT)
\par \tab \hich\af2\dbch\af13\loch\f2 server.register(selector, SelectionKey.OP_ACCEPT);
\par \tab \hich\af2\dbch\af13\loch\f2 started = true\hich\af2\dbch\af13\loch\f2 ;
\par \tab \hich\af2\dbch\af13\loch\f2 shouldStop = false;
\par \tab \hich\af2\dbch\af13\loch\f2 new Thread(this).start();
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 {\f1\fs20\insrsid4801372 
\par {\listtext\pard\plain\s3 \i\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid4801372 \hich\af1\dbch\af13\loch\f1 1.3.3\tab}}\pard\plain \s3\qj \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid4801372 \i\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 \hich\af1\dbch\af13\loch\f1 
Accepting connections and receiving request
\par }\pard\plain \s17\ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 
\hich\af1\dbch\af13\loch\f1 The following cod\hich\af1\dbch\af13\loch\f1 
e can be adapted for accepting connections and receiving requests and a scalable manner, using java.nio features. Note that at least the error handling from this sample code must be improved:
\par }\pard \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 try \{
\par \hich\af2\dbch\af13\loch\f2     while (}{\f2\fs16\insrsid7831228 \hich\af2\dbch\af13\loch\f2 !}{\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 shouldStop) \{
\par \tab \hich\af2\dbch\af13\loch\f2     // waiting for events
\par \tab \hich\af2\dbch\af13\loch\f2     \hich\af2\dbch\af13\loch\f2 selector.select(1000);
\par \tab \hich\af2\dbch\af13\loch\f2     // get keys
\par \tab \hich\af2\dbch\af13\loch\f2     Set keys = selector.selectedKeys();
\par \tab \hich\af2\dbch\af13\loch\f2     Iterator it = keys.iterator();
\par 
\par \tab \hich\af2\dbch\af13\loch\f2     // for each keys...
\par }\pard \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid5380226 {\f2\fs16\insrsid4801372 \tab \hich\af2\dbch\af13\loch\f2     while (it.hasNext()) \{}{\f2\fs16\insrsid5380226 
\par }\pard \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \tab \tab \hich\af2\dbch\af13\loch\f2     SelectionKey key = (SelectionKey) it.next();
\par 
\par \tab \tab \hich\af2\dbch\af13\loch\f2     // Remove the current key
\par \tab \tab \hich\af2\dbch\af13\loch\f2     it.remove();
\par 
\par \tab \tab \hich\af2\dbch\af13\loch\f2     // if isAcceptable = true then a client required a connection
\par \tab \tab \hich\af2\dbch\af13\loch\f2     if (key.isAcceptable()) \{
\par }\pard \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid3422423 {\f2\fs16\insrsid3422423 \hich\af2\dbch\af13\loch\f2 
                       if ((maxConnections > 0) && (connectionIdToChannel.size() > maxConnections) \{
\par \hich\af2\dbch\af13\loch\f2     }{\f2\fs16\insrsid3422423\charrsid5380226 \hich\af2\dbch\af13\loch\f2        }{\f2\fs16\insrsid3422423 \hich\af2\dbch\af13\loch\f2                    }{\f2\fs16\insrsid3422423\charrsid5380226 \hich\af2\dbch\af13\loch\f2 
 conti\hich\af2\dbch\af13\loch\f2 nue;
\par \hich\af2\dbch\af13\loch\f2     }{\f2\fs16\insrsid3422423 \hich\af2\dbch\af13\loch\f2         }{\f2\fs16\insrsid3422423\charrsid5380226 \hich\af2\dbch\af13\loch\f2           }{\f2\fs16\insrsid3422423 \hich\af2\dbch\af13\loch\f2      }{
\f2\fs16\insrsid3422423\charrsid5380226 \}
\par }\pard \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \tab \tab \tab \hich\af2\dbch\af13\loch\f2     // get client socket channel
\par \tab \tab \tab \hich\af2\dbch\af13\loch\f2     SocketChannel client = server.accept();
\par \tab \tab \tab \hich\af2\dbch\af13\loch\f2     // Non Blocking I/O
\par \tab \tab \tab \hich\af2\dbch\af13\loch\f2     client.configureBlocking(false);
\par \tab \tab \tab \hich\af2\dbch\af13\loch\f2     // recording to the selector (reading)
\par \tab \tab \tab \hich\af2\dbch\af13\loch\f2     client.register(selector, SelectionKey.OP_READ);
\par 
\par \tab \tab \tab \hich\af2\dbch\af13\loch\f2     Connection connection = new Connection(
\par }\pard \s17\ql \fi720\li3600\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin3600\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 generator.getNextUUID().toString(), 
\par \hich\af2\dbch\af13\loch\f2 this, client.socket());
\par }\pard \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \tab \tab \tab \hich\af2\dbch\af13\loch\f2     connectionIdToChannel.put(connection.getId(), client);
\par \tab \tab \tab \hich\af2\dbch\af13\loch\f2     channelToConnection.put(c\hich\af2\dbch\af13\loch\f2 lient, connection);
\par }\pard\plain \s16\ql \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5380226 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\f2\fs16\insrsid5380226 \hich\af2\dbch\af13\loch\f2 
                                  }{\f2\fs16\insrsid3422423 
\par \hich\af2\dbch\af13\loch\f2                                   // Notify all handlers onConnect(connection)
\par }\pard\plain \s17\ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid5199142 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {
\f2\fs16\insrsid5199142\charrsid5199142 \hich\af2\dbch\af13\loch\f2                         }{\f2\fs16\insrsid5199142 \hich\af2\dbch\af13\loch\f2    I}{\f2\fs16\insrsid5199142\charrsid5199142 \hich\af2\dbch\af13\loch\f2 
terator connIter = this.handlers.values().iterator(); }{\f2\fs16\insrsid5199142 
\par \hich\af2\dbch\af13\loch\f2                            while(}{\f2\fs16\insrsid5199142\charrsid5199142 \hich\af2\dbch\af13\loch\f2 connIt\hich\af2\dbch\af13\loch\f2 er.hasNext()) \{
\par \hich\af2\dbch\af13\loch\f2    }{\f2\fs16\insrsid5199142 \hich\af2\dbch\af13\loch\f2     }{\f2\fs16\insrsid5199142\charrsid5199142 \hich\af2\dbch\af13\loch\f2                          ((Handler) connIter.next()).onConnect(connection);
\par }{\f2\fs16\insrsid5199142 \hich\af2\dbch\af13\loch\f2    }{\f2\fs16\insrsid5199142\charrsid5199142 \hich\af2\dbch\af13\loch\f2                         \}}{\f2\fs16\insrsid5199142 
\par \tab \tab \hich\af2\dbch\af13\loch\f2     }{\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 // if isReadable = true
\par }\pard \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \tab \tab \hich\af2\dbch\af13\loch\f2     // then the server is ready to read
\par \tab \tab \hich\af2\dbch\af13\loch\f2     \} else if (key.isReadable()) \{
\par 
\par \tab \tab \tab \hich\af2\dbch\af13\loch\f2     final Socke\hich\af2\dbch\af13\loch\f2 tChannel client = (SocketChannel) key.channel();
\par 
\par \tab \tab \tab \hich\af2\dbch\af13\loch\f2     // read request message
\par }\pard \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid5199142 {\f2\fs16\insrsid5199142 \hich\af2\dbch\af13\loch\f2                     }{\f2\fs16\insrsid4801372\charrsid5199142 
\hich\af2\dbch\af13\loch\f2        // Read byte coming from the client}{\f2\fs16\insrsid5317412 \hich\af2\dbch\af13\loch\f2 , see 1.3.5}{\f2\fs16\insrsid4801372\charrsid5199142 
\par }{\f2\fs16\insrsid5199142 \hich\af2\dbch\af13\loch\f2                            }{\f2\fs16\insrsid4801372\charrsid5199142 \hich\af2\dbch\af13\loch\f2 ByteBuffer buffer = readMessage(client);}{\f2\fs16\insrsid4801372 
\par }\pard\plain \s16\ql \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5199142 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid5199142\charrsid5199142 
\par }\pard \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \tab \tab \tab \tab \hich\af2\dbch\af13\loch\f2    \hich\af2\dbch\af13\loch\f2  // transfer buffer to Message obejct \tab 
\par }\pard\plain \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\f2\fs16\insrsid4801372 \tab \tab \tab 
\hich\af2\dbch\af13\loch\f2     Handler handler = getHandler(request.getHandlerId());}{\f2\fs16\lang1033\langfe2052\langfenp2052\insrsid4801372 
\par }\pard\plain \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4801372 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\lang1033\langfe2052\langfenp2052\insrsid4801372 \tab \tab 
\tab \tab }{\lang1033\langfe2052\langfenp2052\insrsid4801372 \hich\af1\dbch\af13\loch\f1        }{\f2\fs16\lang1033\langfe2052\langfenp2052\insrsid4801372\charrsid8596901 \hich\af2\dbch\af13\loch\f2 If (handler == null) \{
\par \tab \tab \tab \tab \hich\af2\dbch\af13\loch\f2        \tab Continue;\tab 
\par \tab \tab \tab \tab \hich\af2\dbch\af13\loch\f2     \}\tab \tab 
\par }\pard\plain \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\f2\fs16\insrsid4801372 \tab \tab \tab 
\hich\af2\dbch\af13\loch\f2     Connection connection = (Connection) channelToConnection.get(client);
\par \tab \tab \tab \hich\af2\dbch\af13\loch\f2     ha\hich\af2\dbch\af13\loch\f2 ndler.handleRequest(connection, request);
\par \tab \tab \hich\af2\dbch\af13\loch\f2     \}
\par \tab \hich\af2\dbch\af13\loch\f2     \}
\par \hich\af2\dbch\af13\loch\f2     \}
\par \}\hich\af2\dbch\af13\loch\f2  catch (Exception e) \{
\par \}\hich\af2\dbch\af13\loch\f2  finally \{
\par \hich\af2\dbch\af13\loch\f2     started = false;
\par \hich\af2\dbch\af13\loch\f2     // close everything
\par \}}{\insrsid4801372 
\par {\listtext\pard\plain\s3 \i\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid4801372 \hich\af1\dbch\af13\loch\f1 1.3.4\tab}}\pard\plain \s3\qj \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid4801372 \i\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 \hich\af1\dbch\af13\loch\f1 
Writing messages through TCP/IP
\par }\pard\plain \s17\ql \fi720\li0\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4801372 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 
\hich\af1\dbch\af13\loch\f1 The following code can be used to write a message to a SocketChannel:
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4801372 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\fs16\insrsid4801372\charrsid12156654 
\par }\pard\plain \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14430908 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\f2\fs16\insrsid4801372\charrsid14430908 
\hich\af2\dbch\af13\loch\f2 /\hich\af2\dbch\af13\loch\f2 / Wraps byte array size and byte array contents into a byte buffer array
\par \hich\af2\dbch\af13\loch\f2 byte[] bytes = messageFactory.serializeMessage(request);
\par \hich\af2\dbch\af13\loch\f2 ByteBuffer lengthBuffer = (ByteBuffer) ByteBuffer.allocate(4).putInt(bytes.length).flip();
\par 
\par \hich\af2\dbch\af13\loch\f2 // Wrap request bytes
\par \hich\af2\dbch\af13\loch\f2 ByteBuffer buffer = ByteBuffer.wrap(bytes);
\par \hich\af2\dbch\af13\loch\f2 this.sChannel.write(new ByteBuffer[] \{lengthBuffer, buffer\})
\par }\pard\plain \s3\qj \fi720\li0\ri0\keepn\nowidctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid4801372 \i\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\i0\f2\fs16\insrsid4801372 
\par {\listtext\pard\plain\s3 \i\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid4801372 \hich\af1\dbch\af13\loch\f1 1.3.5\tab}}\pard \s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid4801372 {\insrsid4801372 \hich\af1\dbch\af13\loch\f1 Reading message from TCP/IP
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4801372 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372\charrsid2256958 
\par }\pard\plain \s17\ql \fi720\li0\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4801372 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 
\hich\af1\dbch\af13\loch\f1 The following code can be used to read a message from a SocketChannel:
\par }\pard \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 // Read byte coming from the client
\par \hich\af2\dbch\af13\loch\f2 ByteBuff\hich\af2\dbch\af13\loch\f2 er buffer = ByteBuffer.allocate(4);
\par \hich\af2\dbch\af13\loch\f2 client.read(buffer);
\par \hich\af2\dbch\af13\loch\f2 buffer.flip();
\par \hich\af2\dbch\af13\loch\f2 int size = buffer.getInt();
\par \hich\af2\dbch\af13\loch\f2 buffer = ByteBuffer.allocate(size);
\par \hich\af2\dbch\af13\loch\f2 client.read(buffer);
\par \hich\af2\dbch\af13\loch\f2 buffer.flip();
\par \hich\af2\dbch\af13\loch\f2 // ignore badly formatted requests (to add code)
\par }{\f2\fs16\insrsid4801372\charrsid4801372 \hich\af2\dbch\af13\loch\f2 Message request = }{\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 messageFactory.}{\f2\fs16\insrsid13990177 \hich\af2\dbch\af13\loch\f2 de\hich\af2\dbch\af13\loch\f2 serialize}{
\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 Message(buf}{\f2\fs16\lang1033\langfe2052\langfenp2052\insrsid747324 \hich\af2\dbch\af13\loch\f2 fer}{\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 .array())}{
\f2\fs16\insrsid4801372\charrsid4801372 \hich\af2\dbch\af13\loch\f2 ;
\par {\listtext\pard\plain\s3 \i\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid4801372 \hich\af1\dbch\af13\loch\f1 1.3.6\tab}}\pard\plain \s3\qj \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid4801372 \i\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 \hich\af1\dbch\af13\loch\f1 
Limiting number of simultaneously handled requests
\par }\pard\plain \s17\ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 
\hich\af1\dbch\af13\loch\f1 The Handler.handleRequest method is supposed to implement a queue mechanism for the request handling in the onRequest method. The algorithm is:
\par }\pard \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 - enqueue (connection, r\hich\af2\dbch\af13\loch\f2 equest)
\par \hich\af2\dbch\af13\loch\f2 - if currentRequests < maxRequests then 
\par }\pard \s17\ql \fi720\li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 currentRequests++
\par \hich\af2\dbch\af13\loch\f2 spawn new thread
\par }\pard\plain \s16\ql \li0\ri0\sb120\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4801372 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 \tab }{\insrsid4801372 
\hich\af1\dbch\af13\loch\f1 The spawned threads do the following:}{\insrsid4801372\charrsid9780290 
\par }\pard\plain \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\f2\fs16\insrsid4801372 
\hich\af2\dbch\af13\loch\f2 - while queue is not empty
\par \hich\af2\dbch\af13\loch\f2 -\tab dequeue (connection, request) \tab 
\par \hich\af2\dbch\af13\loch\f2 -\tab call onRequest(connection, request) (implemented by each subclass).
\par }\pard \s17\ql \fi720\li720\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 currentRequests\hich\f2 \emdash 
\par }\pard\plain \s16\ql \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4801372 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 \tab \tab }{
\fs16\insrsid4801372\charrsid9904220 \hich\af1\dbch\af13\loch\f1 connection.getIPServer().closeConnection(connection.getId());}{\fs16\insrsid4801372 
\par }\pard \s16\ql \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 {\insrsid4801372 \hich\af1\dbch\af13\loch\f1 
This mechanism will ensure that the number of threads running onRequest simultaneously will be within the maxRequests limit.
\par }\pard\plain \s17\ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 
\hich\af1\dbch\af13\loch\f1 Note that any access to the counter (get value and\hich\af1\dbch\af13\loch\f1  increment, decrement) is done inside a synchronized(this) block. Warning, get value and increment must be executed atomically.
\par {\listtext\pard\plain\s3 \i\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid4801372 \hich\af1\dbch\af13\loch\f1 1.3.7\tab}}\pard\plain \s3\qj \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid4801372 \i\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 \hich\af1\dbch\af13\loch\f1 
Connecting to the server
\par }\pard\plain \s17\ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 
\hich\af1\dbch\af13\loch\f1 The following code can be used in the client class to connect to the server:
\par }\pard\plain \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4801372 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 \tab }{\fs16\insrsid4801372\charrsid5177671 
\hich\af1\dbch\af13\loch\f1 this.sChannel = Soc\hich\af1\dbch\af13\loch\f1 ketChannel.open();
\par 
\par }\pard \s16\ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4801372 {\fs16\insrsid4801372\charrsid5177671 \hich\af1\dbch\af13\loch\f1 /**
\par \hich\af1\dbch\af13\loch\f1  * Used for blocking implementation. We not use Channel's blocking, for it will block forever for the read
\par \hich\af1\dbch\af13\loch\f1  * method.
\par \hich\af1\dbch\af13\loch\f1  */
\par \hich\af1\dbch\af13\loch\f1 this.selector = Selector.open();
\par 
\par \hich\af1\dbch\af13\loch\f1 // configure SocketChannel with blocking style to ensure connect successful
\par \hich\af1\dbch\af13\loch\f1 this.sChannel.configureBlocking(true);
\par 
\par \hich\af1\dbch\af13\loch\f1 this.sChannel.connect(new InetSocketAddress(address, port));
\par 
\par \hich\af1\dbch\af13\loch\f1 // Register selector only under non-blocking mode
\par \hich\af1\dbch\af13\loch\f1 this.sChannel.configureBlocking(false);
\par \hich\af1\dbch\af13\loch\f1 this.sChannel.register(selector, SelectionKey.OP_READ);}{\fs16\insrsid4801372\charrsid5177671 
\par {\listtext\pard\plain\s3 \i\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid4801372 \hich\af1\dbch\af13\loch\f1 1.3.8\tab}}\pard\plain \s3\qj \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid4801372 \i\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4801372 \hich\af1\dbch\af13\loch\f1 Qu
\hich\af1\dbch\af13\loch\f1 euing responses
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4801372 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid4801372 \hich\af1\dbch\af13\loch\f1 
The IPClient.receiveResponse method reads from the server a response given the request id. If the response queue is not empty, a message is looked up there first. If the queue is empty or no message was found, messages are read from the ser
\hich\af1\dbch\af13\loch\f1 
ver until one is found. In non-blocking mode messages are read but only as long as they are available. If a message is read but does not match the requestId, it is put in the queue for future receiveResponse calls. The algorithm is the following:
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4801372 {\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2         \hich\af2\dbch\af13\loch\f2 Message result  = (Message) responses.get(requestId);
\par \hich\af2\dbch\af13\loch\f2         if (result != null) \{
\par \hich\af2\dbch\af13\loch\f2     \tab \tab return result;
\par \hich\af2\dbch\af13\loch\f2     \tab \}
\par \hich\af2\dbch\af13\loch\f2     \tab while (true) \{
\par \tab \hich\af2\dbch\af13\loch\f2     \tab channel.configureBlocking(blocking);
\par \tab \hich\af2\dbch\af13\loch\f2     \tab 
\par \tab \tab \hich\af2\dbch\af13\loch\f2 // Read byte coming from the client\tab \tab \tab \tab \tab \tab 
\par \tab \tab \hich\af2\dbch\af13\loch\f2 ByteBuffer buffer = ByteBuff\hich\af2\dbch\af13\loch\f2 er.allocate(4);
\par \tab \tab \hich\af2\dbch\af13\loch\f2 int read = channel.read(buffer);
\par \tab \tab \hich\af2\dbch\af13\loch\f2 if (blocking & read <= 0) \{
\par \tab \tab \tab \hich\af2\dbch\af13\loch\f2 return null;
\par \tab \tab \}
\par \tab \tab \hich\af2\dbch\af13\loch\f2 channel.configureBlocking(false);
\par \tab \tab \hich\af2\dbch\af13\loch\f2 channel.read(buffer);\tab \tab 
\par \tab \tab \hich\af2\dbch\af13\loch\f2 buffer.flip();
\par \tab \tab \hich\af2\dbch\af13\loch\f2 int size = buffer.getInt();
\par \tab \tab \hich\af2\dbch\af13\loch\f2 buffer = ByteBuffer.allocate(size);
\par \tab \tab \hich\af2\dbch\af13\loch\f2 channel.read(buffer);
\par \tab \tab \hich\af2\dbch\af13\loch\f2 buffer.flip();
\par \tab 
\par \tab \tab \hich\af2\dbch\af13\loch\f2 // ignore badly formatted requests (to add code)
\par \tab \hich\af2\dbch\af13\loch\f2     \tab Message message = }{\f2\fs16\insrsid14430908 \hich\af2\dbch\af13\loch\f2 messageFactory.getMessage(buffer.array())}{\f2\fs16\insrsid4801372 \hich\af2\dbch\af13\loch\f2 ;
\par \tab \tab \hich\af2\dbch\af13\loch\f2 if (message.getRequestId().equals(requestId)) \{
\par \tab \tab \tab \hich\af2\dbch\af13\loch\f2 return message;
\par \tab \tab \}
\par \tab \tab \hich\af2\dbch\af13\loch\f2 responses.put(message.\hich\af2\dbch\af13\loch\f2 getRequestId(), message);
\par \hich\af2\dbch\af13\loch\f2     \tab \}
\par {\listtext\pard\plain\s3 \i\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid9374656 \hich\af1\dbch\af13\loch\f1 1.3.9\tab}}\pard\plain \s3\qj \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid9374656 \i\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid9374656 \hich\af1\dbch\af13\loch\f1 
Serializing message via MessageFacotry}{\insrsid9374656\charrsid9374656 
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9374656 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\f2\fs16\insrsid10760316 \hich\af2\dbch\af13\loch\f2 
// Get serializer class name from the message
\par }{\f2\fs16\insrsid9374656 \hich\af2\dbch\af13\loch\f2 String serializerClassName = message.getSerializerType();
\par }{\f2\fs16\insrsid10760316 
\par \hich\af2\dbch\af13\loch\f2 // Get the serializer from the map
\par \hich\af2\dbch\af13\loch\f2 MessageSerializer serializer = seriali\hich\af2\dbch\af13\loch\f2 zerMap.get(serializerClassName);}{\f2\fs16\insrsid9374656 
\par }{\f2\fs16\insrsid10760316 
\par \hich\af2\dbch\af13\loch\f2 // If the serializer is new
\par \hich\af2\dbch\af13\loch\f2 If(serializer == null) \{
\par \hich\af2\dbch\af13\loch\f2     // Create a new instance via reflection and add it in the map
\par \hich\af2\dbch\af13\loch\f2     serializer = Class.forName(serializerClassName).newInstance();
\par \hich\af2\dbch\af13\loch\f2     serializerMap.put(serializerClas\hich\af2\dbch\af13\loch\f2 sName, serializer);
\par \}
\par 
\par \hich\af2\dbch\af13\loch\f2 // Create output streams
\par \hich\af2\dbch\af13\loch\f2 ByteArrayOutputStream baos = new ByteArrayOutputStream();
\par \hich\af2\dbch\af13\loch\f2 DataOutputStream output = new DataOutputStream(baos);
\par 
\par \hich\af2\dbch\af13\loch\f2 // Write the class name first
\par \hich\af2\dbch\af13\loch\f2 output.writeUTF(serializerClassName);
\par 
\par \hich\af2\dbch\af13\loch\f2 // Serialize message
\par \hich\af2\dbch\af13\loch\f2 serializer.serializeMessage(message, output);
\par 
\par \hich\af2\dbch\af13\loch\f2 // Close stream and return data
\par \hich\af2\dbch\af13\loch\f2 output.close();
\par \hich\af2\dbch\af13\loch\f2 return baos.toByteArray();
\par {\listtext\pard\plain\s3 \i\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid10760316 \hich\af1\dbch\af13\loch\f1 1.3.10\tab}}\pard\plain \s3\qj \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid10760316 \i\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid10760316 \hich\af1\dbch\af13\loch\f1 
Deserializing message via MessageFactory}{\insrsid10760316\charrsid10760316 
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9374656 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\f2\fs16\insrsid10760316 \hich\af2\dbch\af13\loch\f2 
// Create input streams
\par \hich\af2\dbch\af13\loch\f2 ByteArrayInputStream bais = new ByteArrayInputStream(data);
\par \hich\af2\dbch\af13\loch\f2 Da\hich\af2\dbch\af13\loch\f2 taInputStream input = new DataInputStream(}{\f2\fs16\lang1033\langfe2052\langfenp2052\insrsid747324 \hich\af2\dbch\af13\loch\f2 b\hich\af2\dbch\af13\loch\f2 ais}{\f2\fs16\insrsid10760316 
\hich\af2\dbch\af13\loch\f2 );
\par 
\par \hich\af2\dbch\af13\loch\f2 // Read the serializer class name from the stream
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid10760316 {\f2\fs16\insrsid10760316 \hich\af2\dbch\af13\loch\f2 String serializerClassName = input.readUTF();
\par 
\par \hich\af2\dbch\af13\loch\f2 // Get the serializer from the map
\par \hich\af2\dbch\af13\loch\f2 MessageSerializer serializer = serializerMap.get(serializerClassName);
\par 
\par \hich\af2\dbch\af13\loch\f2 /\hich\af2\dbch\af13\loch\f2 / If the serializer is new
\par \hich\af2\dbch\af13\loch\f2 If(serializer == null) \{
\par \hich\af2\dbch\af13\loch\f2     // Create a new instance via reflection and add it in the map
\par \hich\af2\dbch\af13\loch\f2     serializer = Class.forName(serializerClassName).newInstance();
\par \hich\af2\dbch\af13\loch\f2     serializerMap.put(serializerClassName, serializer);
\par \}
\par 
\par \hich\af2\dbch\af13\loch\f2 // Deserialize the message
\par \hich\af2\dbch\af13\loch\f2 Message message = serializer.deserializeMessage(input);
\par 
\par \hich\af2\dbch\af13\loch\f2 // Close the stream and return data
\par \hich\af2\dbch\af13\loch\f2 input.close();
\par \hich\af2\dbch\af13\loch\f2 return message;}{\f2\fs16\insrsid10760316\charrsid9374656 
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 1.4\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Component Class Overview
\par }\pard\plain \qj \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14430908 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\f1\insrsid14430908 \tab }{\b\f1\fs20\insrsid14430908 
\hich\af1\dbch\af13\loch\f1 IPServerManager}{\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 :
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14430908 {\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 The IPServerManager class is used to manage the instances \hich\af1\dbch\af13\loch\f1 
of the IPServer class. This is the main usage of this class, containing named IPServer instances. Note that IP server names are case sensitive. Methods to add, remove, clear and get IP server instances are provided to fulfill this task.  
\par \hich\af1\dbch\af13\loch\f1 Using this class \hich\af1\dbch\af13\loch\f1 
is not required. The user can use IP server instances without registering them with the manager. This class is only provided as a convenient way to keep and access the IP server instances inside an application.  
\par \hich\af1\dbch\af13\loch\f1 This class has also the role of handling in\hich\af1\dbch\af13\loch\f1 
stantiation and configuration of the IP server implementations using a configuration file, without writing any code. The user can either configure everything through code using the provided API or can simply write it all in a configuration file. The manag
\hich\af1\dbch\af13\loch\f1 e\hich\af1\dbch\af13\loch\f1 r reads the configuration file and dynamically creates instances of the IP servers. It also creates the handlers for the IP server using reflection.  
\par \hich\af1\dbch\af13\loch\f1 This class is a singleton. There is no reason in having multiple managers since multiple IP server instan\hich\af1\dbch\af13\loch\f1 ces can be defined.   
\par }\pard \qj \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14430908 {\f1\insrsid14430908 \tab }{\b\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 IPServer}{\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 :

\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14430908 {\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 The IPServer class represents the server-side of this component.  
\par \hich\af1\dbch\af13\loch\f1 This class implements a non-blocking server that uses modern java.nio features for socket connection management instead of the classic multithreaded techni\hich\af1\dbch\af13\loch\f1 
ques. This allows far greater scalability because the socket accepting and request reads are done using a single thread (a non java.nio implementation will use one plus number of accepted connections threads).  
\par \hich\af1\dbch\af13\loch\f1 Note that this does not mean threads aren't \hich\af1\dbch\af13\loch\f1 
used at all. The java.nio takes care that everything that is socket related, including request reading, is done using one thread. But the actual request processing must be executed multithreaded. The number of threads per handler can be configured at the 
\hich\af1\dbch\af13\loch\f1 H\hich\af1\dbch\af13\loch\f1 andler level.  
\par \hich\af1\dbch\af13\loch\f1 The server only takes care of reading requests and writing responses. The actual requests are handled by the Handler subclasses. The server dispatches the requests to the handlers according to the handler configuration.  

\par \hich\af1\dbch\af13\loch\f1 The API exposed by\hich\af1\dbch\af13\loch\f1  this class allows server configuration (host, port, maximum number of connections), request handler configuration and methods to start and stop the server.   
\par }\pard \qj \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14430908 {\f1\insrsid14430908 \tab }{\b\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 Connection}{\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 :

\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14430908 {\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 The Connection class encapsulates information about a client connection on the serv
\hich\af1\dbch\af13\loch\f1 er side. This class is only used to provide the user with convenient information about the client connection.   
\par }\pard \qj \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14430908 {\f1\insrsid14430908 \tab }{\b\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 Message}{\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 :

\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14430908 {\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 The Message interface represents the messages that are sent between client and server.  

\par \hich\af1\dbch\af13\loch\f1 
A message can be either a request (client to server) or response (server to client). But this only applies to a typical client server architecture where the server responds to requests. It can be the other way around in some situations or even mixed. For 
\hich\af1\dbch\af13\loch\f1 e\hich\af1\dbch\af13\loch\f1 xample, the client connects and the server sends the id yourself request.  
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11036559 {\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 
For this reason and because requests and responses have the same structure, we have a general Message class instead of two}{\f1\fs20\insrsid11036559 \hich\af1\dbch\af13\loch\f1  Request and Response classes. 
\par }\pard \qj \fi720\li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11036559 {\b\f1\fs20\insrsid11036559 \hich\af1\dbch\af13\loch\f1 SimpleSerializableMessage}{\b\f1\fs20\insrsid11036559\charrsid11036559 
\hich\af1\dbch\af13\loch\f1 :
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11036559 {\f1\fs20\insrsid14771534 \hich\af1\dbch\af13\loch\f1 It is a}{\f1\fs20\insrsid11036559 \hich\af1\dbch\af13\loch\f1 
 simple implementation of Message interface which carries no data. It implements the java.io.Serializable interface and use SerializableMessageSerializer to serialize and deserialize. }{\f1\fs20\insrsid14904167 \hich\af1\dbch\af13\loch\f1 
It also serves as a base class of all messages using Java\hich\f1 \rquote \loch\f1 s seri\hich\af1\dbch\af13\loch\f1 alization algorithm. }{\f1\fs20\insrsid11036559 \hich\af1\dbch\af13\loch\f1 
An abstract Message implementation implements additional interface is not provided, since usually serialization framework requires all super classes to implement certain interface.
\par }\pard \qj \fi720\li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11036559 {\b\f1\fs20\insrsid11036559 \hich\af1\dbch\af13\loch\f1 MessageSerializer}{\b\f1\fs20\insrsid11036559\charrsid11036559 
\hich\af1\dbch\af13\loch\f1 :
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11036559 {\f1\fs20\insrsid11036559 \hich\af1\dbch\af13\loch\f1 
The MessageSerializer interface encapsulates the algorithm of serialization and deserialization for certain classes. The serialization and deserialization algorithm in one implementation must be a pair, i.e. the data serialized by one implementation must 
\hich\af1\dbch\af13\loch\f1 b\hich\af1\dbch\af13\loch\f1 e able to deserialized by the same instance. This class is used on both server and client side. With this interface, custom serialization can be easily adopted to existing applications.
\par }{\f1\fs20\insrsid14904167 \hich\af1\dbch\af13\loch\f1 The reason why serialization is not integrated into Message is that, o\hich\af1\dbch\af13\loch\f1 
ne serialization algorithm may apply to a group of Message implementations. If the serialization is in the Message implementation itself, redundancy may exist.
\par }\pard \qj \fi720\li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11036559 {\b\f1\fs20\insrsid11036559 \hich\af1\dbch\af13\loch\f1 SerializableMessageSerializer}{\b\f1\fs20\insrsid11036559\charrsid11036559 
\hich\af1\dbch\af13\loch\f1 :
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11036559 {\f1\fs20\insrsid14771534 \hich\af1\dbch\af13\loch\f1 This is a}{\f1\fs20\insrsid14904167 \hich\af1\dbch\af13\loch\f1 
n implementation of MessageSerializer interface to provi\hich\af1\dbch\af13\loch\f1 
de the functionality of serializing Message instances using Java serialization algorithm. All messages serialized by this class must implement java.io.Serializable interface as required by Java serialization framework. It is also the serializer used by Si
\hich\af1\dbch\af13\loch\f1 m\hich\af1\dbch\af13\loch\f1 pleSerializableMessage class.}{\f1\fs20\insrsid11036559 
\par }\pard \qj \fi720\li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14904167 {\b\f1\fs20\insrsid14904167 \hich\af1\dbch\af13\loch\f1 MessageFactory}{\b\f1\fs20\insrsid14904167\charrsid11036559 \hich\af1\dbch\af13\loch\f1 :

\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14904167 {\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid6884544 \hich\af1\dbch\af13\loch\f1 
MessageFactory interface provides a single entry for common tasks which are performed on a Message instance. The tasks include creating a new Message instance, deserializing Message data and serializing a Messa\hich\af1\dbch\af13\loch\f1 
ge instance. The creation of a new Message instance is done by a given name representing the Message implementation, the request ID and the handler ID. It also provides transparent serialization and deserialization process by automatically locating proper
\hich\af1\dbch\af13\loch\f1  \hich\af1\dbch\af13\loch\f1 MessageSerializer implementation.}{\f1\fs20\insrsid14904167 
\par }\pard \qj \fi720\li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14771534 {\b\f1\fs20\insrsid3090399 \hich\af1\dbch\af13\loch\f1 DefaultMessageFactory}{\b\f1\fs20\insrsid14771534\charrsid11036559 
\hich\af1\dbch\af13\loch\f1 :
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14771534 {\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid3090399 \hich\af1\dbch\af13\loch\f1 DefaultMessageFactory}{
\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid14771534 \hich\af1\dbch\af13\loch\f1  is the default MessageFactory implementation. It maintains a mapping between names and Message implementations. Initially, the mapping is}{
\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid15224535 \hich\af1\dbch\af13\loch\f1  loaded from the configuration, either f\hich\af1\dbch\af13\loch\f1 rom the default namespace \hich\f1 \lquote }{
\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid15224535\charrsid15224535 \hich\af1\dbch\af13\loch\f1 com.topcoder.processor.ipserver.message}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid15224535 \loch\af1\dbch\af13\hich\f1 \rquote \loch\f1 
, or from a given namespace. }{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid14771534 \hich\af1\dbch\af13\loch\f1 The mapping can be programmatically modified and queried via the\hich\af1\dbch\af13\loch\f1 
 provided methods. When serializing the data, information identifying the MessageSerializer class is added. Such information is used to quickly identify proper MessageSerializer when deserializing.}{\f1\fs20\insrsid14771534 
\par }\pard \qj \fi720\li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14430908 {\b\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 Handler}{\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 :
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14430908 {\f1\fs20\insrsid14430908\charrsid9780290 \hich\af1\dbch\af13\loch\f1 The handler \hich\af1\dbch\af13\loch\f1 
class abstracts the server side notification and request processing API. The notifications cover successful connection and request arrival. The request arrival is not only a notification method because the implementation}{\f1\fs20\insrsid14430908 
\hich\af1\dbch\af13\loch\f1 s}{\f1\fs20\insrsid14430908\charrsid9780290 \hich\af1\dbch\af13\loch\f1  are expected to respond to it.  
\par \hich\af1\dbch\af13\loch\f1 T\hich\af1\dbch\af13\loch\f1 
his class also defines a maximum connection number, indicating how many requests can be handled simultaneously. The meaning of this number is that at most that many threads can be executing the onRequest method at one time. If more requests arri}{
\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 ve, then th\hich\af1\dbch\af13\loch\f1 ey are queued unti}{\f1\fs20\insrsid14430908\charrsid9780290 \hich\af1\dbch\af13\loch\f1 l a thread is available to handle it.  
\par \hich\af1\dbch\af13\loch\f1 The users are expected to subclass this class and override some of or all three notification methods (onConnect, onRequest). The default implementations of these methods do nothing (excep}{\f1\fs20\insrsid14430908 
\hich\af1\dbch\af13\loch\f1 t argument \hich\af1\dbch\af13\loch\f1 validation).
\par }\pard \qj \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14430908 {\f1\insrsid14430908 \tab }{\b\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 IPClient}{\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 :

\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14430908 {\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 
The IPClient class represents the client side of this component. This class contains method that can be used by the client side to communicate with the server.  
\par \hich\af1\dbch\af13\loch\f1 There are configuration methods, connect, disconnect and connection qu\hich\af1\dbch\af13\loch\f1 ery methods and methods for sending and receiving messages in a synchronous or asynchronous manner (blocking or non-blocking).  

\par \hich\af1\dbch\af13\loch\f1 This class also implements a response queuing mechanism. Since all client-server communication can be asynchronous, multiple re\hich\af1\dbch\af13\loch\f1 
quests can be sent before receiving any responses. Even in synchronous mode, the client can send multiple requests to server. The server may respond to them in any order (even for the same handler, because the server calls the handler using different thre
\hich\af1\dbch\af13\loch\f1 a\hich\af1\dbch\af13\loch\f1 
ds). The user has a method to get a message given the requestId. But if the first available message is not for that request, it must be skipped and another read. Skipping does not mean losing it. It is simply put in the responses queue. Note that queue is
\hich\af1\dbch\af13\loch\f1  \hich\af1\dbch\af13\loch\f1 not an appropriate term since there is no order for the responses. That's because the server does not guarantee any order for the responses.   
\par }{\b\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 KeepAliveHandler}{\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 :
\par \hich\af1\dbch\af13\loch\f1 Handler subclass that implements keep alive handling on the server side.  
\par \hich\af1\dbch\af13\loch\f1 For servers that ne\hich\af1\dbch\af13\loch\f1 ed to have such capability the user will have to add an instance of this class as handler.  
\par \hich\af1\dbch\af13\loch\f1 This class only overrides the onRequest method. It will simply send back the request message it gets.}{\f2\fs16\insrsid14430908 \hich\af2\dbch\af13\loch\f2  
\par }{\b\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 KeepAliveIPClient}{\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 :
\par \hich\af1\dbch\af13\loch\f1 Subclass of the IPClient class that imple\hich\af1\dbch\af13\loch\f1 ments a client that keeps alive a connection by sending dummy messages at regular intervals.  
\par \hich\af1\dbch\af13\loch\f1 The class overrides the connect and disconnect methods. The connect method calls the super connect and then starts the keep alive thread in the background (using\hich\af1\dbch\af13\loch\f1 
 the Heartbeat component). The disconnect method calls the super disconnect and stops the keep alive thread.  
\par \hich\af1\dbch\af13\loch\f1 The keepAlive method (called at regular intervals by Heartbeat) simply sends a dummy Message and reads the response.
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 1.5\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Component Exception Defi
\hich\af1\dbch\af13\loch\f1 nitions
\par }\pard\plain \qj \fi720\li0\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4466006 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\b\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 
Exception ConfigurationException}{\b\f1\fs20\insrsid14430908\charrsid4466006 \hich\af1\dbch\af13\loch\f1 :
\par }\pard\plain \s16\qj \li720\ri0\sb120\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14430908 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid14430908 \hich\af1\dbch\af13\loch\f1 
Exception used to signal configuration related problems.  
\par \hich\af1\dbch\af13\loch\f1 It is used to wrap any exceptions related to the configuration data or that indicate a problem with the configuration file: configuration manager exception\hich\af1\dbch\af13\loch\f1 
s indicating bad or missing file, reflection exceptions indicating bad class names. It may also be used to indicate missing properties.  
\par \hich\af1\dbch\af13\loch\f1 Please see the sample configuration files for details.  
\par \hich\af1\dbch\af13\loch\f1 The message passed in the constructor should be something mea\hich\af1\dbch\af13\loch\f1 ningful to help the user to find the problem. In addition to the message, the actual exception (if any) is passed to the user.
\par }\pard\plain \qj \fi720\li0\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14430908 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\b\f1\fs20\insrsid14430908 
\hich\af1\dbch\af13\loch\f1 Exception ProcessingException}{\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 :
\par }\pard \qj \li720\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14430908 {\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 
The ProcessingException exception is used to wrap any implementation specific exception that may occur while servicing notifications in the handler subclasses.  
\par \hich\af1\dbch\af13\loch\f1 For example, some handler implementation may work with files or with databases. This means I/O\hich\af1\dbch\af13\loch\f1 
 or SQL exceptions may occur. Such failures must be reported to the user, and that's what this exception is used for.  
\par \hich\af1\dbch\af13\loch\f1 Note that typically exceptions will be reported to the client, meaning the exception will be wrapped in a Message subclass. This excepti\hich\af1\dbch\af13\loch\f1 
on is only meant to be used to fatal exception that should halt the IP server. The handlers should not let exceptions out. They should catch them and log them in most cases. So typically this exception will be seldom used.
\par }\pard \qj \fi720\li0\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14430908 {\b\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 Exception MessageCreationExceptio\hich\af1\dbch\af13\loch\f1 n}{\f1\fs20\insrsid14430908 
\hich\af1\dbch\af13\loch\f1 :
\par }\pard\plain \s16\qj \li720\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14430908 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid14430908 \hich\af1\dbch\af13\loch\f1 This }{
\insrsid4466006 \hich\af1\dbch\af13\loch\f1 
custom exception is thrown if error occurs when creating, serialzing or deserializing messages. It serves as the base exception of all custom exceptions in the com.topcoder.processor.ipserver.message package. Usually, it wraps the original cause of
\hich\af1\dbch\af13\loch\f1  error.}{\insrsid14430908 
\par }{\insrsid4466006 \hich\af1\dbch\af13\loch\f1 
Typically, this exception is thrown when instantiation of a Message implementation fails. It may be caused by the constructor of Message implementation throws an exception, the Message implementation is an abstract class, proper constructor cannot 
\hich\af1\dbch\af13\loch\f1 be accessed, etc.
\par }\pard\plain \qj \fi720\li0\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4466006 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\b\f1\fs20\insrsid4466006 \hich\af1\dbch\af13\loch\f1 
Exception UnknownMessageException}{\f1\fs20\insrsid4466006 \hich\af1\dbch\af13\loch\f1 :
\par }\pard\plain \s16\qj \li720\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid4466006 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid4466006 \hich\af1\dbch\af13\loch\f1 
This custom exception is thrown if the name of a message type cannot be found in the MessageFactory or a proper MessageSerializer cannot be located to deserialize a Message.
\par \hich\af1\dbch\af13\loch\f1 Missing proper MessageSeriali\hich\af1\dbch\af13\loch\f1 zer can be two cases. }{\insrsid12482519 \hich\af1\dbch\af13\loch\f1 One}{\insrsid4466006 \hich\af1\dbch\af13\loch\f1  case is }{\insrsid12482519 
\hich\af1\dbch\af13\loch\f1 that }{\insrsid4466006 \hich\af1\dbch\af13\loch\f1 the MessageSerializer information exists at the beginning of the serialized data, but such class either cannot be found, or cannot be instantiated. }{\insrsid12482519 
\hich\af1\dbch\af13\loch\f1 This may happen when server-side or client-side has one missing Messa\hich\af1\dbch\af13\loch\f1 
geSerializer implementation. The other case is that the serialized data does not contain MessageSerializer information, which is also considered unknown message.}{\insrsid4466006 
\par }\pard\plain \qj \fi720\li0\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12482519 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\b\f1\fs20\insrsid12482519 
\hich\af1\dbch\af13\loch\f1 Exception MessageSerializationException}{\f1\fs20\insrsid12482519 \hich\af1\dbch\af13\loch\f1 :
\par }\pard\plain \s16\qj \li720\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid12482519 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid12482519 \hich\af1\dbch\af13\loch\f1 
This custom exception is thrown when any error occurs\hich\af1\dbch\af13\loch\f1  during serializing/deserializing process.
\par \hich\af1\dbch\af13\loch\f1 For example, when a Message cannot be serialized/deserialized by specific implementation of MessageSerializer due to any reason, such as I/O exception, corrupted data, etc., this exception is thrown. This exceptio
\hich\af1\dbch\af13\loch\f1 n should wrap any exceptions thrown by MessageSerializer implementations except NullPointerException and IllegalArgumentException. 
\par }\pard\plain \qj \li720\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14430908 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\b\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 
Exception IOException:}{\f1\fs20\insrsid14430908 
\par \hich\af1\dbch\af13\loch\f1 This exception is used all over the component and the cause will always be socket errors. This may be\hich\af1\dbch\af13\loch\f1 
 thrown while connecting a socket, while setting a server socket, while disconnecting, while reading and writing data and while accepting connections.
\par }{\b\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 Exception IllegalStateException}{\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 :
\par }\pard\plain \s16\qj \li720\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14430908 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid14430908 \hich\af1\dbch\af13\loch\f1 
This exception is thrown by all client and server configuration\hich\af1\dbch\af13\loch\f1 
s methods (modifiers), sending and receiving method, start, stop, connect and disconnect method, if the connected or started status is not valid (for example configuring a started or connected instance, starting, stopping, connecting and disconnecting twi
\hich\af1\dbch\af13\loch\f1 c\hich\af1\dbch\af13\loch\f1 e).
\par }\pard\plain \qj \fi720\li0\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14430908 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\b\f1\fs20\insrsid14430908 
\hich\af1\dbch\af13\loch\f1 Exception NullPointerException}{\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 :
\par }\pard\plain \s16\qj \li720\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14430908 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid14430908 \hich\af1\dbch\af13\loch\f1 
This exception is used in all classes for null arguments. Each method that used this exception has a javadoc tag explicitly mentioning it. In some cases one of the many arguments may be null. In those cases the javadoc c\hich\af1\dbch\af13\loch\f1 
learly mentions it. See the javadocs for method level details.
\par }\pard\plain \qj \fi720\li0\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14430908 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\b\f1\fs20\insrsid14430908 
\hich\af1\dbch\af13\loch\f1 Exception IllegalArgumentException}{\f1\fs20\insrsid14430908 \hich\af1\dbch\af13\loch\f1 :
\par }\pard\plain \s16\qj \li720\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid16585266 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid14430908 \hich\af1\dbch\af13\loch\f1 
This exception is used in all classes for invalid arguments. This is used for }{\insrsid1330860 \hich\af1\dbch\af13\loch\f1 empty names in MessageFactory, }{\insrsid14430908 \hich\af1\dbch\af13\loch\f1 integer argument range validation (port, connect
\hich\af1\dbch\af13\loch\f1 ion number) and when sending a message on an invalid connection id. Note that empty strings are allowed as names}{\insrsid1330860 \hich\af1\dbch\af13\loch\f1  in IPServerManager}{\insrsid14430908 \hich\af1\dbch\af13\loch\f1 
 and as ids}{\insrsid4736182 \hich\af1\dbch\af13\loch\f1  because it is so in IP Server 1.0}{\insrsid14430908 \hich\af1\dbch\af13\loch\f1 .}{\insrsid16585266 
\par }\pard \s16\ql \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid1330860 {\b\cf6\lang1033\langfe2052\langfenp2052\insrsid1330860\charrsid8798146 \hich\af1\dbch\af13\loch\f1 
Empty string means string of zero length or string full of whitespaces.}{\b\cf6\lang1033\langfe2052\langfenp2052\insrsid1330860\charrsid1330860 
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 1.6\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Th\hich\af1\dbch\af13\loch\f1 
read Safety
\par }\pard\plain \s16\qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid12482519 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid12482519 \hich\af1\dbch\af13\loch\f1 
Although not explicitly stated, it is obvious that due to the nature of this component, thread safety is a requirement, especially in the server side. Here is a discussion on how to make each class thread safe.
\par \hich\af1\dbch\af13\loch\f1 IPServerManager \hich\f1 \endash \hich\af1\dbch\af13\loch\f1 
 The access to the private map must be synchronized. The lock should be made on the map itself. Note that using a synchronized map implementation is not correct. The add method consists of two Map calls for example. Even if each of them is atomic, both to
\hich\af1\dbch\af13\loch\f1 g\hich\af1\dbch\af13\loch\f1 ether aren\hich\f1 \rquote \loch\f1 t. The singleton instantiation must also be synchronized.
\par \hich\af1\dbch\af13\loch\f1 IPServer \hich\f1 \endash \loch\f1  The access to the }{\insrsid1847108 \hich\af1\dbch\af13\loch\f1 handler}{\insrsid12482519 \hich\af1\dbch\af13\loch\f1 
 map must be synchronized. The lock should be made on the map itself, same as for IPServerManager. The access to the started attribute should be protec\hich\af1\dbch\af13\loch\f1 ting using a lock on the IPServer}{\insrsid1847108 
\hich\af1\dbch\af13\loch\f1  instance}{\insrsid12482519 \hich\af1\dbch\af13\loch\f1 . The configuration methods should run inside the lock for the started attribute.}{\insrsid1847108 \hich\af1\dbch\af13\loch\f1 
 The access to connectionIdToChannel map should be synchronized in run and sendResponse. When writing the channel using sendResponse,\hich\af1\dbch\af13\loch\f1  the channel itself should be synchronized.}{\insrsid12482519 
\par }{\insrsid12482519 \hich\af1\dbch\af13\loch\f1 Handler \hich\f1 \endash \loch\f1 
 The subclasses should implement onConnect and onRequest in a thread safe manner. The handleRequest method is delicate as thread safety is regarded. This method implements essentially a waiting queue for\hich\af1\dbch\af13\loch\f1 
 the onRequest method. It ensures that only the maximum number of threads can be inside the method at one time. This waiting mechanism is implemented used wait and notify. The access to the counter (currentRequests) need to be synchronized on the instance
\hich\af1\dbch\af13\loch\f1  \hich\af1\dbch\af13\loch\f1 itself. Note that the test in the while and the incrementation must be executed together, atomically.
\par \hich\af1\dbch\af13\loch\f1 Connection \hich\f1 \endash \loch\f1  It is not mutable.
\par \hich\af1\dbch\af13\loch\f1 SimpleSerializableMessage \hich\f1 \endash \loch\f1  It is not mutable.
\par \hich\af1\dbch\af13\loch\f1 SerializableMessageSerializer \hich\f1 \endash \loch\f1  It is stateless.
\par }{\insrsid3090399 \hich\af1\dbch\af13\loch\f1 DefaultMessageFactory}{\insrsid12482519 \hich\af1\dbch\af13\loch\f1  \hich\f1 \endash \loch\f1  Th\hich\af1\dbch\af13\loch\f1 e access to two mappings must be synchronized carefully. }{\insrsid6357146 
\hich\af1\dbch\af13\loch\f1 serializeMessage and getMessage(byte[]) should synchronize on serializer mapping. Other methods should synchronize on message type mapping.}{\insrsid12482519 
\par }{\insrsid12482519 \hich\af1\dbch\af13\loch\f1 IPClient \hich\f1 \endash \loch\f1  The access to the connected attribute must be sy\hich\af1\dbch\af13\loch\f1 
nchronized on the instance. The configuration methods must be executed inside the synchronized block for the connected attribute test. The access to responses must also be synchronized. Note that checking the size and taking a message must be executed ato
\hich\af1\dbch\af13\loch\f1 m\hich\af1\dbch\af13\loch\f1 ically.
\par \hich\af1\dbch\af13\loch\f1 KeepAliveHandler \hich\f1 \endash \loch\f1  Nothing special is needed. It inherits thread safety from the parent.
\par \hich\af1\dbch\af13\loch\f1 KeepAliveIPClient \hich\f1 \endash \loch\f1  The keepAlive method should use synchronization to avoid sending keep-alive messages before the responses are received (i}{\lang1033\langfe2052\langfenp2052\insrsid12482519 
\hich\af1\dbch\af13\loch\f1 n}{\insrsid12482519 \hich\af1\dbch\af13\loch\f1  case the latency\hich\af1\dbch\af13\loch\f1  is greater then the keep-alive delay). The other methods inherit thread safety from the parent.
\par \hich\af1\dbch\af13\loch\f1 The exceptions are immutable so they are thread safe.
\par {\listtext\pard\plain\s1 \b\f1\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 2.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Environment Requirements\tab \tab 

\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 2.1\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Environment
\par }\pard\plain \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10236033 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid10236033 \hich\af1\dbch\af13\loch\f1 
JDK 1.4 (because java.nio is used as required)
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 2.2\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 TopCoder Software Components

\par {\listtext\pard\plain\s16 \f3\fs20\lang1033\langfe1033\langfenp1033\insrsid10236033 \loch\af3\dbch\af13\hich\f3 \'b7\tab}}\pard\plain \s16\qj \fi-360\li1080\ri0\sa120\widctlpar
\jclisttab\tx1080\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin1080\itap0\pararsid10236033 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid10236033 \hich\af1\dbch\af13\loch\f1 
Configuration Manager 2.1.3 is used for configuration purposes. This component is used by getting its singleton instance with ConfigManager.getInstance(). Then the existsNamespace method should be used to determine whether th\hich\af1\dbch\af13\loch\f1 
e namespace is already loaded. If not, the add method is used to load the default configuration file. Finally getString and getStringArray return the values of the properties.
\par {\listtext\pard\plain\s16 \f3\fs20\lang1033\langfe1033\langfenp1033\insrsid10236033 \loch\af3\dbch\af13\hich\f3 \'b7\tab}\hich\af1\dbch\af13\loch\f1 Base Exception 1.0 is used as a base class for all exceptions. The purpose of \hich\af1\dbch\af13\loch\f1 
this component is to provide a consistent way to handle the cause exception for both JDK 1.3 and JDK 1.4. Although this component uses only JDK 1.4, it is still a good idea to make all TopCoder components follow a common approach.
\par {\listtext\pard\plain\s16 \f3\fs20\lang1033\langfe1033\langfenp1033\insrsid10236033 \loch\af3\dbch\af13\hich\f3 \'b7\tab}\hich\af1\dbch\af13\loch\f1 Heartbeat 1.0 is used i\hich\af1\dbch\af13\loch\f1 
n the KeepAliveIPClient class to send keep-alive messages at regular intervals. A HeartBeatManager is created in the constructor. The connect method starts the heartbeats with heartBeatManager.add(this, delay) and the disconnect method stops the heartbeat
\hich\af1\dbch\af13\loch\f1 s\hich\af1\dbch\af13\loch\f1 
 with heartBeatManager.remove(this). The KeepAliveIPClient itself implements the HeartBeat interface. After the heartbeats are started, the HeartBeat component calls the keepAlive method at the configured intervals.
\par {\listtext\pard\plain\s16 \f3\fs20\lang1033\langfe1033\langfenp1033\insrsid10236033 \loch\af3\dbch\af13\hich\f3 \'b7\tab}\hich\af1\dbch\af13\loch\f1 GUID Generator 1.0 is used in the IPSe\hich\af1\dbch\af13\loch\f1 
rver class to assign unique ids to the new incoming connection. This component has the advantage of not requiring persistent storage (such as ID Generator requires), making the component easier to use. A generator is obtained with UUIDUtility.getGenerator
\hich\af1\dbch\af13\loch\f1 (\hich\af1\dbch\af13\loch\f1 UUIDType.TYPEINT32). Then using generator.getNextUUID().toString() ids are generated as needed.
\par }\pard \s16\qj \li1077\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1077\itap0\pararsid10236033 {\insrsid10236033 
\par }\pard\plain \s18\qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10236033 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af30\cgrid\langnp1033\langfenp1033 {\insrsid10236033 \hich\af1\dbch\af30\loch\f1 
NOTE: The default location for TopCoder Software component jars is../lib/tcs/COMPONENT_NAME/COMPONENT_VERSION relative to the component installation.  Setting \hich\af1\dbch\af30\loch\f1 
the tcs_libdir property in topcoder_global.properties will overwrite this default location.
\par 
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 2.3\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Third Party Components
\par {\listtext\pard\plain\s16 \f3\fs20\lang1033\langfe1033\langfenp1033\insrsid10236033 \loch\af3\dbch\af13\hich\f3 \'b7\tab}}\pard\plain \s16\ql \fi-360\li1080\ri0\sa120\widctlpar\jclisttab\tx1080\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin1080\itap0 
\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid10236033 \hich\af1\dbch\af13\loch\f1 Xerces 1.4.4 is used because it is an indirect dependency of Configuration Manager 2.1.3.}{\insrsid13582146 
\par }\pard \s16\qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10236033 {\insrsid10236033 \hich\af1\dbch\af13\loch\f1 NOTE: The default location for 3}{\super\insrsid10236033 \hich\af1\dbch\af13\loch\f1 rd}{
\insrsid10236033 \hich\af1\dbch\af13\loch\f1  party pac\hich\af1\dbch\af13\loch\f1 kages is ../lib relative to this component installation.  Setting the ext_libdir property in topcoder_global.properties will overwrite this default location.
\par {\listtext\pard\plain\s1 \b\f1\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 3.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Installation and Configuration
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 3.1\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Package Name
\par }\pard\plain \s17\ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10236033 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid10236033 
\hich\af1\dbch\af13\loch\f1 com.topcoder.processor.ipserver
\par \hich\af1\dbch\af13\loch\f1 com.topcoder.pr\hich\af1\dbch\af13\loch\f1 ocessor.ipserver.keepalive
\par }\pard\plain \s16\ql \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid10236033 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid10236033 \tab }{\insrsid10236033 
\hich\af1\dbch\af13\loch\f1 com.topcoder.processor.ipserver.message}{\lang1033\langfe2052\langfenp2052\insrsid10236033 
\par }\pard \s16\ql \fi720\li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3022664 {\insrsid3022664 \hich\af1\dbch\af13\loch\f1 com.topcoder.processor.ipserver.message}{\lang1033\langfe2052\langfenp2052\insrsid3022664 
\hich\af1\dbch\af13\loch\f1 .serializable}{\lang1033\langfe2052\langfenp2052\insrsid3022664\charrsid10236033 
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 3.2\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Configuration Parameters
\par }\pard\plain \s17\ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10236033 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid8850610 
\hich\af1\dbch\af13\loch\f1 Configuration values for IPServerManager}{\insrsid13582146 
\par }\trowd \irow0\irowband0\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tphmrg\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3496\clshdrawnil \cellx3388\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3065\clshdrawnil \cellx6331
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2295\clshdrawnil \cellx8748\pard\plain 
\ql \li0\ri0\widctlpar\intbl\pvpara\phmrg\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid11030733 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {
\b\insrsid11030733 \hich\af0\dbch\af13\loch\f0 Parameter}{\b\f1\fs20\insrsid11030733 \cell }{\b\insrsid11030733 \hich\af0\dbch\af13\loch\f0 Description}{\b\f1\fs20\insrsid11030733 \cell }{\b\insrsid11030733 \hich\af0\dbch\af13\loch\f0 Values}{
\b\f1\fs20\insrsid11030733 \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid11030733 \trowd \irow0\irowband0\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 
\trbrdrr\brdrs\brdrw10 \tpvpara\tphmrg\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3496\clshdrawnil \cellx3388\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth3065\clshdrawnil \cellx6331\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2295\clshdrawnil \cellx8748\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\phmrg\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid11030733 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {
\b\insrsid11030733\charrsid8850610 \hich\af1\dbch\af13\loch\f1 servers}{\b\insrsid11030733\charrsid8850610 \cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 The list of server names. }{\b\insrsid11030733\charrsid8850610 \hich\af1\dbch\af13\loch\f1 
Required}{\insrsid11030733 \cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 server1\line server2\line server3}{\insrsid11030733 \cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 
\fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid11030733 \trowd \irow1\irowband1\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tphmrg\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3496\clshdrawnil \cellx3388\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3065\clshdrawnil \cellx6331
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2295\clshdrawnil \cellx8748\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\phmrg\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid11030733 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {
\b\insrsid11030733\charrsid8850610 \hich\af1\dbch\af13\loch\f1 xxx_address\cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 The listening IP address for one server. \hich\f1 \lquote \loch\f1 xxx\hich\f1 \rquote \loch\f1  means one server name in 
\hich\f1 \lquote \loch\f1 servers\hich\f1 \rquote \loch\f1 . Default is 0.0.0.0. }{\b\insrsid11030733\charrsid8850610 \hich\af1\dbch\af13\loch\f1 Optional}{\insrsid11030733 \cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 192.168.0.2\cell 
}\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid11030733 \trowd \irow2\irowband2\ts11\trgaph108\trleft-108\trbrdrt
\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tphmrg\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3496\clshdrawnil \cellx3388\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3065\clshdrawnil \cellx6331
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2295\clshdrawnil \cellx8748\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\phmrg\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid11030733 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {
\b\insrsid11030733\charrsid8850610 \hich\af1\dbch\af13\loch\f1 xxx_}{\b\insrsid11030733 \hich\af1\dbch\af13\loch\f1 port}{\b\insrsid11030733\charrsid8850610 \cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 The listening port for one server. }{
\b\insrsid11030733\charrsid8850610 \hich\af1\dbch\af13\loch\f1 Required}{\insrsid11030733 \cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 8080\cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 
\fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid11030733 \trowd \irow3\irowband3\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tphmrg\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3496\clshdrawnil \cellx3388\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3065\clshdrawnil \cellx6331
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2295\clshdrawnil \cellx8748\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\phmrg\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid11030733 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {
\b\insrsid11030733 \hich\af1\dbch\af13\loch\f1 xxx_max_connections}{\b\insrsid11030733\charrsid8850610 \cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 Maximum concurrent connections for one server. Default is 0 (unlimited). }{
\b\insrsid11030733\charrsid8850610 \hich\af1\dbch\af13\loch\f1 Optional}{\insrsid11030733 \cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 500\cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 
\fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid11030733 \trowd \irow4\irowband4\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tphmrg\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3496\clshdrawnil \cellx3388\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3065\clshdrawnil \cellx6331
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2295\clshdrawnil \cellx8748\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\phmrg\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid11030733 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {
\b\insrsid11030733 \hich\af1\dbch\af13\loch\f1 xxx_message_factory_namespace\cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 The namespace used to create message factory for the IP server. }{\b\insrsid11030733\charrsid11030733 
\hich\af1\dbch\af13\loch\f1 Required}{\insrsid11030733 \cell }{\insrsid11030733\charrsid11030733 \hich\af1\dbch\af13\loch\f1 com.topcoder.processor.}{\insrsid11030733 \line }{\insrsid11030733\charrsid11030733 \hich\af1\dbch\af13\loch\f1 ipserver.message
\cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid11030733 \trowd \irow5\irowband5\ts11\trgaph108\trleft-108\trbrdrt
\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tphmrg\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3496\clshdrawnil \cellx3388\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3065\clshdrawnil \cellx6331
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2295\clshdrawnil \cellx8748\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\phmrg\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid11030733 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {
\b\insrsid11030733 \hich\af1\dbch\af13\loch\f1 xxx_started\cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 A flag indicating whether the server is started upon startup. Default is \hich\f1 \lquote \loch\f1 false\hich\f1 \rquote \loch\f1 . }{
\b\insrsid11030733\charrsid8850610 \hich\af1\dbch\af13\loch\f1 Optional}{\insrsid11030733 \cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 True/false\cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 
\fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid11030733 \trowd \irow6\irowband6\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tphmrg\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3496\clshdrawnil \cellx3388\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3065\clshdrawnil \cellx6331
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2295\clshdrawnil \cellx8748\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\phmrg\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid11030733 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {
\b\insrsid11030733 \hich\af1\dbch\af13\loch\f1 xxx_backlog\cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 The number of backlog for one server. 0 means 50. Default is 0. }{\b\insrsid11030733\charrsid8850610 \hich\af1\dbch\af13\loch\f1 Optional}{
\insrsid11030733 \cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 100\cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {
\insrsid11030733 \trowd \irow7\irowband7\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tphmrg\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3496\clshdrawnil \cellx3388\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3065\clshdrawnil \cellx6331
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2295\clshdrawnil \cellx8748\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\phmrg\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid11030733 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {
\b\insrsid11030733 \hich\af1\dbch\af13\loch\f1 xxx_handlers\cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 The names of handlers for this server. }{\b\insrsid11030733\charrsid8850610 \hich\af1\dbch\af13\loch\f1 Required}{\insrsid11030733 \cell }{
\insrsid11030733 \hich\af1\dbch\af13\loch\f1 ha\hich\af1\dbch\af13\loch\f1 ndler1\line handler2\line keepalive\cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 
\fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid11030733 \trowd \irow8\irowband8\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tphmrg\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3496\clshdrawnil \cellx3388\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3065\clshdrawnil \cellx6331
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2295\clshdrawnil \cellx8748\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\phmrg\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid11030733 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {
\b\insrsid11030733 \hich\af1\dbch\af13\loch\f1 xxx_yyy_class\cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 The qualified class name of the handler. \hich\f1 \lquote \loch\f1 yyy\hich\f1 \rquote \loch\f1  means the handler name in \hich\f1 \lquote 
\loch\f1 xxx_handlers\hich\f1 \rquote \loch\f1 . }{\b\insrsid11030733\charrsid1526568 \hich\af1\dbch\af13\loch\f1 Required}{\insrsid11030733 \cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 com.topcoder.Handler1}{\insrsid11030733\charrsid1526568 
\cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid11030733 \trowd \irow9\irowband9\ts11\trgaph108\trleft-108\trbrdrt
\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tphmrg\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3496\clshdrawnil \cellx3388\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3065\clshdrawnil \cellx6331
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2295\clshdrawnil \cellx8748\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\phmrg\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid11030733 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {
\b\insrsid11030733 \hich\af1\dbch\af13\loch\f1 xxx_yyy_max_requests\cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 The maximum concurrent requests for this handler. Default is 0 (unlimited). }{\b\insrsid11030733\charrsid1526568 
\hich\af1\dbch\af13\loch\f1 Optional}{\insrsid11030733 \cell }{\insrsid11030733 \hich\af1\dbch\af13\loch\f1 30}{\insrsid11030733 \cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 
\fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid11030733 \trowd \irow10\irowband10\lastrow \ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tphmrg\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3496\clshdrawnil \cellx3388\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3065\clshdrawnil \cellx6331
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2295\clshdrawnil \cellx8748\row }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\f1\fs20\insrsid13582146 
\par }\pard\plain \s17\ql \li0\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11030733 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\lbr3\insrsid13582146 \line }{
\lang1033\langfe2052\langfenp2052\insrsid9861032 \hich\af1\dbch\af13\loch\f1 Sample:}{\lang1033\langfe2052\langfenp2052\insrsid1526568 
\par }\pard\plain \qj \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9861032 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {
\f2\fs18\cf9\lang1033\langfe2052\langfenp2052\insrsid9861032\charrsid9861032 \hich\af2\dbch\af13\loch\f2 <?xml version="1.0" encoding="UTF-8"?>
\par \hich\af2\dbch\af13\loch\f2 <CMConfig>
\par \hich\af2\dbch\af13\loch\f2     <!--Server names, required-->
\par \hich\af2\dbch\af13\loch\f2     <Property name="servers">
\par \hich\af2\dbch\af13\loch\f2       <Value>server1</Value>
\par \hich\af2\dbch\af13\loch\f2     </Property\hich\af2\dbch\af13\loch\f2 >
\par 
\par \hich\af2\dbch\af13\loch\f2     <!--Listen IP address, optional-->
\par \hich\af2\dbch\af13\loch\f2     <Property name="server1_address">
\par \hich\af2\dbch\af13\loch\f2       <Value>127.0.0.1</Value>
\par \hich\af2\dbch\af13\loch\f2     </Property>
\par \hich\af2\dbch\af13\loch\f2     <!--Listen port, required-->
\par \hich\af2\dbch\af13\loch\f2     <Property name="server1_port">
\par \hich\af2\dbch\af13\loch\f2       <Value>12345</Value>
\par \hich\af2\dbch\af13\loch\f2     </Property>
\par \hich\af2\dbch\af13\loch\f2     <!--Maximum connections, optional-->
\par \hich\af2\dbch\af13\loch\f2     <Property name="server1_max_connections">
\par \hich\af2\dbch\af13\loch\f2       <Value>100</Value>
\par \hich\af2\dbch\af13\loch\f2     </Property>
\par \hich\af2\dbch\af13\loch\f2     <!--Namespace used to create message factory, required-->
\par \hich\af2\dbch\af13\loch\f2     <Property name="server1_message_factory_namespace">
\par \hich\af2\dbch\af13\loch\f2       <Val\hich\af2\dbch\af13\loch\f2 ue>com.topcoder.processor.ipserver.message</Value>
\par \hich\af2\dbch\af13\loch\f2     </Property>
\par \hich\af2\dbch\af13\loch\f2     <!--Start upon startup, optional-->
\par \hich\af2\dbch\af13\loch\f2     <Property name="server1_started">
\par \hich\af2\dbch\af13\loch\f2       <Value>false</Value>
\par \hich\af2\dbch\af13\loch\f2     </Property>
\par \hich\af2\dbch\af13\loch\f2     <!--Number of backlog, optional-->
\par \hich\af2\dbch\af13\loch\f2     <Property name="server1_b\hich\af2\dbch\af13\loch\f2 acklog">
\par \hich\af2\dbch\af13\loch\f2       <Value>100</Value>
\par \hich\af2\dbch\af13\loch\f2     </Property>
\par \hich\af2\dbch\af13\loch\f2     <!--Names of handlers, required-->
\par \hich\af2\dbch\af13\loch\f2     <Property name="server1_handlers">
\par \hich\af2\dbch\af13\loch\f2       <Value>handler1</Value>
\par \hich\af2\dbch\af13\loch\f2     </Property>
\par 
\par \hich\af2\dbch\af13\loch\f2     <!--Class name of handler, required-->
\par \hich\af2\dbch\af13\loch\f2     <Property name="server1_handler1_class">
\par \hich\af2\dbch\af13\loch\f2       <Value>com.topcoder.processor.ipserver.keepalive.KeepAliveHandler</Value>
\par \hich\af2\dbch\af13\loch\f2     </Property>
\par \hich\af2\dbch\af13\loch\f2 </CMConfig>}{\f2\fs18\cf9\lang1033\langfe2052\langfenp2052\insrsid9861032 
\par }\pard\plain \s16\ql \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9861032 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {
\lang1033\langfe2052\langfenp2052\insrsid9861032\charrsid9861032 
\par }\trowd \irow0\irowband0\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tphpg\tposx2352\tposy584\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2452\clshdrawnil \cellx2344\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3600\clshdrawnil \cellx5944
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2407\clshdrawnil \cellx8351\pard\plain 
\ql \li0\ri0\widctlpar\intbl\pvpara\phpg\posx2352\posy584\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid9519557 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {
\b\insrsid9519557 \hich\af0\dbch\af13\loch\f0 Parameter}{\b\f1\fs20\insrsid9519557 \cell }{\b\insrsid9519557 \hich\af0\dbch\af13\loch\f0 Description}{\b\f1\fs20\insrsid9519557 \cell }{\b\insrsid9519557 \hich\af0\dbch\af13\loch\f0 Values}{
\b\f1\fs20\insrsid9519557 \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid9519557 \trowd \irow0\irowband0\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 
\trbrdrr\brdrs\brdrw10 \tpvpara\tphpg\tposx2352\tposy584\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2452\clshdrawnil \cellx2344\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth3600\clshdrawnil \cellx5944\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2407\clshdrawnil \cellx8351\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\phpg\posx2352\posy584\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid9519557 
\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\b\insrsid9519557 \hich\af1\dbch\af13\loch\f1 MessageTypes}{\b\insrsid9519557\charrsid8850610 \cell }{\insrsid9519557 \hich\af1\dbch\af13\loch\f1 
The map between names and Message class names. }{\b\insrsid9519557\charrsid1526568 \hich\af1\dbch\af13\loch\f1 Required}{\insrsid9519557 \cell }{\insrsid9519557 \hich\af1\dbch\af13\loch\f1 none}{\insrsid9519557 \cell }\pard\plain 
\ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid9519557 \trowd \irow1\irowband1\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl
\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \tpvpara\tphpg\tposx2352\tposy584\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2452\clshdrawnil \cellx2344\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3600\clshdrawnil \cellx5944\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2407\clshdrawnil \cellx8351\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\phpg\posx2352\posy584\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1\pararsid9519557 
\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\b\insrsid9519557 \hich\af1\dbch\af13\loch\f1 MessageTypes/xxx}{\b\insrsid9519557\charrsid8850610 \cell }{\insrsid9519557 \hich\af1\dbch\af13\loch\f1 
The name and qualified class name of Message implementation. \hich\f1 \lquote \loch\f1 xxx\hich\f1 \rquote \loch\f1  is the name, and the value is the qualified class name. }{\b\insrsid9519557 \hich\af1\dbch\af13\loch\f1 Required}{\insrsid9519557 \cell }{
\insrsid9519557 \hich\af1\dbch\af13\loch\f1 com.topcoder.Message1}{\insrsid9519557 \cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 
\fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid9519557 \trowd \irow2\irowband2\lastrow \ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tphpg\tposx2352\tposy584\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2452\clshdrawnil \cellx2344\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3600\clshdrawnil \cellx5944
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2407\clshdrawnil \cellx8351\row }\pard\plain \s17\ql \li720\ri0\sa120\sl240\slmult0
\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid1526568 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid1526568 \hich\af1\dbch\af13\loch\f1 Configuration values for }{\insrsid12082264 
\hich\af1\dbch\af13\loch\f1 MessageFactory}{\insrsid1526568 
\par }\pard\plain \s16\ql \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9519557 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\lang1033\langfe2052\langfenp2052\insrsid9861032 
\hich\af1\dbch\af13\loch\f1 Sample:}{\lang1033\langfe2052\langfenp2052\insrsid9519557\charrsid9519557 
\par }\pard\plain \qj \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9861032 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {
\f2\fs18\cf9\lang1033\langfe2052\langfenp2052\insrsid9861032\charrsid9861032 \hich\af2\dbch\af13\loch\f2 <?xml version="1.0" encoding="\hich\af2\dbch\af13\loch\f2 UTF-8"?>
\par \hich\af2\dbch\af13\loch\f2 <CMConfig>
\par \hich\af2\dbch\af13\loch\f2     <!-- The mapping between names and message class names, required -->
\par \hich\af2\dbch\af13\loch\f2     <Property name="MessageTypes">
\par 
\par \hich\af2\dbch\af13\loch\f2       <!-- Property name is the name, property value is the class}{\f2\fs18\cf9\lang1033\langfe2052\langfenp2052\insrsid9861032 
\par }\pard \qj \fi810\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\cufi450\pararsid9861032 {\f2\fs18\cf9\lang1033\langfe2052\langfenp2052\insrsid9861032\charrsid9861032 \hich\af2\dbch\af13\loch\f2 
 name.There must be at least one of this property. -->
\par }\pard \qj \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9861032 {\f2\fs18\cf9\lang1033\langfe2052\langfenp2052\insrsid9861032\charrsid9861032 \hich\af2\dbch\af13\loch\f2       <Property name="simple">
\par \hich\af2\dbch\af13\loch\f2         <Value>com.topcoder.processor.ipserver.message.serializable.SimpleSerializableMessage</Value>
\par \hich\af2\dbch\af13\loch\f2       </Property>
\par \hich\af2\dbch\af13\loch\f2       <Property name="KeepAlive">
\par \hich\af2\dbch\af13\loch\f2         <Value>com.topcoder.processor.ipserver.message.serializable.Sim\hich\af2\dbch\af13\loch\f2 pleSerializableMessage</Value>
\par \hich\af2\dbch\af13\loch\f2       </Property>
\par 
\par \hich\af2\dbch\af13\loch\f2     </Property>
\par \hich\af2\dbch\af13\loch\f2 </CMConfig>}{\f2\fs18\cf9\lang1033\langfe2052\langfenp2052\insrsid9861032 
\par 
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 3.3\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Dependencies Configuration
\par }\pard\plain \s17\ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid9519010 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid663361 
\hich\af1\dbch\af13\loch\f1 Follow the configuration of dependent components}{\insrsid9519010 \hich\af1\dbch\af13\loch\f1 .
\par {\listtext\pard\plain\s1 \b\f1\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 4.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Usage Notes
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 4.1\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 
Required steps to test the component
\par {\listtext\pard\plain\s16 \f3\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \loch\af3\dbch\af13\hich\f3 \'b7\tab}}\pard\plain \s16\ql \fi-360\li1080\ri0\sa120\widctlpar\jclisttab\tx1080\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin1080\itap0 
\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Extract the component distribution.
\par {\listtext\pard\plain\s16 \f3\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \loch\af3\dbch\af13\hich\f3 \'b7\tab}\hich\af1\dbch\af13\loch\f1 Follow }{\field\fldedit{\*\fldinst {\insrsid13582146 \hich\af1\dbch\af13\loch\f1  HYPERLINK "C:\\filez\\
work\\tc\\tcs_corp\\templates\\component\\" \\l "_Dependencies_Configuration" }{\insrsid3408042 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000010000000303000000000000c00000000000004600002900000066696c657a776f726b74637463735f636f727074656d706c61746573636f6d706f6e656e7422206c00ffffadde000000000000000000000000000000000000000000000000000000000000000000}}
}{\fldrslt {\cs15\ul\cf2\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Dependencies Configuration}}}{\insrsid13582146 \hich\af1\dbch\af13\loch\f1 .
\par {\listtext\pard\plain\s16 \f3\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \loch\af3\dbch\af13\hich\f3 \'b7\tab}\hich\af1\dbch\af13\loch\f1 Execute \hich\f1 \lquote \loch\f1 ant test\hich\f1 \rquote \loch\f1 
 within the directory that the distribution was extracted to.
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 4.2\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 
Required steps to use the component
\par }\pard\plain \s17\ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10236033 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid8346960 
\hich\af1\dbch\af13\loch\f1 Loa\hich\af1\dbch\af13\loch\f1 d the configuration before using this component. Follow the demo.}{\insrsid13582146 
\par {\listtext\pard\plain\s2 \b\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 4.3\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Demo}{
\lang1033\langfe2052\langfenp2052\insrsid13582146 
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid9861032 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\lang1033\langfe2052\langfenp2052\insrsid9861032 
\hich\af0\dbch\af13\loch\f0 The sample configuration files in 3.2 are used here.}{\lang1033\langfe2052\langfenp2052\insrsid9861032\charrsid9861032 
\par {\listtext\pard\plain\s3 \i\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid7606774 \hich\af1\dbch\af13\loch\f1 4.3.1\tab}}\pard\plain \s3\qj \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid7606774 \i\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid7606774 \hich\af1\dbch\af13\loch\f1 Server side usage}
{\insrsid7606774\charrsid15224535 
\par }\pard\plain \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid7606774 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\f2\fs16\insrsid7606774 
\par }{\b\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 Manage IP servers
\par }{\f2\fs16\insrsid7606774 
\par \hich\af2\dbch\af13\loch\f2 // get manager instance
\par \hich\af2\dbch\af13\loch\f2 IPServerManager manager = IPServerManager.getInstance();
\par \hich\af2\dbch\af13\loch\f2 // add an IP server
\par \hich\af2\dbch\af13\loch\f2 manager.addIPServer("serv1", new IPServer(null, 8080, 0));
\par \hich\af2\dbch\af13\loch\f2 // remove an IP server
\par \hich\af2\dbch\af13\loch\f2 manager.removeIPServer("serv1");
\par \hich\af2\dbch\af13\loch\f2 // clear all IP servers
\par \hich\af2\dbch\af13\loch\f2 manager.clearIPServers();
\par \hich\af2\dbch\af13\loch\f2 // check if an IP server is registered
\par \hich\af2\dbch\af13\loch\f2 boolean contained = manager.cont\hich\af2\dbch\af13\loch\f2 ainsIPServer("serv1");
\par \hich\af2\dbch\af13\loch\f2 // get the names of all registered IP servers
\par \hich\af2\dbch\af13\loch\f2 Set serverNames = manager.getIPServerNames();
\par \hich\af2\dbch\af13\loch\f2 // get an IP server by name
\par \hich\af2\dbch\af13\loch\f2 IPServer server = manager.getIPServer("serv1");
\par 
\par }{\b\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 Create and configure IP servers
\par }{\f2\fs16\insrsid7606774 
\par \hich\af2\dbch\af13\loch\f2 // create an IP server
\par \hich\af2\dbch\af13\loch\f2 server =\hich\af2\dbch\af13\loch\f2  new IPServer("10.0.0.255", 80, 10);
\par \hich\af2\dbch\af13\loch\f2 // get its address
\par \hich\af2\dbch\af13\loch\f2 String address = server.getAddress();
\par \hich\af2\dbch\af13\loch\f2 // get its port
\par \hich\af2\dbch\af13\loch\f2 int port = server.getPort();
\par \hich\af2\dbch\af13\loch\f2 // get the maximum number of connections
\par \hich\af2\dbch\af13\loch\f2 int maxConn = server.getMaxConnections();
\par \hich\af2\dbch\af13\loch\f2 // set bind address
\par \hich\af2\dbch\af13\loch\f2 server.setAddress(address);
\par \hich\af2\dbch\af13\loch\f2 // set listening port
\par \hich\af2\dbch\af13\loch\f2 server.setPort(port);
\par \hich\af2\dbch\af13\loch\f2 // set maximum number of connections
\par \hich\af2\dbch\af13\loch\f2 server.setMaxConnections(maxConn);
\par 
\par }{\b\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 Define a custom handler
\par }{\f2\fs16\insrsid7606774 
\par \hich\af2\dbch\af13\loch\f2 // custom handler implementation
\par \hich\af2\dbch\af13\loch\f2 class MyHandler extends Handler \{
\par \hich\af2\dbch\af13\loch\f2     MyHandler(int m\hich\af2\dbch\af13\loch\f2 axRequests) \{
\par \hich\af2\dbch\af13\loch\f2         super(maxRequests);
\par \hich\af2\dbch\af13\loch\f2     \}
\par \hich\af2\dbch\af13\loch\f2     
\par \hich\af2\dbch\af13\loch\f2     // on connect print a message
\par \hich\af2\dbch\af13\loch\f2     protected void onConnect(Connection conn) \{
\par \hich\af2\dbch\af13\loch\f2         System.out.println(conn.getClientNameAddress()
\par \hich\af2\dbch\af13\loch\f2                 + " " + conn.getClientIPAddress()
\par \hich\af2\dbch\af13\loch\f2                 \hich\af2\dbch\af13\loch\f2 + " " + conn.getClientPort());
\par \hich\af2\dbch\af13\loch\f2     \}
\par \hich\af2\dbch\af13\loch\f2     // on request send back a response
\par \hich\af2\dbch\af13\loch\f2     protected void onRequest(Connection conn, Message request) throws IOException \{
\par \hich\af2\dbch\af13\loch\f2         // process request ...
\par }{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2         Message response = conn.getIPServer().
\par \hich\af2\dbch\af13\loch\f2                                getMessageFactory().
\par \hich\af2\dbch\af13\loch\f2                                get}{\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 Message(}{\f2\fs16\insrsid15224535\charrsid15224535 \hich\af2\dbch\af13\loch\f2 "}{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 
simple}{\f2\fs16\insrsid15224535\charrsid15224535 \hich\af2\dbch\af13\loch\f2 "}{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 ,}{\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 request.getHandlerId(),
\par \hich\af2\dbch\af13\loch\f2                 \tab \tab \tab \tab \tab   request.getRequestId());
\par \hich\af2\dbch\af13\loch\f2         conn.getIPServer().sendResponse(conn.getId(), response);
\par \hich\af2\dbch\af13\loch\f2     \}
\par \}
\par 
\par }{\b\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 Manage \hich\af2\dbch\af13\loch\f2 handlers
\par }{\f2\fs16\insrsid7606774 
\par \hich\af2\dbch\af13\loch\f2 // add the custom handler with 10 simultaneous requests
\par \hich\af2\dbch\af13\loch\f2 server.addHandler("h1", new MyHandler(10));
\par \hich\af2\dbch\af13\loch\f2 // add a keep alive handler
\par \hich\af2\dbch\af13\loch\f2 server.addHandler(KeepAliveHandler.KEEP_ALIVE_ID, new KeepAliveHandler());
\par \hich\af2\dbch\af13\loch\f2 // remove a handler
\par \hich\af2\dbch\af13\loch\f2 server.removeHandler("h\hich\af2\dbch\af13\loch\f2 1");
\par \hich\af2\dbch\af13\loch\f2 // clear all handlers
\par \hich\af2\dbch\af13\loch\f2 server.clearHandlers();
\par \hich\af2\dbch\af13\loch\f2 // check if a handler is contained
\par \hich\af2\dbch\af13\loch\f2 contained = server.containsHandler("h1");
\par \hich\af2\dbch\af13\loch\f2 // get the ids of all handlers
\par \hich\af2\dbch\af13\loch\f2 Set handlerIds = server.getHandlerIds();
\par \hich\af2\dbch\af13\loch\f2 // get a handler by id
\par \hich\af2\dbch\af13\loch\f2 Handler handler = server.getHandl\hich\af2\dbch\af13\loch\f2 er("h1");
\par 
\par }{\b\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 Start and stop a server
\par }{\f2\fs16\insrsid7606774 
\par \hich\af2\dbch\af13\loch\f2 // start the server
\par \hich\af2\dbch\af13\loch\f2 server.start();
\par \hich\af2\dbch\af13\loch\f2 // check the status of the server
\par \hich\af2\dbch\af13\loch\f2 boolean started = server.isStarted();
\par \hich\af2\dbch\af13\loch\f2 // stop the server
\par \hich\af2\dbch\af13\loch\f2 server.stop();
\par {\listtext\pard\plain\s3 \i\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid7606774 \hich\af1\dbch\af13\loch\f1 4.3.2\tab}}\pard\plain \s3\qj \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid7606774 \i\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid7606774 \hich\af1\dbch\af13\loch\f1 Client side usage

\par }\pard\plain \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid7606774 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\f2\fs16\insrsid7606774 
\par }{\b\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 Create and configure client
\par }{\f2\fs16\insrsid7606774 
\par \hich\af2\dbch\af13\loch\f2 // create a client
\par \hich\af2\dbch\af13\loch\f2 IPClient client = new IPClient("192.168.0.1", 139);
\par \hich\af2\dbch\af13\loch\f2 // create a client with keep alive capabilities that pings the
\par \hich\af2\dbch\af13\loch\f2 // server every 10 seconds to keep the connection alive
\par \hich\af2\dbch\af13\loch\f2 IPClient client2 = new KeepAliveIPClient("192.168.0.2", 445, 10000);
\par 
\par \hich\af2\dbch\af13\loch\f2 // get the addr\hich\af2\dbch\af13\loch\f2 ess to connect to
\par \hich\af2\dbch\af13\loch\f2 address = client.getAddress();
\par \hich\af2\dbch\af13\loch\f2 // get the port to connect to
\par \hich\af2\dbch\af13\loch\f2 port = client.getPort();
\par \hich\af2\dbch\af13\loch\f2 // set the address to connect to
\par \hich\af2\dbch\af13\loch\f2 client.setAddress(address);
\par \hich\af2\dbch\af13\loch\f2 // set the port to connect to
\par \hich\af2\dbch\af13\loch\f2 client.setPort(port);
\par 
\par }{\b\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 Connect and disconnect client
\par }{\f2\fs16\insrsid7606774 
\par \hich\af2\dbch\af13\loch\f2 // conn\hich\af2\dbch\af13\loch\f2 ect to server
\par \hich\af2\dbch\af13\loch\f2 client.connect();
\par \hich\af2\dbch\af13\loch\f2 // check connected status
\par \hich\af2\dbch\af13\loch\f2 boolean connected = client.isConnected();
\par \hich\af2\dbch\af13\loch\f2 // disconnect from server
\par \hich\af2\dbch\af13\loch\f2 client.disconnect();
\par 
\par }{\b\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 Implement a custom message
\par }{\f2\fs16\insrsid7606774 
\par \hich\af2\dbch\af13\loch\f2 // custom message implementation
\par \hich\af2\dbch\af13\loch\f2 class MyMessage extends }{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 SimpleSerializable}{\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 Message \{
\par \hich\af2\dbch\af13\loch\f2     private String data = null;
\par \hich\af2\dbch\af13\loch\f2     
\par \hich\af2\dbch\af13\loch\f2     MyMessage(String handlerI}{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 d, String requestId}{\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 ) \{
\par \hich\af2\dbch\af13\loch\f2         super(handlerId, requestId);
\par }\pard \qj \fi390\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10096175 {\f2\fs16\insrsid7606774 \}
\par }{\f2\fs16\insrsid10096175 
\par \hich\af2\dbch\af13\loch\f2 synchronized void setData(String data) \{
\par \hich\af2\dbch\af13\loch\f2     this.data = data;
\par \}
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid7606774 {\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2     
\par \hich\af2\dbch\af13\loch\f2     public }{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 synchronized }{\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 String getData() \{
\par \hich\af2\dbch\af13\loch\f2     \hich\af2\dbch\af13\loch\f2     return data;
\par \hich\af2\dbch\af13\loch\f2     \}
\par \}
\par 
\par }{\b\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 Send requests and receive responses
\par }{\f2\fs16\insrsid7606774 
\par \hich\af2\dbch\af13\loch\f2 // send three requests with different request ids
\par }{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 MyMessage message}{\f2\fs16\insrsid66528 \hich\af2\dbch\af13\loch\f2 ;
\par \hich\af2\dbch\af13\loch\f2 message}{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2  = }{\f2\fs16\insrsid66528 \hich\af2\dbch\af13\loch\f2 (MyMessage) }{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 messageFactory.getMessage("mymessage",}{
\f2\fs16\insrsid66528 \hich\af2\dbch\af13\loch\f2  "myhandler",
\par \hich\af2\dbch\af13\loch\f2                }{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 "req1112");
\par \hich\af2\dbch\af13\loch\f2 message.setData("some_data");
\par }{\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 client.sendRequest(}{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 message}{\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 );
\par }{\f2\fs16\insrsid10096175 
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10096175 {\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 message = }{\f2\fs16\insrsid66528 \hich\af2\dbch\af13\loch\f2 (MyMessage) }{
\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 messageFactory.getMessage("mymessage",}{\f2\fs16\insrsid66528 \hich\af2\dbch\af13\loch\f2  }{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 "myhandler", }{\f2\fs16\insrsid66528 
\par \hich\af2\dbch\af13\loch\f2               }{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 "req1115");
\par \hich\af2\dbch\af13\loch\f2 message.setData("some_data2");
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid7606774 {\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 client.sendRequest(}{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 message}{
\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 ));
\par }{\f2\fs16\insrsid10096175 
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10096175 {\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 message = }{\f2\fs16\insrsid66528 \hich\af2\dbch\af13\loch\f2 (MyMessage) }{
\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 messageFact\hich\af2\dbch\af13\loch\f2 ory.getMessage("mymessage",}{\f2\fs16\insrsid66528 \hich\af2\dbch\af13\loch\f2  }{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 "myhandler2", }{
\f2\fs16\insrsid66528 
\par \hich\af2\dbch\af13\loch\f2               }{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 "req1145");
\par \hich\af2\dbch\af13\loch\f2 message.setData("some_data3");
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid7606774 {\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 client.sendRequest(}{\f2\fs16\insrsid10096175 \hich\af2\dbch\af13\loch\f2 message}{
\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 );
\par 
\par \hich\af2\dbch\af13\loch\f2 // get the response for request req1115 (blocks until it arrives)
\par \hich\af2\dbch\af13\loch\f2 Message response1 = client.receiveResponse("req1115", true);
\par \hich\af2\dbch\af13\loch\f2 //get the response for request reqxxxx (returns null if not immediately available)
\par \hich\af2\dbch\af13\loch\f2 Message response2 = client.receiveResponse("reqxxxx", false);
\par \hich\af2\dbch\af13\loch\f2 //get any response (blocks until one arrives)
\par \hich\af2\dbch\af13\loch\f2 Message response3 = client.receiveResponse(true);
\par \hich\af2\dbch\af13\loch\f2 //get any repo\hich\af2\dbch\af13\loch\f2 nse (returns null if not immediately available)
\par \hich\af2\dbch\af13\loch\f2 Message response4 = client.receiveResponse(false);}{\f2\fs16\insrsid7606774\charrsid4999966 \hich\af2\dbch\af13\loch\f2  }{\f2\fs16\insrsid7606774 
\par 
\par }{\b\f2\fs16\insrsid7606774 \hich\af2\dbch\af13\loch\f2 Multiple clients, }{\b\f2\fs16\insrsid7606774\charrsid4999966 \hich\af2\dbch\af13\loch\f2 Each IPClient will send a message to the same handler}{\b\f2\fs16\insrsid7606774 
\par }{\b\f2\fs16\insrsid7606774\charrsid5379612 
\par }\pard\plain \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid7606774 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\f2\fs16\insrsid7606774\charrsid5379612 
\hich\af2\dbch\af13\loch\f2 IPClient[] clients = new IPClient[HANDLER_NUM];
\par 
\par \hich\af2\dbch\af13\loch\f2 for (int i = 0; i < clients.length; ++i) \{
\par \hich\af2\dbch\af13\loch\f2     clients[i] = new IPClient(helper.getAddress(), helper.getPort());
\par \hich\af2\dbch\af13\loch\f2     clients[i].connect();
\par 
\par \hich\af2\dbch\af13\loch\f2     // send a request to server
\par }{\f2\fs16\insrsid66528 \hich\af2\dbch\af13\loch\f2     Message src = messageFactory.get}{\f2\fs16\insrsid7606774\charrsid5379612 \hich\af2\dbch\af13\loch\f2 Message(}{\f2\fs16\insrsid66528 \hich\af2\dbch\af13\loch\f2 "simple", }{
\f2\fs16\insrsid7606774\charrsid5379612 \hich\af2\dbch\af13\loch\f2 "handler0", "request" + i);
\par \hich\af2\dbch\af13\loch\f2   \hich\af2\dbch\af13\loch\f2   clients[i].sendRequest(src);
\par \hich\af2\dbch\af13\loch\f2     assertNotNull("Fails to recieve response.", clients[i].receiveResponse(true));
\par \hich\af2\dbch\af13\loch\f2     clients[i].disconnect();
\par }\pard\plain \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid7606774 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\f2\fs16\insrsid7606774\charrsid5379612 \}}{
\f2\fs16\insrsid7606774 
\par 
\par }{\b\f2\fs16\insrsid7606774\charrsid5379612 \hich\af2\dbch\af13\loch\f2 message to different handlers from a single client
\par }\pard\plain \s17\ql \li720\ri0\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid7606774 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\f2\fs16\insrsid7606774\charrsid5379612 

\par }\pard\plain \s16\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid7606774 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\fs16\insrsid7606774\charrsid5379612 
\hich\af1\dbch\af13\loch\f1 IPClient client = new IPClient(helper.getAddress(), helper\hich\af1\dbch\af13\loch\f1 .getPort());
\par \hich\af1\dbch\af13\loch\f1 client.connect();
\par 
\par \hich\af1\dbch\af13\loch\f1 Message[] msgs = new Message[HANDLER_NUM];
\par 
\par \hich\af1\dbch\af13\loch\f1 for (int i = 0; i < msgs.length; ++i) \{
\par \hich\af1\dbch\af13\loch\f1     msgs[i] = }{\fs16\insrsid66528\charrsid66528 \hich\af1\dbch\af13\loch\f1 messageFactory.getMessage }{\fs16\insrsid7606774\charrsid5379612 \hich\af1\dbch\af13\loch\f1 (}{\fs16\insrsid66528\charrsid5379612 
\hich\af1\dbch\af13\loch\f1 "}{\fs16\insrsid66528 \hich\af1\dbch\af13\loch\f1 simple}{\fs16\insrsid66528\charrsid5379612 \hich\af1\dbch\af13\loch\f1 "}{\fs16\insrsid66528 \hich\af1\dbch\af13\loch\f1 , }{\fs16\insrsid7606774\charrsid5379612 
\hich\af1\dbch\af13\loch\f1 "handler" + i, "request" + i);
\par \hich\af1\dbch\af13\loch\f1     client.sendRequest(msgs[i]);
\par \}
\par 
\par \hich\af1\dbch\af13\loch\f1 // retrieve all the me\hich\af1\dbch\af13\loch\f1 ssages (from the last one to the first one).
\par \hich\af1\dbch\af13\loch\f1 for (int i = 0; i < msgs.length; ++i) \{
\par \hich\af1\dbch\af13\loch\f1     int id = msgs.length - 1 - i;
\par \hich\af1\dbch\af13\loch\f1     Message ret = client.receiveResponse("request" + id, true);
\par \hich\af1\dbch\af13\loch\f1     assertEquals("Fails to receive response", msgs[id].getRequestId(), re\hich\af1\dbch\af13\loch\f1 t.getRequestId());
\par \}
\par 
\par \hich\af1\dbch\af13\loch\f1 client.disconnect();}{\fs16\insrsid7606774\charrsid5379612 
\par }\pard\plain \s17\ql \li0\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7606774 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 
\par {\listtext\pard\plain\s3 \i\f1\fs20\lang1033\langfe1033\langfenp1033\insrsid15224535 \hich\af1\dbch\af13\loch\f1 4.3.3\tab}}\pard\plain \s3\qj \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid15224535 \i\fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid15224535 \hich\af1\dbch\af13\loch\f1 
Managing MessageFactory
\par }\pard\plain \s16\ql \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid9861032 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {
\fs16\lang1033\langfe2052\langfenp2052\insrsid9861032 \hich\af1\dbch\af13\loch\f1 // Create a MessageFactory instance
\par \hich\af1\dbch\af13\loch\f1 MessageFactory }{\fs16\insrsid9861032 \hich\af1\dbch\af13\loch\f1 messageFactory =}{\fs16\lang1033\langfe2052\langfenp2052\insrsid9861032 
\par }\pard \s16\ql \fi320\li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\cufi200\culi300\pararsid9861032 {\fs16\insrsid9861032\charrsid9861032 \hich\af1\dbch\af13\loch\f1 new DefaultMessageFactory(MESSAGE_FACTORY_NAMESPACE);}{
\fs16\lang1033\langfe2052\langfenp2052\insrsid9861032 
\par }\pard \s16\ql \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid9861032 {\fs16\insrsid9861032\charrsid9861032 \hich\af1\dbch\af13\loch\f1 // get message
\par \hich\af1\dbch\af13\loch\f1 Message message = messageFactory.getMessage("\hich\af1\dbch\af13\loch\f1 simple", "handler id", "request id");
\par \hich\af1\dbch\af13\loch\f1 assertEquals("handler id", message.getHandlerId());
\par \hich\af1\dbch\af13\loch\f1 assertEquals("request id", message.getRequestId());
\par \hich\af1\dbch\af13\loch\f1 assertEquals("com.topcoder.processor.ipserver.message.serializable.SerializableMessageSerializer",
\par \hich\af1\dbch\af13\loch\f1         message\hich\af1\dbch\af13\loch\f1 .getSerializerType());
\par 
\par \hich\af1\dbch\af13\loch\f1 // serialize message
\par \hich\af1\dbch\af13\loch\f1 byte[] data = messageFactory.serializeMessage(message);
\par \hich\af1\dbch\af13\loch\f1 // deserialize message
\par \hich\af1\dbch\af13\loch\f1 Message msg = messageFactory.deserializeMessage(data);
\par \hich\af1\dbch\af13\loch\f1 // msg and message are same
\par \hich\af1\dbch\af13\loch\f1 assertEquals(msg.getHandlerId(), message.getHandlerId());
\par \hich\af1\dbch\af13\loch\f1 assertEquals(msg.getRequestId(), message.getRequestId());
\par \hich\af1\dbch\af13\loch\f1 assertEquals(msg.getSerializerType(), message.getSerializerType());
\par }{\fs16\lang1033\langfe2052\langfenp2052\insrsid9861032 
\par }{\fs16\insrsid9861032\charrsid9861032 \hich\af1\dbch\af13\loch\f1 // add message type
\par \hich\af1\dbch\af13\loch\f1 ((DefaultMessageFactory) messageFactory).add("new t\hich\af1\dbch\af13\loch\f1 ype", CustomMessage.class);
\par 
\par \hich\af1\dbch\af13\loch\f1 // remove message type
\par \hich\af1\dbch\af13\loch\f1 ((DefaultMessageFactory) messageFactory).remove("new type");
\par 
\par \hich\af1\dbch\af13\loch\f1 // get message type
\par \hich\af1\dbch\af13\loch\f1 Class cls = ((DefaultMessageFactory) messageFactory).get("simple");
\par 
\par \hich\af1\dbch\af13\loch\f1 // test if there's a certain message type
\par \hich\af1\dbch\af13\loch\f1 boolean res\hich\af1\dbch\af13\loch\f1  = ((DefaultMessageFactory) messageFactory).contains("new type");
\par 
\par \hich\af1\dbch\af13\loch\f1 // get the mapping of message type names and message types
\par \hich\af1\dbch\af13\loch\f1 Map all = ((DefaultMessageFactory) messageFactory).getMessageTypes();
\par 
\par \hich\af1\dbch\af13\loch\f1 // clear all message types
\par \hich\af1\dbch\af13\loch\f1  ((DefaultMessageFactory) messag\hich\af1\dbch\af13\loch\f1 eFactory).clear();}{\fs16\insrsid15224535 
\par }\pard \s16\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid15224535 {\fs16\insrsid5404215 
\par {\listtext\pard\plain\s1 \b\f1\lang1033\langfe1033\langfenp1033\insrsid13582146 \hich\af1\dbch\af13\loch\f1 5.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 \hich\af1\dbch\af13\loch\f1 Future Enhancements
\par }\pard\plain \s17\ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10236033 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid15491690 
\hich\af1\dbch\af13\loch\f1 Connection tunneling is very useful when the network access is restricted by firewall or other means. Common tunneling techniques include proxy (HTTP or Socks proxy), Virtual Private Network, and customized wrappi
\hich\af1\dbch\af13\loch\f1 ng protocols. To implement this, IPClient may use strategy pattern.}{\insrsid13582146 
\par }\pard \s17\ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid15491690 {\insrsid15491690 \hich\af1\dbch\af13\loch\f1 
Another possible enhancement is to make the Message an independent component, and add more serialization algorithms, such as XML serialization. By this, SOAP client/server can be easily im\hich\af1\dbch\af13\loch\f1 plemented.}{
\insrsid15491690\charrsid15491690 
\par }\pard\plain \s16\ql \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\insrsid13582146 
\par }}