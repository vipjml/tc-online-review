This readme file explains how to setup and build this component.
(See: http://www.topcoder.com/wiki/display/tc/Java+Component+Build+Process for an explanation of the build process used.)

1. Install the component structure in ${basedir}

2. Create "topcoder_global.properties" in ${basedir}/.. and add the properties from steps 2,3,4,5

3. The following standard build script properties must be set
	ext_libdir - root of third party libraries
	tcs_libdir - root of topcoder components
	java_1_3_bootclasspath - installation path for java 1.3 (only needed for compile_targets task)
	junit.jar - location of junit.jar (component was written for v3.8.2)

4. The following standard build script properties can be changed (defaults are noted)
	debug=off - as expected
	verbose=no - as expected
	cobertura.dir=${ext_libdir}/cobertura/1.8
		installation directory of cobertura script expects {$cobertura.dir}/cobertura.jar
		and {$cobertura.dir}/lib/containg Jars for asm, jakarta, and log4j to run cobertura task

5. The following properties need to be set for this component:

6. The following third party libraries need to have their location specified - by default the build-dependencies.xml file looks for these under ${ext_libdir}, if you follow the setup listed in that file, you will not need to add these to global:

	see build-dependencies.xml for details

7. Ant Commands:
	ant clean - removes temporary build files
	ant compile - builds the production code
	ant compile_tests - builds the test code
	ant test - runs the test code
	ant reports-all - generates javadoc and code coverage reports
	ant deploy-lib - moves the component runtime jar to the location where other components will look for it.

NB:
	The folder ${basedir}/test_reflib contains TopCoder components
	that are required by this component's test code. This component is
	used to by compile_test and test targets. Components are listed under
	the following directory structure "component name"/"component version".
	Components are provided AS IS for development purposes only.

9.
9.1 "Before you can perform any conversions you need to start OpenOffice.org
in listening mode on port 8100 as described in the JODConverter Guide.

As a quick start you can type from a command line

  soffice -headless -accept="socket,port=8100;urp;"

I also provide you a shell script for this, you can just start the script
before running test cases. It's /test_files/startOpenOfficeConn.sh

9.2 while executing the ant command to generate design_dist, there are some dependences
one is 'ant-contrib', ant-contrib-1.0b3.jar is provided in test_reflib/ for you,
you need to put in your ANT_HOME/lib, the is 'cobertura', you should make sure it can
be found.

9.3 pls update the below files to match your environment:
test_files/stresstests/topcoder_global.properties
test_files/tc_dist/topcoder_global.properties