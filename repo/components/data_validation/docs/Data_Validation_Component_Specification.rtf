{\rtf1\ansi\ansicpg936\uc2\deff13\stshfdbch13\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe2052{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Latha};}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial{\*\falt Arial};}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New{\*\falt Courier New};}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol{\*\falt Symbol};}{\f5\fmodern\fcharset0\fprq1{\*\panose 02070409020205020404}Courier{\*\falt Courier New};}
{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings{\*\falt Wingdings};}{\f13\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}\'cb\'ce\'cc\'e5{\*\falt SimSun};}
{\f14\froman\fcharset136\fprq2{\*\panose 02020300000000000000}PMingLiU{\*\falt PMingLiU};}{\f34\froman\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial Unicode MS{\*\falt MS PGothic};}
{\f94\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@\'cb\'ce\'cc\'e5;}{\f99\froman\fcharset136\fprq2{\*\panose 02020300000000000000}@PMingLiU;}{\f116\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Latha};}
{\f117\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Latha};}{\f119\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Latha};}{\f120\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Latha};}
{\f121\froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Latha};}{\f122\froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Latha};}{\f123\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Latha};}
{\f124\froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Latha};}{\f126\fswiss\fcharset238\fprq2 Arial CE{\*\falt Arial};}{\f127\fswiss\fcharset204\fprq2 Arial Cyr{\*\falt Arial};}{\f129\fswiss\fcharset161\fprq2 Arial Greek{\*\falt Arial};}
{\f130\fswiss\fcharset162\fprq2 Arial Tur{\*\falt Arial};}{\f131\fswiss\fcharset177\fprq2 Arial (Hebrew){\*\falt Arial};}{\f132\fswiss\fcharset178\fprq2 Arial (Arabic){\*\falt Arial};}{\f133\fswiss\fcharset186\fprq2 Arial Baltic{\*\falt Arial};}
{\f134\fswiss\fcharset163\fprq2 Arial (Vietnamese){\*\falt Arial};}{\f136\fmodern\fcharset238\fprq1 Courier New CE{\*\falt Courier New};}{\f137\fmodern\fcharset204\fprq1 Courier New Cyr{\*\falt Courier New};}
{\f139\fmodern\fcharset161\fprq1 Courier New Greek{\*\falt Courier New};}{\f140\fmodern\fcharset162\fprq1 Courier New Tur{\*\falt Courier New};}{\f141\fmodern\fcharset177\fprq1 Courier New (Hebrew){\*\falt Courier New};}
{\f142\fmodern\fcharset178\fprq1 Courier New (Arabic){\*\falt Courier New};}{\f143\fmodern\fcharset186\fprq1 Courier New Baltic{\*\falt Courier New};}{\f144\fmodern\fcharset163\fprq1 Courier New (Vietnamese){\*\falt Courier New};}
{\f248\fnil\fcharset0\fprq2 SimSun Western{\*\falt SimSun};}{\f258\froman\fcharset0\fprq2 PMingLiU Western{\*\falt PMingLiU};}{\f1058\fnil\fcharset0\fprq2 @\'cb\'ce\'cc\'e5 Western;}{\f1108\froman\fcharset0\fprq2 @PMingLiU Western;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red204\green204\blue204;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 \snext0 \ssemihidden Normal;}{\s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs24\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext0 \ssemihidden heading 1;}{\s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\fs20\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon1 \snext0 \ssemihidden heading 2;}{\s3\ql \li0\ri0\sb120\sa60\sl240\slmult0
\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 \i\fs20\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon1 \snext0 \ssemihidden heading 3;}{
\s4\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon1 \snext0 \ssemihidden 
heading 4;}{\s5\ql \li0\ri0\sb240\sa60\sl240\slmult0\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl4\outlinelevel4\adjustright\rin0\lin0\itap0 \fs22\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 
\sbasedon0 \snext0 \ssemihidden heading 5;}{\s6\ql \li0\ri0\sb240\sa60\sl240\slmult0\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl5\outlinelevel5\adjustright\rin0\lin0\itap0 
\i\fs22\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext0 \ssemihidden heading 6;}{\s7\ql \li0\ri0\sb240\sa60\sl240\slmult0\nowidctlpar
\tx0\aspalpha\aspnum\faauto\ls1\ilvl6\outlinelevel6\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext0 \ssemihidden heading 7;}{\s8\ql \li0\ri0\sb240\sa60\sl240\slmult0
\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl7\outlinelevel7\adjustright\rin0\lin0\itap0 \i\fs20\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext0 \ssemihidden heading 8;}{
\s9\ql \li0\ri0\sb240\sa60\sl240\slmult0\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl8\outlinelevel8\adjustright\rin0\lin0\itap0 \b\i\fs18\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext0 \ssemihidden 
heading 9;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\loch\f0\hich\af0\dbch\af13\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\*\cs15 \additive \loch\f34\hich\af34\dbch\af0 
\sbasedon10 \ssemihidden HTML Code;}{\*\cs16 \additive \sbasedon10 \ssemihidden page number;}{\*\cs17 \additive \ul\cf12 \sbasedon10 \ssemihidden FollowedHyperlink;}{\*\cs18 \additive \ul\cf2 \sbasedon10 \ssemihidden Hyperlink;}{
\s19\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs24\cf1\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \snext19 \ssemihidden Default;}{
\s20\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs18\cf10\lang1033\langfe2052\loch\f2\hich\af2\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext21 \ssemihidden InfoBlue;}{
\s21\ql \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext21 \ssemihidden body text;}{
\s22\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs20\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext22 \ssemihidden \'d5\'fd\'ce\'c4\'ce\'c4\'b1\'be\'cb\'f5\'bd\'f8 2;}{
\s23\qc \li0\ri0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs36\lang1033\langfe2052\loch\f1\hich\af1\dbch\af14\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext0 \ssemihidden \'b1\'ea\'cc\'e2;}{
\s24\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs16\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext24 \ssemihidden \'d5\'fd\'ce\'c4\'ce\'c4\'b1\'be 3;}{
\s25\ql \li0\ri0\sl240\slmult0\nowidctlpar\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext25 \ssemihidden header;}{
\s26\ql \li0\ri0\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs18\lang1033\langfe2052\loch\f34\hich\af34\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext26 \ssemihidden HTML Preformatted;}{\s27\ql \li0\ri0\sb100\sa100\sbauto255\saauto255\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\f34\hich\af0\dbch\af0\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext27 \ssemihidden scorecardresponse;}{\s28\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs20\cf1\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext28 \ssemihidden \'d5\'fd\'ce\'c4\'ce\'c4\'b1\'be 2;}{\s29\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 
\fs20\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext29 \ssemihidden \'d5\'fd\'ce\'c4\'ce\'c4\'b1\'be\'cb\'f5\'bd\'f8 3;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\listtable{\list\listtemplateid3794214
\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li780\jclisttab\tx780\lin780 }{\listname ;}\listid258173}{\list\listtemplateid3794215
\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3988 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-360\li1200\jclisttab\tx1200\lin1200 }{\listname 
;}\listid258174}{\list\listtemplateid3794216\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li360\jclisttab\tx360\lin360 }{\listname 
;}\listid258175}{\list\listtemplateid3794217\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3880 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-360\li1080
\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3986 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li1560\jclisttab\tx1560\lin1560 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3979 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li1980\jclisttab\tx1980\lin1980 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3988 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li2400\jclisttab\tx2400\lin2400 }{\listlevel\levelnfc23\levelnfcn23\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3986 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li2820\jclisttab\tx2820\lin2820 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3979 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'01{\uc1\u-3988 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li3660\jclisttab\tx3660\lin3660 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'01{\uc1\u-3986 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li4080\jclisttab\tx4080\lin4080 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'01{\uc1\u-3979 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li4500\jclisttab\tx4500\lin4500 }{\listname ;}\listid258176}{\list\listtemplateid3794218\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li1200\jclisttab\tx1200\lin1200 }{\listname ;}\listid258177}{\list\listtemplateid3794219\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li2040\jclisttab\tx2040\lin2040 }{\listname ;}\listid258178}{\list\listtemplateid3794220\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'02\'01.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}
\loch\af0\hich\af0\dbch\af13 \fi-180\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 
\fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li4320\jclisttab\tx4320\lin4320 
}{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-180\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'02\'08.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-180\li7200\jclisttab\tx7200\lin7200 }{\listname ;}\listid258179}{\list\listtemplateid3794221\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3988 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-360\li1620\jclisttab\tx1620\lin1620 }{\listname ;}\listid258180}{\list\listtemplateid3794222\listhybrid{\listlevel\levelnfc0
\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-180\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'02\'03.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}
\loch\af0\hich\af0\dbch\af13 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 
\fi-180\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li5760\jclisttab\tx5760\lin5760 
}{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listlevel\levelnfc2\levelnfcn2
\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'08.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-180\li7200\jclisttab\tx7200\lin7200 }{\listname ;}\listid258181}{\list\listtemplateid3794223\listhybrid
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00);}{\levelnumbers\'01;}\cf6\loch\af0\hich\af0\dbch\af13 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc4\levelnfcn4
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-180\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'02\'03.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers
\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li3960\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 
\fi-180\li4680\jclisttab\tx4680\lin4680 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li5400\jclisttab\tx5400\lin5400 
}{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel\levelnfc2\levelnfcn2
\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'08.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-180\li6840\jclisttab\tx6840\lin6840 }{\listname ;}\listid258182}{\list\listtemplateid3794224\listhybrid
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3880 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li1140\jclisttab\tx1140\lin1140 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3986 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li1560\jclisttab\tx1560\lin1560 }{\listlevel\levelnfc23\levelnfcn23\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3979 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li1980\jclisttab\tx1980\lin1980 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3988 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li2400\jclisttab\tx2400\lin2400 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'01{\uc1\u-3986 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li2820\jclisttab\tx2820\lin2820 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'01{\uc1\u-3979 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'01{\uc1\u-3988 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li3660\jclisttab\tx3660\lin3660 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'01{\uc1\u-3986 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li4080\jclisttab\tx4080\lin4080 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'01{\uc1\u-3979 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-420\li4500\jclisttab\tx4500\lin4500 }{\listname ;}\listid258183}{\list\listtemplateid3794225\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3988 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid258184}{\list\listtemplateid3794226\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3913 ?};}{\levelnumbers;}\loch\af3\hich\af3\dbch\af13 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}\loch\af2\hich\af0\dbch\af13 \fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'01{\uc1\u-3929 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-360\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'01{\uc1\u-3913 ?};}{\levelnumbers;}\loch\af3\hich\af3\dbch\af13 \fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}
\loch\af2\hich\af0\dbch\af13 \fi-360\li3960\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3929 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 
\fi-360\li4680\jclisttab\tx4680\lin4680 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3913 ?};}{\levelnumbers;}\loch\af3\hich\af3\dbch\af13 \fi-360\li5400
\jclisttab\tx5400\lin5400 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}\loch\af2\hich\af0\dbch\af13 \fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3929 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-360\li6840\jclisttab\tx6840\lin6840 }{\listname ;}\listid258185}
{\list\listtemplateid3794227\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi-360\li1620\jclisttab\tx1620\lin1620 }{\listname ;}\listid258186}
{\list\listtemplateid3794228\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3988 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-360\li2040
\jclisttab\tx2040\lin2040 }{\listname ;}\listid258187}{\list\listtemplateid3794229\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3913 ?};}{\levelnumbers;}
\loch\af3\hich\af3\dbch\af13 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}\loch\af2\hich\af0\dbch\af13 \fi-360\li1800
\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3929 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-360\li2520\jclisttab\tx2520\lin2520 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3913 ?};}{\levelnumbers;}\loch\af3\hich\af3\dbch\af13 \fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}\loch\af2\hich\af0\dbch\af13 \fi-360\li3960\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3929 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-360\li4680\jclisttab\tx4680\lin4680 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'01{\uc1\u-3913 ?};}{\levelnumbers;}\loch\af3\hich\af3\dbch\af13 \fi-360\li5400\jclisttab\tx5400\lin5400 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'01o;}{\levelnumbers;}\loch\af2\hich\af0\dbch\af13 \fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3929 ?};}{\levelnumbers;}
\loch\af10\hich\af10\dbch\af13 \fi-360\li6840\jclisttab\tx6840\lin6840 }{\listname ;}\listid258188}{\list\listtemplateid3794230\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'02\'00.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}
\loch\af0\hich\af0\dbch\af13 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 
\fi-180\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li3600\jclisttab\tx3600\lin3600 
}{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc2\levelnfcn2
\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-180\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'02\'07.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'08.;}{\levelnumbers
\'01;}\loch\af0\hich\af0\dbch\af13 \fi-180\li7200\jclisttab\tx7200\lin7200 }{\listname ;}\listid258189}{\list\listtemplateid3794231\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'01{\uc1\u-3988 ?};}{\levelnumbers;}\loch\af10\hich\af10\dbch\af13 \fi-360\li780\jclisttab\tx780\lin780 }{\listname ;}\listid258190}{\list\listtemplateid3794232\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\loch\af0\hich\af0\dbch\af13 \jclisttab\tx360 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'03\'00.\'01;}{\levelnumbers\'01\'03;}\loch\af0\hich\af0\dbch\af13 \jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'05\'00.\'01.\'02;}{\levelnumbers\'01\'03\'05;}
\loch\af0\hich\af0\dbch\af13 \jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'07\'00.\'01.\'02.\'03;}{\levelnumbers\'01\'03\'05\'07;}\loch\af0\hich\af0\dbch\af13 
\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'09\'00.\'01.\'02.\'03.\'04;}{\levelnumbers\'01\'03\'05\'07\'09;}\loch\af0\hich\af0\dbch\af13 \jclisttab\tx0 }{\listlevel
\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0b\'00.\'01.\'02.\'03.\'04.\'05;}{\levelnumbers\'01\'03\'05\'07\'09\'0b;}\loch\af0\hich\af0\dbch\af13 \jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0d\'00.\'01.\'02.\'03.\'04.\'05.\'06;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}\loch\af0\hich\af0\dbch\af13 \jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0f\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\loch\af0\hich\af0\dbch\af13 \jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'11\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\loch\af0\hich\af0\dbch\af13 \jclisttab\tx0 }{\listname ;}\listid258191}}
{\*\listoverridetable{\listoverride\listid258191\listoverridecount0\ls1}{\listoverride\listid258185\listoverridecount0\ls2}{\listoverride\listid258189\listoverridecount0\ls3}{\listoverride\listid258179\listoverridecount0\ls4}{\listoverride\listid258181
\listoverridecount0\ls5}{\listoverride\listid258176\listoverridecount0\ls6}{\listoverride\listid258188\listoverridecount0\ls7}{\listoverride\listid258183\listoverridecount0\ls8}{\listoverride\listid258182\listoverridecount0\ls9}}{\*\rsidtbl \rsid0
\rsid3361572\rsid5250314\rsid7691021\rsid10445071\rsid11544686\rsid11890741\rsid12195522\rsid16338245}{\*\generator Microsoft Word 11.0.5604;}{\info{\title Data Validation 1.1 Component Specification}{\author lyt}{\operator lyt}
{\creatim\yr2007\mo5\dy6\hr15\min16}{\revtim\yr2007\mo5\dy6\hr15\min30}{\version9}{\edmins9}{\nofpages19}{\nofwords8097}{\nofchars46156}{\*\company Zhejiang University}{\nofcharsws54145}{\vern24689}}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0 \ftnbj\aenddoc\expshrtn\noultrlspc\dntblnsbdb\hyphcaps0\horzdoc\dgmargin\dghspace1\dgvspace180\dghorigin1800\dgvorigin1440\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lnbrkrule\rsidroot11544686 {\*\fchars 
!),.:\'3b?]\'7d\'a1\'a7\'a1\'a4\'a1\'a6\'a1\'a5\'a8\'44\'a1\'ac\'a1\'af\'a1\'b1\'a1\'ad\'a1\'c3\'a1\'a2\'a1\'a3\'a1\'a8\'a1\'a9\'a1\'b5\'a1\'b7\'a1\'b9\'a1\'bb\'a1\'bf\'a1\'b3\'a1\'bd\'a3\'a1\'a3\'a2\'a3\'a7\'a3\'a9\'a3\'ac\'a3\'ae\'a3\'ba\'a3\'bb\'a3\'bf\'a3\'dd\'a3\'e0\'a3\'fc\'a3\'fd\'a1\'ab\'a1\'e9
}{\*\lchars ([\'7b\'a1\'a4\'a1\'ae\'a1\'b0\'a1\'b4\'a1\'b6\'a1\'b8\'a1\'ba\'a1\'be\'a1\'b2\'a1\'bc\'a3\'a8\'a3\'ae\'a3\'db\'a3\'fb\'a1\'ea\'a3\'a4}\fet0{\*\ftnsep \pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \chftnsep 
\par }}{\*\ftnsepc \pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \chftnsepc 
\par }}{\*\aftnsep \pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \chftnsep 
\par }}{\*\aftnsepc \pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \chftnsepc 
\par }}\sectd \linex0\endnhere\pgbrdropt32\sectlinegrid360\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta \dbch )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb \dbch (}{\pntxta \dbch )}}\pard\plain \s1\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx720\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs28\ul\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Data Validation 1.1 Component Specification}{\fs28\ul\cf2\dbch\af0\insrsid12195522 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
The Data Validation component defines an ObjectValidator interface with a collection of default implementations, which provide convenient and\hich\af1\dbch\af13\loch\f1 
 complex functionality for data validation. These implementations can be retrieved from factory methods that cover the primitive data types and their wrapper class. Example Validators include a range-validator, whitespace-validator, and substring-validato
\hich\af1\dbch\af13\loch\f1 r\hich\af1\dbch\af13\loch\f1 . A primitive Validator can validate its own data type, other data types that can be converted to its data type or strings that can be parsed into its data type. 
\par \hich\af1\dbch\af13\loch\f1 Primitive Validators are abstract and intended to be extended. 
\par \hich\af1\dbch\af13\loch\f1 The }{\f2\fs20\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 PrimitiveValidator}{\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1  is use\hich\af1\dbch\af13\loch\f1 
d to wrap an ObjectValidator into a Validator that can validate any java data type. This is achieved by providing overridden methods for each primitive data type and wrapping the primitive value in its object class before calling the underlying Validator.
\hich\af1\dbch\af13\loch\f1  
\par \hich\af1\dbch\af13\loch\f1 The }{\f2\fs20\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 TypeValidator}{\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 is used to validate a given object of a specified type. It can also wrap an underlying Validator to ease construction overhead. 
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
The component also contains composite validators such as AndValidator, OrValidator and }{\f2\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 NotValidator}{\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 . This al\hich\af1\dbch\af13\loch\f1 
lows construction of complex validation logic with little effort.}{\insrsid12195522 
\par 
\par \hich\af1\dbch\af13\loch\f1 Please note that changes to version 1.1 will be shown in }{\b\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 red}{\insrsid12195522 \hich\af1\dbch\af13\loch\f1  (new entries) and }{\b\cf2\insrsid12195522 
\hich\af1\dbch\af13\loch\f1 blue}{\insrsid12195522 \hich\af1\dbch\af13\loch\f1  (modification of existing entries).
\par }{\cf6\dbch\af0\insrsid12195522 
\par {\listtext\pard\plain\s1 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 1.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Design
\par {\listtext\pard\plain\s3 \i\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 1.1.1\tab}}\pard\plain \s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 
\i\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Base implementations decisions
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 The following decisions have b
\hich\af1\dbch\af13\loch\f1 een made as far as requirements are concerned.
\par {\listtext\pard\plain\s4 \fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 1.1.1.1\tab}}\pard\plain \s4\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
In version 1.1, support for returning validation messages as a collection of Strings is added. This way, the component is more flexible for GUI interfaces to format and display validation error messages.
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This 
\hich\af1\dbch\af13\loch\f1 is basically a way of collecting all the messages from all relevant validators that make up our composite validator. Thus if the user has a composite validator the following API would be utilized}{\insrsid12195522 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\loch\af1\dbch\af0\insrsid12195522 \tab 
\par }\pard \ql \fi720\li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs20\cf6\loch\af5\hich\af5\dbch\af0\insrsid12195522 String[] getMessages(Object obj);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs20\cf6\loch\af5\hich\af5\dbch\af0\insrsid12195522 
\par }{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 This means that if the validator is composite we will get all the messages if the validation failed. Here is how we can imagine a typical composite validator:
\par 
\par }{\lang1024\langfe1024\noproof\insrsid12195522 {\shp{\*\shpinst\shpleft6300\shptop195\shpright6301\shpbottom735\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz11\shplid1026
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fShadowOK}{\sv 1}}
{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8203\dpline\dpptx0\dppty0\dpptx1\dppty540
\dpx6300\dpy195\dpxsize1\dpysize540\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}{\shp{\*\shpinst\shpleft4500\shptop195\shpright6300\shpbottom196\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz10\shplid1027
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fShadowOK}{\sv 1}}
{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8202\dpline\dpptx0\dppty0\dpptx1800\dppty1
\dpx4500\dpy195\dpxsize1800\dpysize1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}{\shp{\*\shpinst\shpleft2520\shptop195\shpright2521\shpbottom735\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz9\shplid1028
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fShadowOK}{\sv 1}}
{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8201\dpline\dpptx0\dppty0\dpptx1\dppty540
\dpx2520\dpy195\dpxsize1\dpysize540\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}{\shp{\*\shpinst\shpleft2520\shptop195\shpright2880\shpbottom196\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz8\shplid1029
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 1}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fShadowOK}{\sv 1}}
{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8200\dpline\dpptx360\dppty0\dpptx0\dppty1
\dpx2520\dpy195\dpxsize360\dpysize1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}{\shp{\*\shpinst\shpleft4500\shptop195\shpright4501\shpbottom735\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz7\shplid1030
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fShadowOK}{\sv 1}}
{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8199\dpline\dpptx0\dppty0\dpptx1\dppty540
\dpx4500\dpy195\dpxsize1\dpysize540\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}{\shp{\*\shpinst\shpleft4140\shptop195\shpright4500\shpbottom196\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz6\shplid1031
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fShadowOK}{\sv 1}}
{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8198\dpline\dpptx0\dppty0\dpptx360\dppty1
\dpx4140\dpy195\dpxsize360\dpysize1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}{\shp{\*\shpinst\shpleft2880\shptop15\shpright4140\shpbottom375\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz0\shplid1032
{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn lTxid}{\sv 65536}}
{\sp{\sn fShadowOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt \pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 top
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8192\dptxbx\dptxlrtb{\dptxbxtext\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 top
\par }}\dpx2880\dpy15\dpxsize1260\dpysize360\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 \tab 
\par 
\par 
\par }{\lang1024\langfe1024\noproof\insrsid12195522 {\shp{\*\shpinst\shpleft5760\shptop45\shpright7020\shpbottom405\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz3\shplid1033
{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn lTxid}{\sv 131072}}
{\sp{\sn fShadowOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt \pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 3
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8195\dptxbx\dptxlrtb{\dptxbxtext\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 3
\par }}\dpx5760\dpy45\dpxsize1260\dpysize360\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}
{\shp{\*\shpinst\shpleft3960\shptop45\shpright5220\shpbottom405\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz2\shplid1034{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn lTxid}{\sv 196608}}{\sp{\sn fShadowOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt 
\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 2
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8194\dptxbx\dptxlrtb{\dptxbxtext\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 2
\par }}\dpx3960\dpy45\dpxsize1260\dpysize360\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}
{\shp{\*\shpinst\shpleft1980\shptop45\shpright3240\shpbottom405\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz1\shplid1035{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn lTxid}{\sv 262144}}{\sp{\sn fShadowOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt 
\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 1
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8193\dptxbx\dptxlrtb{\dptxbxtext\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 1
\par }}\dpx1980\dpy45\dpxsize1260\dpysize360\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par }{\lang1024\langfe1024\noproof\insrsid12195522 {\shp{\*\shpinst\shpleft5940\shptop175\shpright5941\shpbottom1435\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz12\shplid1036
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fShadowOK}{\sv 1}}
{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8204\dpline\dpptx0\dppty0\dpptx1\dppty1260
\dpx5940\dpy175\dpxsize1\dpysize1260\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par 
\par }{\lang1024\langfe1024\noproof\insrsid12195522 {\shp{\*\shpinst\shpleft6480\shptop76\shpright7740\shpbottom436\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz4\shplid1037
{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn lTxid}{\sv 327680}}
{\sp{\sn fShadowOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt \pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 3a
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8196\dptxbx\dptxlrtb{\dptxbxtext\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 3a
\par }}\dpx6480\dpy76\dpxsize1260\dpysize360\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par }{\lang1024\langfe1024\noproof\insrsid12195522 {\shp{\*\shpinst\shpleft5940\shptop26\shpright6480\shpbottom27\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz13\shplid1038
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fShadowOK}{\sv 1}}
{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8205\dpline\dpptx0\dppty0\dpptx540\dppty1
\dpx5940\dpy26\dpxsize540\dpysize1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\fs20\cf1\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\insrsid12195522 
\par }{\lang1024\langfe1024\noproof\insrsid12195522 {\shp{\*\shpinst\shpleft5940\shptop240\shpright6480\shpbottom241\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz14\shplid1039
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fShadowOK}{\sv 1}}
{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8206\dpline\dpptx0\dppty0\dpptx540\dppty1
\dpx5940\dpy240\dpxsize540\dpysize1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}{\shp{\*\shpinst\shpleft6480\shptop60\shpright7740\shpbottom420\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz5\shplid1040
{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn lTxid}{\sv 393216}}
{\sp{\sn fShadowOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt \pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 3b
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8197\dptxbx\dptxlrtb{\dptxbxtext\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 3b
\par }}\dpx6480\dpy60\dpxsize1260\dpysize360\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\insrsid12195522 
\par 
\par 
\par }\pard\plain \s25\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
In the above diagram we can imagine that the top validator is an AndValidator and the other validators are all either primitive (leaves) or composite (nodes). The point of the diagram is to show that, potentially, when calling the new required API we woul
\hich\af1\dbch\af13\loch\f1 d\hich\af1\dbch\af13\loch\f1  need to remember each message from the failed leaves. Let consider the following validation path <top, 3, 3a, 3b> and lets say that the 3a and 3b validators both fail (we can assume that 3 is an }{
\f2\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 OrValidator}{\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 ) this means that we would have the following fai\hich\af1\dbch\af13\loch\f1 
lure trace: <fail, fail, fail, fail> and it could mean that we should get a message from each leaf which in this case means that we should get back an array with 3a-message and 3b-message. In other words as per the requirement we only return the messages 
\hich\af1\dbch\af13\loch\f1 f\hich\af1\dbch\af13\loch\f1 rom the failed leaves.
\par 
\par \hich\af1\dbch\af13\loch\f1 Also note that the evaluation of any hierarchy is by default }{\cf6\highlight7\insrsid12195522 \hich\af1\dbch\af13\loch\f1 short-circuited}{\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
, which means that the moment the result is known the sub-hierarchy will not be evaluated and thus additional messages will not be added. Consider this path\hich\af1\dbch\af13\loch\f1 
 of validation: <top, 1> if the 1-validator fails there is no point to evaluate 2 or 3 (assuming that top is an }{\f2\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 AndValidator}{\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
) even though 3 might still have all of its sub-leaves fail the input.
\par 
\par \hich\af1\dbch\af13\loch\f1 All of this will be achieved by the assumption that any comp\hich\af1\dbch\af13\loch\f1 
osite validator will only return the messages created by its nodes and we will simply keep on adding these messages to an internal list which eventually will hold all the needed messages.}{\insrsid12195522 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 
\par {\listtext\pard\plain\s4 \fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 1.1.1.2\tab}}\pard\plain \s4\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Support for internationalization is required in this new version wi\hich\af1\dbch\af13\loch\f1 thout loosing backward

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 compatibility.
\par The main idea behind the 1.1 component architecture is to create a layer of abstraction between all the current validator implementations and the main }{\fs20\cf6\loch\af2\hich\af2\dbch\af0\insrsid12195522 ObjectValidator}{
\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522  interface that they all implement. This in essence 
will create a layer of support, which will include internationalization (i.e. resource bundling) for all currently descended validators. Here is what it would look like:
\par 
\par }{\lang1024\langfe1024\noproof\insrsid12195522 {\shp{\*\shpinst\shpleft1800\shptop119\shpright5040\shpbottom479\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz15\shplid1041
{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn lTxid}{\sv 458752}}
{\sp{\sn fShadowOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt \pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 ObjectValidator
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8207\dptxbx\dptxlrtb{\dptxbxtext\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 ObjectValidator
\par }}\dpx1800\dpy119\dpxsize3240\dpysize360\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par 
\par }{\lang1024\langfe1024\noproof\insrsid12195522 {\shp{\*\shpinst\shpleft3240\shptop19\shpright3241\shpbottom559\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz22\shplid1042
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 1}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fShadowOK}{\sv 1}}
{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn lineEndArrowhead}{\sv 1}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8214
\dpline\dpptx1\dppty0\dpptx0\dppty540\dpaendsol\dpaendw2\dpaendl2\dpx3240\dpy19\dpxsize1\dpysize540\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par 
\par }{\lang1024\langfe1024\noproof\insrsid12195522 {\shp{\*\shpinst\shpleft6120\shptop99\shpright7920\shpbottom459\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz24\shplid1043
{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn lTxid}{\sv 524288}}
{\sp{\sn fShadowOK}{\sv 1}}{\sp{\sn lineDashing}{\sv 6}}{\sp{\sn fLine}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt \pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 ResourceBundle
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8216\dptxbx\dptxlrtb{\dptxbxtext\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 ResourceBundle
\par }}\dpx6120\dpy99\dpxsize1800\dpysize360\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}
{\shp{\*\shpinst\shpleft1800\shptop114\shpright5040\shpbottom474\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz16\shplid1044{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn lTxid}{\sv 589824}}{\sp{\sn fShadowOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt 
\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 AbstractObjectValidator
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8208\dptxbx\dptxlrtb{\dptxbxtext\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 AbstractObjectValidator
\par }}\dpx1800\dpy114\dpxsize3240\dpysize360\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par }{\lang1024\langfe1024\noproof\insrsid12195522 {\shp{\*\shpinst\shpleft5040\shptop49\shpright6120\shpbottom50\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz25\shplid1045
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fShadowOK}{\sv 1}}
{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn lineDashing}{\sv 6}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLine}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8217
\dpline\dpptx0\dppty0\dpptx1080\dppty1\dplinedash\dpx5040\dpy49\dpxsize1080\dpysize1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par }{\lang1024\langfe1024\noproof\insrsid12195522 {\shp{\*\shpinst\shpleft3240\shptop-1\shpright3241\shpbottom359\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz23\shplid1046
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 1}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fShadowOK}{\sv 1}}
{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn lineEndArrowhead}{\sv 1}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8215
\dpline\dpptx1\dppty0\dpptx0\dppty360\dpaendsol\dpaendw2\dpaendl2\dpx3240\dpy-1\dpxsize1\dpysize360\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par }{\lang1024\langfe1024\noproof\insrsid12195522 {\shp{\*\shpinst\shpleft180\shptop129\shpright8820\shpbottom130\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz17\shplid1047
{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn fShadowOK}{\sv 1}}
{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn lineDashing}{\sv 6}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLine}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8209
\dpline\dpptx0\dppty0\dpptx8640\dppty1\dplinedash\dpx180\dpy129\dpxsize8640\dpysize1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}
{\shp{\*\shpinst\shpleft2700\shptop279\shpright4500\shpbottom639\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz19\shplid1048{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn lTxid}{\sv 655360}}{\sp{\sn fShadowOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt 
\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 OrValidator
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8211\dptxbx\dptxlrtb{\dptxbxtext\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 OrValidator
\par }}\dpx2700\dpy279\dpxsize1800\dpysize360\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}
{\shp{\*\shpinst\shpleft6660\shptop279\shpright8460\shpbottom639\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz21\shplid1049{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn lTxid}{\sv 720896}}{\sp{\sn fShadowOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt 
\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 . . . 
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8213\dptxbx\dptxlrtb{\dptxbxtext\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\b\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 . . . 
\par }}\dpx6660\dpy279\dpxsize1800\dpysize360\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}
{\shp{\*\shpinst\shpleft4680\shptop279\shpright6480\shpbottom639\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz20\shplid1050{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}
{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn lTxid}{\sv 786432}}{\sp{\sn fShadowOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt 
\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 IntegerValidator
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8212\dptxbx\dptxlrtb{\dptxbxtext\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 IntegerValidator
\par }}\dpx4680\dpy279\dpxsize1800\dpysize360\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par }{\lang1024\langfe1024\noproof\insrsid12195522 {\shp{\*\shpinst\shpleft720\shptop49\shpright2520\shpbottom409\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz18\shplid1051
{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fLockRotation}{\sv 0}}{\sp{\sn fLockAspectRatio}{\sv 0}}{\sp{\sn fLockVerticies}{\sv 0}}{\sp{\sn fLockText}{\sv 0}}{\sp{\sn lTxid}{\sv 851968}}
{\sp{\sn fShadowOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\shptxt \pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 AndValidator
\par }}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8210\dptxbx\dptxlrtb{\dptxbxtext\pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 AndValidator
\par }}\dpx720\dpy49\dpxsize1800\dpysize360\dpfillfgcr255\dpfillfgcg255\dpfillfgcb255\dpfillbgcr255\dpfillbgcg255\dpfillbgcb255\dpfillpat1\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par 
\par 
\par 
\par The basic idea here is that the AbstractObjectValidator will supply all the internationalization functionality directly to the descendants who previously just extended/implemented ObjectValidator.
\par 
\par The way that this will be implemented is that we will create the following constructors for }{\fs20\cf6\loch\af2\hich\af2\dbch\af0\insrsid12195522 AbstractObjectValidator}{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 :
\par 
\par }{\fs16\cf6\loch\af2\hich\af2\dbch\af0\insrsid12195522 \tab AbstractObjectValidator(BundleInfo bundleInfo)
\par }{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par where the following information is contained in the BundleInfo class
\par 
\par {\listtext\pard\plain\f3\fs20\cf6 \loch\af3\dbch\af13\hich\f3 \'b7\tab}}\pard \ql \fi-360\li1080\ri0\widctlpar\tx1080\faauto\ls2\adjustright\rin0\lin1080\itap0 {\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
bundleName is the name of the resource Bundle to use
\par {\listtext\pard\plain\f3\fs20\cf6 \loch\af3\dbch\af13\hich\f3 \'b7\tab}locale is the locale to use
\par {\listtext\pard\plain\f3\fs20\cf6 \loch\af3\dbch\af13\hich\f3 \'b7\tab}messageKey is the key to use to obtain the message from the bundle
\par {\listtext\pard\plain\f3\fs20\cf6 \loch\af3\dbch\af13\hich\f3 \'b7\tab}defaultMessage is the message to use if there was a failure to load up the message from the resource bundle.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par Note that the bundle information will always be copied so the original can be conveniently reused.
\par 
\par 
\par 
\par {\listtext\pard\plain\s4 \fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 1.1.1.3\tab}}\pard\plain \s4\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Serialization of Validators
\par }\pard\plain \s24\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs16\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
As required all validators will be serializable. This is achieved by simply having the ObjectValidator interface be extended\hich\af1\dbch\af13\loch\f1 
 from Serializable interface. Note that for efficiency reasons the ResourceBundle will be loaded up from the provided name upon construction but since ResourceBundle is itself NOT serializable we will need to ensure that we properly serialize/deserialize 
\hich\af1\dbch\af13\loch\f1 t\hich\af1\dbch\af13\loch\f1 he bundle which means that the internal resourceBundle variable will have to be transient as follows:
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 
\par }{\fs16\cf6\loch\af2\dbch\af0\insrsid12195522 \tab }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 private transient ResourceBundle resourceBundle
\par 
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
We will also need to be able to properly serialize the variable and we will need these for that:
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\cs15\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 priva\hich\af2\dbch\af13\loch\f2 te  void writeObject(java.io.ObjectOutputStream stream) throws 
\par \hich\af2\dbch\af13\loch\f2     java.io.IOException \{}{\fs16\cf6\loch\af2\dbch\af0\insrsid12195522 
\par }{\cs15\fs16\cf6\loch\af2\insrsid12195522 \tab }{\cs15\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 stream.defaultWriteObject(  ); 
\par \}}{\fs16\cf6\loch\af2\dbch\af0\insrsid12195522 
\par }{\cs15\fs16\cf6\loch\af2\insrsid12195522 \~}{\fs16\cf6\loch\af2\dbch\af0\insrsid12195522 
\par }{\cs15\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 private  void readObject(java.io.ObjectInputStream stream) throws 
\par \hich\af2\dbch\af13\loch\f2     java.io.IOException \{}{\fs16\cf6\loch\af2\dbch\af0\insrsid12195522 
\par }{\cs15\fs16\cf6\loch\af2\insrsid12195522 \tab }{\cs15\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 stream.defaultReadObject(  ); }{\fs16\cf6\loch\af2\dbch\af0\insrsid12195522 
\par }{\cs15\fs16\cf6\loch\af2\insrsid12195522 \tab }{\cs15\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 // load up the bundle
\par \hich\af2\dbch\af13\loch\f2    \tab if(currentLocale == true)\{
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\cs15\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2     bundleLocale = // current locale
\par \}
\par }\pard\plain \s26\ql \li1440\ri1590\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\aspalpha\aspnum\faauto\adjustright\rin1590\lin1440\itap0 
\fs18\lang1033\langfe2052\loch\af34\hich\af34\dbch\af13\cgrid\langnp1033\langfenp2052 {\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 resourceBundle = 
\par \tab \hich\af2\dbch\af13\loch\f2 ResourceBundle.getBundle(bundleName, bundleLocale);
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\cs15\fs16\cf6\loch\af2\insrsid12195522 \}}{\insrsid12195522 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs20\loch\af1\dbch\af0\insrsid12195522 
\par {\listtext\pard\plain\s3 \i\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 1.1.2\tab}}\pard\plain \s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 
\i\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 General changes from version 1.0 to 1.1
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
There are a number of things that will be changed:
\par {\listtext\pard\plain\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 1.\tab}}\pard\plain \ql \fi-360\li1080\ri0\widctlpar\tx1080\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin1080\itap0 
\fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
The version 1.1 design will follow all TopCoder coding conventions as long as their introduction will not change existing client code. Thus the following aspects will be changed
\par {\listtext\pard\plain\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 a.\tab}}\pard \ql \fi-360\li2160\ri0\widctlpar\tx2160\aspalpha\aspnum\faauto\ls3\ilvl1\adjustright\rin0\lin2160\itap0 {\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
All protected variables will be changed to private (and final where applicabl\hich\af1\dbch\af13\loch\f1 e) and if necessary get/set or other accessor/mutator methods will be introduced.
\par {\listtext\pard\plain\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 2.\tab}}\pard \ql \fi-360\li1080\ri0\widctlpar\tx1080\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin1080\itap0 {\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
Documentation and presentation will be brought up to the current TopCoder standards.
\par {\listtext\pard\plain\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 a.\tab}}\pard \ql \fi-360\li2160\ri0\widctlpar\tx2160\aspalpha\aspnum\faauto\ls3\ilvl1\adjustright\rin0\lin2160\itap0 {\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
Class and method documentation will be brought up to the current TopCoder standards
\par {\listtext\pard\plain\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 b.\tab}\hich\af1\dbch\af13\loch\f1 UML w\hich\af1\dbch\af13\loch\f1 ill be brought up to the current TopCoder standards.
\par {\listtext\pard\plain\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 c.\tab}\hich\af1\dbch\af13\loch\f1 The CS document will follow the latest TopCoder document template.}{\fs20\loch\af1\dbch\af0\insrsid12195522 
\par }\pard \ql \li1800\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1800\itap0 {\insrsid12195522 \hich\af0\dbch\af13\loch\f0  
\par {\listtext\pard\plain\s3 \i\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 1.1.3\tab}}\pard\plain \s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 
\i\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Functional Enhancements
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
Here we are listing the enhancements that have been added to this component on top of what the requirements ha\hich\af1\dbch\af13\loch\f1 ve asked for.
\par {\listtext\pard\plain\s4 \fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 1.1.3.1\tab}}\pard\plain \s4\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Extra validators
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
The following validators have been added to the design as being deemed to be helpful:
\par {\listtext\pard\plain\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 1.\tab}}\pard\plain \ql \fi-360\li1080\ri0\widctlpar\tx1080\aspalpha\aspnum\faauto\ls4\adjustright\rin0\lin1080\itap0 
\fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
RegexpStringValidator, which is a validator that allows for regular expression validation. This was painfully missing from the StringValida\hich\af1\dbch\af13\loch\f1 tor repertoire.}{\cf6\insrsid12195522 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par {\listtext\pard\plain\s4 \fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 1.1.3.2\tab}}\pard\plain \s4\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Non short circuited composite validator evaluation
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
Currently the new version of valid method, which returns multiple validation messages is short-circuited which means that for an AndValidator only one branch needs to be tested to see if the result is false and if so other branches will not be tested, and
\hich\af1\dbch\af13\loch\f1  \hich\af1\dbch\af13\loch\f1 
for an OrValidator we would have the same with a branch that returns true. This can be sometimes a drag since it would be nice to know all the errors regardless of the composition of the validator. This enhancement will provide exactly such API with an ad
\hich\af1\dbch\af13\loch\f1 d\hich\af1\dbch\af13\loch\f1 itional convenience, which will limit the number of returned messages. Here is what the API will look like:}{\insrsid12195522 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\loch\af1\dbch\af0\insrsid12195522 
\par \tab }{\fs20\cf6\loch\af5\hich\af5\dbch\af0\insrsid12195522 String[] getAllMessages(Object obj, int messageLimit);
\par }{\fs20\loch\af1\dbch\af0\insrsid12195522 \tab }{\fs20\cf6\loch\af5\hich\af5\dbch\af0\insrsid12195522 String[] getAllMessages(Object obj);
\par 
\par }{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 If the }{\fs20\cf6\loch\af2\hich\af2\dbch\af0\insrsid12195522 messageLimit}{\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 
 is used it will limit the number of returned messages and if the other overloaded version is used it will return all the messages and will evaluate every branch.
\par }\pard\plain \s25\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 
\par {\listtext\pard\plain\s3 \i\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 1.1.4\tab}}\pard\plain \s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 
\i\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 API enhancements
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
The following aspects of the 1.0 version API has been enhanced in version 1\hich\af1\dbch\af13\loch\f1 .1
\par {\listtext\pard\plain\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 1.\tab}}\pard\plain \ql \fi-360\li1080\ri0\widctlpar\tx1080\aspalpha\aspnum\faauto\ls5\adjustright\rin0\lin1080\itap0 
\fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f2\fs20\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 AbstractAssociativeObjectValidator}{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 class has now the ability to remove associated validators as well as list/iterate over existing iterators.
\par {\listtext\pard\plain\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 2.\tab}\hich\af1\dbch\af13\loch\f1 All of the numeric based validators such as }{\f2\fs20\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 ByteValidator}{\f1\fs20\cf6\insrsid12195522 
\hich\af1\dbch\af13\loch\f1 , }{\f2\fs20\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 LongValidator}{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 , etc\loch\af1\dbch\af13\hich\f1 \'85\hich\af1\dbch\af13\loch\f1 
 were missing the notion of equal\hich\af1\dbch\af13\loch\f1 ity validation. This was added to their API as well as to the }{\f2\fs20\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 CompareDirection}{\f1\fs20\cf6\insrsid12195522 
\hich\af1\dbch\af13\loch\f1  enumeration (we added the EQUAL direction)}{\fs20\loch\af1\dbch\af0\insrsid12195522 
\par }\pard\plain \s25\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 1.2\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Design Patterns 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Composite Pattern}{
\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 : The component uses the composite pattern to allow several validators to work together in \loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 and/or\loch\af1\dbch\af13\hich\f1 \'93
\hich\af1\dbch\af13\loch\f1  mode. This facilitates a more natural representation of validation logic.
\par }{\b\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Factory Method}{\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
: The component uses a factory method to concentrate similar functionality for primitive data types into one class. This makes both simplifies the package structure an\hich\af1\dbch\af13\loch\f1 d component usage.}{\cf6\insrsid12195522 
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 1.3\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Industry Standards 
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Java 1.4.x
\par }\pard \ql \fi720\li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\fs20\cf6\loch\af1\hich\af1\dbch\af0\insrsid12195522 I18N}{\fs20\loch\af1\dbch\af0\insrsid12195522 
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 1.4\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Required Algorithms
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
Please note that complete source code has been provided in the }{\cf6\highlight7\insrsid12195522 \\\hich\af1\dbch\af13\loch\f1 docs\\prototype_src}{\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 directory and the developer should consult that for their algorithm needs.
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\loch\af1\dbch\af0\insrsid12195522 
\par }\pard\plain \s28\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf1\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
1) The AbstractAssociativeObjectValidator class implements the add validator logic. This prevents the AndValidator and OrValidator classes from having to implement it multiple times. 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\cf1\loch\af1\dbch\af0\insrsid12195522 
\par }\pard\plain \s28\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf1\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 2) }{\cf2\insrsid12195522 
\hich\af1\dbch\af13\loch\f1 For the getMessage(Object) or valid(Object) }{\cf0\insrsid12195522 \hich\af1\dbch\af13\loch\f1 The AndValidator class s\hich\af1\dbch\af13\loch\f1 hould return true when it is empty.}{\insrsid12195522 
\hich\af1\dbch\af13\loch\f1  Likewise, the class OrValidator should return false }{\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 (or the non-null message) }{\insrsid12195522 \hich\af1\dbch\af13\loch\f1 when it is empty. Here is the general loop logic:

\par }\pard\plain \s19\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs24\cf1\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\insrsid12195522 
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 
AndValidator.valid(Object) }{\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 
\par }\pard \ql \fi720\li360\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 for (Iterator }{\f2\fs16\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 itr = getValidators()}{
\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 ; itr.hasNext();)\{ 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 if (!((ObjectValidator) itr.next()).valid(obj))\{ 
\par }\pard \ql \fi360\li1800\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1800\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 return false; 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 \}}{\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2  
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2    \} 
\par }\pard \ql \fi720\li360\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 return true;}{\f1\fs16\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1  }{
\fs20\cf1\loch\af1\dbch\af0\insrsid12195522 
\par }\pard \ql \fi360\li1080\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1080\itap0 {\fs20\cf1\loch\af1\dbch\af0\insrsid12195522 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\b\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 
\par }{\b\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 OrValidator.valid(Object) }{\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 
\par }\pard \ql \fi720\li360\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 for (Iterator itr = }{\f2\fs16\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 getValidators()}{
\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 ; itr.hasNext();) \{ 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 if (((ObjectValidator) itr.next()).valid(obj))\{ 
\par }\pard \ql \fi720\li1080\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1080\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 return true; 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 \}
\par }\pard \ql \fi720\li360\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 {\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 \}}{\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2  
\par \hich\af2\dbch\af13\loch\f2 return false; 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
3) There is an abstract class for each primitive data type, including java.lang.String. Each of these classes has two \loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 valid\loch\af1\dbch\af13\hich\f1 \'94\hich\af1\dbch\af13\loch\f1 
 methods, one for objects and one for the primitive data type. The primitive Validators should implement the Object version; conver\hich\af1\dbch\af13\loch\f1 
ting the primitive to object form and calling the object validate method. The other method is left abstract. In this way the user only has to extend the primitive validator and implement the second method and immediately has the conversion logic. 
\par }\pard \ql \li360\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 {\fs20\cf1\loch\af1\dbch\af0\insrsid12195522 
\par }\pard\plain \s28\ql \li0\ri0\widctlpar\tx180\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf1\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
4) Conversion should be carried out as follows: 
\par }\pard\plain \s19\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs24\cf1\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\insrsid12195522 
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f2\fs16\insrsid12195522 \hich\af2\dbch\af13\loch\f2 
IntegerValidator.valid(Object) 
\par }\pard \ql \li1080\ri0\widctlpar\tx360\aspalpha\aspnum\faauto\adjustright\rin0\lin1080\itap0 {\f2\fs16\insrsid12195522 \hich\af2\dbch\af13\loch\f2 if (obj instanceof Number) \{ 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\insrsid12195522 \hich\af2\dbch\af13\loch\f2 return valid(((Number) obj).intValue()); 
\par }\pard \ql \li1080\ri0\widctlpar\tx180\aspalpha\aspnum\faauto\adjustright\rin0\lin1080\itap0 {\fs16\loch\af2\dbch\af0\insrsid12195522 \}}{\f2\fs16\insrsid12195522 \hich\af2\dbch\af13\loch\f2  else (obj instanceof String) \{ 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\insrsid12195522 \hich\af2\dbch\af13\loch\f2 try \{ 
\par }\pard \ql \fi360\li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {\f2\fs16\insrsid12195522 \hich\af2\dbch\af13\loch\f2 return valid(Integer.parseInt((String) obj)); 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\fs16\loch\af2\dbch\af0\insrsid12195522 \}}{\f2\fs16\insrsid12195522 \hich\af2\dbch\af13\loch\f2  catch (Exception exception) \{ 
\par }\pard \ql \fi360\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\fs16\loch\af2\dbch\af0\insrsid12195522 \}}{\f2\fs16\insrsid12195522 \hich\af2\dbch\af13\loch\f2  
\par \hich\af2\dbch\af13\loch\f2 return false;}{\fs16\insrsid12195522 \hich\af0\dbch\af13\loch\f0  }{\insrsid12195522 
\par }\pard \ql \fi720\li600\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin600\itap0 {\fs20\cf1\loch\af1\dbch\af0\insrsid12195522 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 5) The two floating point data types provide a facility to account for epsilon. The default implementation is 
\loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 YES\loch\af1\dbch\af13\hich\f1 \'94\hich\af1\dbch\af13\loch\f1 . Epsilon can also be set by a call to the setEpsilon method. This will overwrite the defa\hich\af1\dbch\af13\loch\f1 
ult value (which is 1e-8 for float and 1e-12 for double). The user can also set epsilon to a non-positive value which means epsilon should not be considered. 
\par }\pard \ql \li600\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin600\itap0 {\fs20\cf1\loch\af1\dbch\af0\insrsid12195522 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 6) The Validators returned from the factory methods take conversion into consideration. Type-str
\hich\af1\dbch\af13\loch\f1 
ong validation can be achieved by using the TypeValidator class. This class acts as a wrapper for the validator that first validates on the type of the Object. It can also be used without an underlying validator, meaning it is only interested in the type 
\hich\af1\dbch\af13\loch\f1 o\hich\af1\dbch\af13\loch\f1 f the object. 
\par 
\par \hich\af1\dbch\af13\loch\f1 
7) The validators returned by the factory methods can be implemented with inner class, package class or anonymous class. It is to make use of some common validation mechanisms. For example the IntegerValidator.isPositive() method could be j
\hich\af1\dbch\af13\loch\f1 ust one line: return IntegerValidator.greaterThan(0); 
\par }\pard\plain \s19\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs24\cf1\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\insrsid12195522 
\par \tab }{\fs20\ul\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Some sample private/inner class definitions:
\par }{\fs20\insrsid12195522 
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 
class IntegerValidatorWrapper extends IntegerValidator \{ 
\par \hich\af2\dbch\af13\loch\f2     private ObjectValidator validator = null; 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2         public MyIntegerValidatorWrapper(ObjectValidator validator) \{ 
\par \hich\af2\dbch\af13\loch\f2             this.validator = validator; 
\par \hich\af2\dbch\af13\loch\f2         \} 
\par \hich\af2\dbch\af13\loch\f2         public boolean valid(Object obj) \{ 
\par \hich\af2\dbch\af13\loch\f2             return validator.valid(obj); 
\par \hich\af2\dbch\af13\loch\f2         \} 
\par \hich\af2\dbch\af13\loch\f2         public boolean valid(int val\hich\af2\dbch\af13\loch\f2 ue) \{ 
\par \hich\af2\dbch\af13\loch\f2             return validator.valid(new Integer(value)); 
\par \hich\af2\dbch\af13\loch\f2         \} 
\par \}}{\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1  
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\fs20\cf1\loch\af1\dbch\af0\insrsid12195522 
\par 
\par }{\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 class CompareIntegerValidator extends IntegerValidator \{ 
\par \hich\af2\dbch\af13\loch\f2     private int value; 
\par \hich\af2\dbch\af13\loch\f2     boolean isLess = true; 
\par 
\par \hich\af2\dbch\af13\loch\f2     public CompareIntegerValidator(int value, boolean isLess) \{ 
\par \hich\af2\dbch\af13\loch\f2         this.value = value; 
\par \hich\af2\dbch\af13\loch\f2         this.isLess = isLess; 
\par \hich\af2\dbch\af13\loch\f2     \} 
\par 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2     public boolean valid(int value) \{ 
\par \hich\af2\dbch\af13\loch\f2         return isLess ? value < this.value : value > this.value; 
\par \hich\af2\dbch\af13\loch\f2     \} 
\par \}}{\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1  
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 class GreaterIntegerValidator extends IntegerValidator \{ 
\par \hich\af2\dbch\af13\loch\f2     private int value; 
\par \hich\af2\dbch\af13\loch\f2         public LessIntegerValidator(int value) \{ 
\par \hich\af2\dbch\af13\loch\f2            this.value = value; 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2    \tab         \} 
\par 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2         public boolean valid(int value) \{ 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2            return value > this.value; 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2         \} 
\par \}}{\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1  
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs20\cf1\loch\af1\dbch\af0\insrsid12195522 
\par }{\fs20\loch\af1\dbch\af0\insrsid12195522 \tab }{\f1\fs20\ul\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Some sample one liner p[roposed meth\hich\af1\dbch\af13\loch\f1 od implementations:
\par }{\fs20\cf1\loch\af1\dbch\af0\insrsid12195522 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidator.lessThan(int value): 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 return new CompareIntegerValidator(value, true); 
\par 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidator.greaterThan(int value) 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 return new CompareIntegerValidator(value, false); 
\par 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidator.lessThanOrEqualTo(int value): 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 retu\hich\af2\dbch\af13\loch\f2 rn new IntegerValidatorWrapper( 
\par }\pard \ql \fi720\li2160\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin2160\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 new NotValidator( new CompareValidator(value, false))); 
\par }\pard \ql \fi720\li2880\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin2880\itap0 {\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidator.greaterThanOrEqualTo(int value): 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 return new IntegerValidatorWrapper( 
\par }\pard \ql \fi720\li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 new NotValidator( new CompareValidator(value, true))); 
\par }\pard \ql \fi720\li2160\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin2160\itap0 {\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidator.inRange(int lower, int upper): 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 return new IntegerValidatorWrapper( 
\par }\pard \ql \fi720\li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 new AndValidator( greaterThanOrEqualTo(lower)
\par }\pard \ql \fi720\li2160\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin2160\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 , lessThanOrEqualTo(upper)))); 
\par 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidator.inExclusiveRange(int lower, int upper): 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 return new IntegerValidatorWrappe\hich\af2\dbch\af13\loch\f2 r( 
\par }\pard \ql \fi720\li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 new AndValidator( greaterThan(lower)
\par }\pard \ql \fi720\li2160\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin2160\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 , lessThan(upper)))); 
\par 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidator.isPositive(): 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 return new CompareIntegerValidator(0, false); 
\par 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidator.isNegative(): 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 return new CompareIntegerValidator(0, true);}{\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1  

\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs20\cf1\loch\af1\dbch\af0\insrsid12195522 
\par }{\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 8) All CharaterValidator.isXXX()\hich\af1\dbch\af13\loch\f1  methods reference the Character.isXXX() method. They are semantically the same. 
\par 
\par \hich\af1\dbch\af13\loch\f1 9) The component also provides a PrimitiveValidator to validate \loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 anything\loch\af1\dbch\af13\hich\f1 \'94\hich\af1\dbch\af13\loch\f1 
. This is constructed with an ObjectValidator. Methods for each primitive data type would wrap the \hich\af1\dbch\af13\loch\f1 value in its wrapper class and call the underlying validator. 
\par 
\par \hich\af1\dbch\af13\loch\f1 10) The ObjectValidator interface also declares a getMessage(Object) method. This method parallels the valid(Object) me\hich\af1\dbch\af13\loch\f1 
thod. This method provides an explanation as to why the object in question fails validation. However, this method can replace the valid(Object) method since it should return null when the object actually validates. But the boolean method is still in place
\hich\af1\dbch\af13\loch\f1  \hich\af1\dbch\af13\loch\f1 and it is more natural and convenient when you an explanation is not required.
\par 
\par }{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 11) When it comes to implementing the }{\f2\fs20\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 getMessages(Object)}{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 method this is quite simple since all we need to do here is call the }{\f2\fs20\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 getMessages(Object)}{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 and retain the messages coming from any failed validator. This is quite simple and the loop logic is exactly the same as in getMessage(Object) This really only affects the OrValidator logic (the AndValidator not being changed and the rest being trivial) 
\hich\af1\dbch\af13\loch\f1 h\hich\af1\dbch\af13\loch\f1 ere is what needs to be done in the loop:
\par 
\par 
\par 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12195522 {\b\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 OrValidator.getMessages(Object) }{\b\f2\fs16\cf6\insrsid12195522 
\par }\pard \ql \li749\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin749\itap0\culi312\pararsid12195522 {\f2\fs16\cf6\insrsid12195522\charrsid12195522 \hich\af2\dbch\af13\loch\f2 List allMessages = new ArrayList();
\par 
\par \hich\af2\dbch\af13\loch\f2 // Iterate all validators
\par \hich\af2\dbch\af13\loch\f2 for (Iterator itr = get\hich\af2\dbch\af13\loch\f2 Validators(); itr.hasNext();) \{
\par \hich\af2\dbch\af13\loch\f2     String[] messages = ((ObjectValidator) itr.next()).getMessages(object);
\par 
\par \hich\af2\dbch\af13\loch\f2     if (messages == null) \{
\par \hich\af2\dbch\af13\loch\f2 // Validation successful
\par \hich\af2\dbch\af13\loch\f2 return null;
\par \hich\af2\dbch\af13\loch\f2     \} else \{
\par \hich\af2\dbch\af13\loch\f2 for (int i = 0; i < messages.length; i++) \{
\par \hich\af2\dbch\af13\loch\f2     allMessages.add(mess\hich\af2\dbch\af13\loch\f2 ages[i]);
\par \}
\par \hich\af2\dbch\af13\loch\f2     \}
\par \}
\par 
\par \hich\af2\dbch\af13\loch\f2 return (String[]) (allMessages.toArray(new String[0]));}{\f2\fs16\cf6\insrsid12195522\charrsid12195522 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs20\cf1\loch\af1\dbch\af0\insrsid12195522 
\par }{\fs20\cf1\loch\af1\dbch\af0\insrsid12195522 
\par }{\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 11) The ObjectValidator inte\hich\af1\dbch\af13\loch\f1 rface defines the non-short-circuited version of the getMessages(Object) method which is the getAllMessages(\loch\af1\dbch\af13\hich\f1 \'85
\hich\af1\dbch\af13\loch\f1 ) which comes in two flavors, one which returns all the messages and one which returns an upper bound of messages. Here is how the upper bound of t\hich\af1\dbch\af13\loch\f1 
he OrValidator version would work (note that AndValidator version is basically the same logic) The most important aspect is to be able to track the number of currently obtained messages (which starts a 0). This is done by sending to each validator a modif
\hich\af1\dbch\af13\loch\f1 i\hich\af1\dbch\af13\loch\f1 able }{\f2\fs20\cf1\highlight7\insrsid12195522 \hich\af2\dbch\af13\loch\f2 currentCount}{\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 parameter, which is used to track the current number of encountered messages:
\par 
\par \tab 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16338245 {\b\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 OrValidator.getAllMessages(Object, int limit, }{\b\f2\fs16\cf6\highlight7\insrsid12195522 
\hich\af2\dbch\af13\loch\f2 int currentCount}{\b\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 ) }{\b\f2\fs16\cf6\insrsid7691021 \{}{\b\f2\fs16\cf6\insrsid16338245 
\par }\pard \ql \fi30\li763\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin763\itap0\culi318\pararsid16338245 {\f2\fs16\cf6\insrsid16338245\charrsid16338245 \hich\af2\dbch\af13\loch\f2 List allMessages = new ArrayList();
\par 
\par \hich\af2\dbch\af13\loch\f2 for (Iterator itr = getValidators(); itr.hasNext() && (allMessages.size() < messageLimit);) \{
\par \hich\af2\dbch\af13\loch\f2       \hich\af2\dbch\af13\loch\f2 String[] messages = ((ObjectValidator) itr.next()).getAllMessages(object, messageLimit - allMessages.size());
\par }{\f2\fs16\cf6\insrsid16338245\charrsid7691021 
\par }{\f2\fs16\cf6\insrsid16338245\charrsid16338245 \hich\af2\dbch\af13\loch\f2       \hich\af2\dbch\af13\loch\f2 if (messages == nul\hich\af2\dbch\af13\loch\f2 l) \{
\par \hich\af2\dbch\af13\loch\f2       \hich\af2\dbch\af13\loch\f2     return null;
\par \hich\af2\dbch\af13\loch\f2       \}\hich\af2\dbch\af13\loch\f2  else \{
\par \hich\af2\dbch\af13\loch\f2       \hich\af2\dbch\af13\loch\f2     // Only add if current number of messages is less than messageLimit
\par \hich\af2\dbch\af13\loch\f2       \hich\af2\dbch\af13\loch\f2     for (int i = 0; (i < messages.length) && (allMessages.size() < messageLimit); i++) \{
\par \hich\af2\dbch\af13\loch\f2                 \hich\af2\dbch\af13\loch\f2     allMessages.add(messages[i]);
\par \hich\af2\dbch\af13\loch\f2           \}
\par \hich\af2\dbch\af13\loch\f2       \}
\par \}
\par }{\f2\fs16\cf6\insrsid16338245\charrsid7691021 
\par }{\f2\fs16\cf6\insrsid16338245\charrsid16338245 \hich\af2\dbch\af13\loch\f2 return (String[]) (allMessages.toArray(new String[0]));}{\f2\fs16\cf6\insrsid12195522 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7691021 {\f2\fs16\cf6\insrsid7691021 \}}{\f2\fs16\cf6\insrsid7691021\charrsid16338245 
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 1.5\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Component Class Overview
\par {\listtext\pard\plain\s3 \i\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 1.5.1\tab}}\pard\plain \s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 
\i\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 com.topcoder.util.dataval\hich\af1\dbch\af13\loch\f1 idator
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
AbstractAssociativeObjectValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is am abstract class that is used to abstract functionality of validator
\par \hich\af1\dbch\af13\loch\f1 composition. It is basically a composition of 0 or more validators. This
\par \hich\af1\dbch\af13\loch\f1 class gives its descendants the ability to manipulate the aspects of validator
\par \hich\af1\dbch\af13\loch\f1 composition. The validators are guaranteed to be placed in a normal list
\par \hich\af1\dbch\af13\loch\f1 order which means that the first validator added to this composition will
\par \hich\af1\dbch\af13\loch\f1 be the first that is returned \hich\af1\dbch\af13\loch\f1 through the iterator, the second will be the
\par \hich\af1\dbch\af13\loch\f1 second one returned, etc...}{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 AbstractObjectValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
This is an abstract ObjectValidator implementation, which gives the ability for resource bundled message fetching for the validation messages. The user will be able to set up which bundle should be used and what key should be used to fetch the message. We
\hich\af1\dbch\af13\loch\f1  \hich\af1\dbch\af13\loch\f1 also have the ability to specify the locale.
\par \hich\af1\dbch\af13\loch\f1  But if one is not provided then the current locale will be used. Note that the bundle functionality is fail-safe in the sense the user must provide a default message in case the bundle functionality fails. This
\hich\af1\dbch\af13\loch\f1 
 way the validator is always guaranteed to be able to produce a message. The user is not required though to utilize the resource bundle functionality and can directly supply just the message that will be then used by the implementing validator.}{
\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 AlphanumCh\hich\af1\dbch\af13\loch\f1 aracterValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a specific type of CharacterValidator, which will validate an input character as a digit or a letter (but not both) It can act in one of those modes:
\par \hich\af1\dbch\af13\loch\f1    1. Check of the input character is a digit
\par \hich\af1\dbch\af13\loch\f1    2. Check if the input character \hich\af1\dbch\af13\loch\f1 is letter
\par \hich\af1\dbch\af13\loch\f1 This is determined by the initialization done in the constructor, which allows the user to choose either a digit validation (isDigit - true) or letter validation (idDigit - false)
\par \hich\af1\dbch\af13\loch\f1 This class is thread-safe since it is immutable. Note that this is\hich\af1\dbch\af13\loch\f1  an inner class of the CharacterValidator and is not part of the public API.
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 AndValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a specific type of a composite validator which validates based on a boolean AND outcome of all the associated validators. This is basically a composite AND v\hich\af1\dbch\af13\loch\f1 
alidator. By default it works in a short-circuited mode which means that the validator will return an 'invalid' result the moment the first of the validators returns a false (or null for getMessage())}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 BooleanValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a simple boolean validator ab\hich\af1\dbch\af13\loch\f1 
straction which basically checks that a given boolean value conforms with the state of this validator. This validator is abstract and will need to be extended to actually provide the validation routine. One such example would be providing a boolean value 
\hich\af1\dbch\af13\loch\f1 v\hich\af1\dbch\af13\loch\f1 alidation which fails validation of the provided object evaluates to false. User will need to implement the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 valid(boolean value) }{
\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 method to decide what the validator will do.
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 ByteValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a simple byte validator abstraction, which basically checks\hich\af1\dbch\af13\loch\f1 
 that a given value conforms with a specific byte definition. This validator is abstract and will need to be extended to actually provide the validation routine for a specific byte value validation. Note that this validator acts as a factory that allows f
\hich\af1\dbch\af13\loch\f1 o\hich\af1\dbch\af13\loch\f1 
r creation of other specialized ByteValidator instances that provide a number of convenience methods which validate such aspects as range (from, to and could also be exclusive of extremes) or provide general comparison of values such as greater-than, less
\hich\af1\dbch\af13\loch\f1 -\hich\af1\dbch\af13\loch\f1 than, etc... 
\par \hich\af1\dbch\af13\loch\f1 User will need to implement the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 valid(byte value) }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
method to decide what the validator will do with the input byte.
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 ByteValidatorWrapper
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
This is a simple byte validator abstraction, which basically checks that a given value conforms to a specific byte definition. This validator is abstract and will need to be extended to actually provide the validation routine for a specific byte value val
\hich\af1\dbch\af13\loch\f1 i\hich\af1\dbch\af13\loch\f1 
dation. Note that this validator acts as a factory that allows for creation of other specialized ByteValidator instances that provide a number of convenience methods which validate such aspects as range (from, to and could also be exclusive of extremes) o
\hich\af1\dbch\af13\loch\f1 r\hich\af1\dbch\af13\loch\f1  provide general comparison of values such as greater-than, less-than, etc...
\par \hich\af1\dbch\af13\loch\f1 User will need to implement the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 valid(byte value)}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 method to decide what the validator will do with the input byte.}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par 
\par }{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 CaseCharacterValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a specific type of CharacterV\hich\af1\dbch\af13\loch\f1 
alidator, which ensures either the upper case, or lower case aspect of input (i.e. of the character). Thus this validator works in one of two modes:
\par \hich\af1\dbch\af13\loch\f1      1. Test for upper case
\par \hich\af1\dbch\af13\loch\f1      2. Test for lower case
\par \hich\af1\dbch\af13\loch\f1 User will choose which mode it operates in through \hich\af1\dbch\af13\loch\f1 the constructor flag. This is thread-safe since it is immutable. This is an inner class of }{\f2\fs20\cf2\insrsid12195522 
\hich\af2\dbch\af13\loch\f2 CharacterValidator}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 CharacterValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a simple character validator abstraction, which basically checks that a given value conforms to a specific character d\hich\af1\dbch\af13\loch\f1 
efinition. This validator is abstract and will need to be extended to actually provide the validation routine for a specific character value validation. Note that this validator acts as a factory that allows for creation of other specialized CharacterVali
\hich\af1\dbch\af13\loch\f1 d\hich\af1\dbch\af13\loch\f1 
ator instances that provide a number of convenience methods, which validate such aspects as if the character is a digit or a letter or both, if it is a white space or if it is upper-case or lower-case. 
\par \hich\af1\dbch\af13\loch\f1 User will need to implement the valid}{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 (char value)}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  met\hich\af1\dbch\af13\loch\f1 
hod to decide what the validator will do with the input character.
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 CharacterValidatorWrapper
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is something of an adapter class, which gives us a simple implementation of the abstract CharacterValidator class. Note that this will wrap around any type o\hich\af1\dbch\af13\loch\f1 
f a validator but since this is an internal class only CharacterValidator class is expected. It is thread-safe as it is immutable. This is an inner class to }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 CharacterValidator}{
\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 .
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 CompareByteValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the ByteValidator, which specific\hich\af1\dbch\af13\loch\f1 
ally deals with validating comparisons based criteria such equal, greater-than-or-equal, less-than, less-than-or-equal, greater-than. Thus we will have a validation based on a specific initialization value (that is set with the validator) and then have th
\hich\af1\dbch\af13\loch\f1 i\hich\af1\dbch\af13\loch\f1 s validator compare the input value with the set value using one of the specific comparison directions. This is an inner class to ByteValidator. This class is thread-safe as it is immutable.}{
\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 CompareDirection
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a simple enumeration of comparison dire\hich\af1\dbch\af13\loch\f1 
ctions that we would see when comparing entities such as numbers. All the possible directions are enumerated here such as equal, greater-than-or-equal, less-than-or-equal, greater-than, and less-than.
\par \hich\af1\dbch\af13\loch\f1 As an enumeration it is thread-safe since it is immutab\hich\af1\dbch\af13\loch\f1 le.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 CompareDoubleValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 DoubleValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
, which specifically deals with validating comparisons based criteria such equal, greater-than-or-equal, less-than, less-than-or-equal, greater-than. Thus w\hich\af1\dbch\af13\loch\f1 
e will have a validation based on a specific initialization value (that is set with the validator) and then have this validator compare the input value with the set value using one of the specific comparison directions. This is an inner class to DoubleVal
\hich\af1\dbch\af13\loch\f1 i\hich\af1\dbch\af13\loch\f1 dator. This class is thread-safe as it is immutable.
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 CompareFloatValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the FloatValidator, which specifically deals with validating comparisons based criteria such equal, greater-than-or-equal, less-than, less-than-or-equal, gr
\hich\af1\dbch\af13\loch\f1 
eater-than. Thus we will have a validation based on a specific initialization value (that is set with the validator) and then have this validator compare the input value with the set value using one of the specific comparison directions. This is an inner 
\hich\af1\dbch\af13\loch\f1 c\hich\af1\dbch\af13\loch\f1 lass to }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 FloatValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 . This class is thread-safe as it is immutable.}{
\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 CompareIntegerValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
, which specifically deals with validating comparisons based criteria such equal, greater-than-or-equal, less-than, le\hich\af1\dbch\af13\loch\f1 
ss-than-or-equal, greater-than. Thus we will have a validation based on a specific initialization value (that is set with the validator) and then have this validator compare the input value with the set value using one of the specific comparison direction
\hich\af1\dbch\af13\loch\f1 s\hich\af1\dbch\af13\loch\f1 . This is an inner class to }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
. This class is thread-safe as it is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 CompareLongValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 LongValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
, which specifically deals with validating comparisons based c\hich\af1\dbch\af13\loch\f1 
riteria such equal, greater-than-or-equal, less-than, less-than-or-equal, greater-than. Thus we will have a validation based on a specific initialization value (that is set with the validator) and then have this validator compare the input value with the 
\hich\af1\dbch\af13\loch\f1 s\hich\af1\dbch\af13\loch\f1 et value using one of the specific comparison directions. This is an inner class to }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 LongValidator}{\f1\fs20\cf2\insrsid12195522 
\hich\af1\dbch\af13\loch\f1 . This class is thread-safe as it is immutable.
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 CompareShortValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 ShortValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
, which specifically deals with validating com\hich\af1\dbch\af13\loch\f1 
parisons based criteria such equal, greater-than-or-equal, less-than, less-than-or-equal, greater-than. Thus we will have a validation based on a specific initialization value (that is set with the validator) and then have this validator compare the input
\hich\af1\dbch\af13\loch\f1  \hich\af1\dbch\af13\loch\f1 value with the set value using one of the specific comparison directions. This is an inner class to ShortValidator. This class is thread-safe as it is immutable.}{
\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 ContainsStringValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 StringValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 , which specifically deals
\hich\af1\dbch\af13\loch\f1 
 with validating strings based on substring containment. This means that we will be validating user input as being valid it is contains the string that this validator has been initialized with. As an example, if we create an instance of this validator set
\hich\af1\dbch\af13\loch\f1  \hich\af1\dbch\af13\loch\f1 
with a string of "hello" then any user input that would contain this string (case-insensitive) would be considered valid. This is an inner class to StringValidator. This class is thread-safe as it is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 DoubleValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a simple double vali\hich\af1\dbch\af13\loch\f1 
dator abstraction, which basically checks that a given value conforms to a specific double definition. There is also an option to use this validator with an error of comparison delta which is termed here as epsilon which means that comparisons could be do
\hich\af1\dbch\af13\loch\f1 n\hich\af1\dbch\af13\loch\f1 
e to within this particular epsilon. This validator is abstract and will need to be extended to actually provide the validation routine for a specific double value validation. Note that this validator acts as a factory that allows for creation of other sp
\hich\af1\dbch\af13\loch\f1 e\hich\af1\dbch\af13\loch\f1 
cialized DoubleValidator instances that provide a number of convenience methods which validate such aspects as range (from, to and could also be exclusive of extremes) or provide general comparison of values such as greater-than, less-than, etc... We can 
\hich\af1\dbch\af13\loch\f1 a\hich\af1\dbch\af13\loch\f1 
lso create validators that validate for negative or positive values or test if the double can be considered to be an integer (i.e. no loss of precision when converting or with specified and acceptable loss of precision) User will need to implement the }{
\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 vali\hich\af2\dbch\af13\loch\f2 d(double value)}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 method to decide what the validator will do with the input byte. This is thread-safe as the implementation is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 DoubleValidatorWrapper
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is something of an adapter class, which gives us a simple implementation of the abstract D\hich\af1\dbch\af13\loch\f1 
oubleValidator class. Note that this will wrap around any type of a validator but since this is an internal class only }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 DoubleValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 class is expected. This is an inner class to DoubleValidator. It is thread-safe as it is immutable.}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 EndsWithStringValid\hich\af1\dbch\af13\loch\f1 ator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 StringValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
, which specifically deals with validating strings based on testing that strings end with a specific string. As an example, if we create an instance of this validator set with a string of "world" then any use\hich\af1\dbch\af13\loch\f1 
r input that would end with this string (case-insensitive) would be considered valid. This is an inner class to }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 StringValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
. This class is thread-safe as it is immutable.}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 FloatValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a simple float validator abstraction, which basically che\hich\af1\dbch\af13\loch\f1 
cks that a given value conforms to a specific float definition. There is also an option to use this validator with an error of comparison delta which is termed here as epsilon which means that comparisons could be done to within this particular epsilon. T
\hich\af1\dbch\af13\loch\f1 h\hich\af1\dbch\af13\loch\f1 
is validator is abstract and will need to be extended to actually provide the validation routine for a specific double value validation. Note that this validator acts as a factory that allows for creation of other specialized FloatValidator instances that
\hich\af1\dbch\af13\loch\f1  \hich\af1\dbch\af13\loch\f1 
provide a number of convenience methods which validate such aspects as range (from, to and could also be exclusive of extremes) or provide validation of general comparison of values such as greater-than, less-than, etc... We can also create validators tha
\hich\af1\dbch\af13\loch\f1 t\hich\af1\dbch\af13\loch\f1 
 validate for negative or positive values or test if the float can be considered to be an integer (i.e. no loss of precision when converting or with specific acceptable loss of precision) User will need to implement the }{\f2\fs20\cf2\insrsid12195522 
\hich\af2\dbch\af13\loch\f2 valid(float value)}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  method to decide \hich\af1\dbch\af13\loch\f1 what the validator will do with the input byte. This is thread-safe as the implementation is immutable.}
{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 FloatValidatorWrapper
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is something of an adapter class, which gives us a simple implementation of the abstract }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 FloatValidator}{
\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  class. Note that this will wrap around any type of a validator but since this is an internal class only }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 FloatValidator}{
\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  class is expected. This is an inner class to FloatValidator. It is thread-safe as it is immutable.}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 IntegerValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a simple in\hich\af1\dbch\af13\loch\f1 
teger validator abstraction, which basically checks that a given value conforms to a specific integer definition. This validator is abstract and will need to be extended to actually provide the validation routine for a specific integer value validation. N
\hich\af1\dbch\af13\loch\f1 o\hich\af1\dbch\af13\loch\f1 te that this validator acts as a factory that allows for creation of other specialized }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidator}{\f1\fs20\cf2\insrsid12195522 
\hich\af1\dbch\af13\loch\f1  instances that provide a number of convenience methods which validate such aspects as range (from, to, and could also be exclusive of extremes) or gener\hich\af1\dbch\af13\loch\f1 
al comparison of values such as greater-than, less-than, etc... We can also create validators, which validate if a number is positive or negative, or even if it is odd or even (i.e. parity comparison) User will need to implement the }{
\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 valid(int value)}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  method\hich\af1\dbch\af13\loch\f1 
 to decide what the validator will do with the input integer. This is thread-safe as the implementation is immutable.}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 IntegerValidatorWrapper
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is something of an adapter class, which gives us a simple implementation of the abstract }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidator}{
\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  class. Note that this will wrap around any type of a validator but since this is an internal class only IntegerValidator class is expected. This is an inner class to }{\f2\fs20\cf2\insrsid12195522 
\hich\af2\dbch\af13\loch\f2 IntegerValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 . It is thread-safe as it is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 IntegralDoubleValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is \hich\af1\dbch\af13\loch\f1 an extention of the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 DoubleValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 which specifically deals with validating that double values are actually convertible to integers without loss of precision (or with acceptable epsilon loss of precision) In other words this validates if the input is a ma\hich\af1\dbch\af13\loch\f1 
thematical integer. Note that if epsilon is set it will be used in the comparison, which means that we will be accepting an approximation of the integer. This is an inner class to }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 DoubleValidator}
{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 . This class is thread-safe as it is immutable.}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 IntegralFloat\hich\af1\dbch\af13\loch\f1 Validator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 FloatValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 which specifically deals with validating that float values are actually convertible to integers without loss of precision (or with acceptable epsilon loss of precision) In other words this validates if t\hich\af1\dbch\af13\loch\f1 
he input is a mathematical integer. Note that if epsilon is set it will be used in the comparison, which means that we will be accepting an approximation of the integer. This is an inner class to }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 
FloatValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 . This class is thread-safe as it is immutable\hich\af1\dbch\af13\loch\f1 .}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 LengthStringValidator\line }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 StringValidator}{
\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 , which specifically deals with validating strings based on their length. Note that the actual validation is performed based on an }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 
IntegerValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  which means that we could have this vali\hich\af1\dbch\af13\loch\f1 
dator do all the integer validations including range validation of the length. As an example, if we create an instance of this validator set with an }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidator}{\f1\fs20\cf2\insrsid12195522 
\hich\af1\dbch\af13\loch\f1  which checks that a number is in range of 2..10 inclusive then any user input that would h\hich\af1\dbch\af13\loch\f1 ave its length in that range would be considered valid. This is an inner class to }{
\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 StringValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 . This class is thread-safe as it is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 LongValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a simple long integer validator abstraction, which basically checks that a given value c\hich\af1\dbch\af13\loch\f1 
onforms to a specific long integer definition. This validator is abstract and will need to be extended to actually provide the validation routine for a specific long integer value validation. Note that this validator acts as a factory that allows for crea
\hich\af1\dbch\af13\loch\f1 t\hich\af1\dbch\af13\loch\f1 ion of other specialized }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 LongValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 instances that provide a number of convenience methods which validate such aspects as range (from, to, and could also be exclusive of extremes) or general comparison of values such as greater-than, less-than, etc... W\hich\af1\dbch\af13\loch\f1 
e can also create validators that validate if a number is positive or negative, or even if it is odd or even (i.e. parity comparison) User will need to implement the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 valid(long value)}{
\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  method to decide what the validator will do with the input byte. This is\hich\af1\dbch\af13\loch\f1  thread-safe as the implementation is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 LongValidatorWrapper
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is something of an adapter class, which gives us a simple implementation of the abstract }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 LongValidator}{
\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  class. Note that this will wrap around any type of a validator but since this\hich\af1\dbch\af13\loch\f1  is an internal class only }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 
LongValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  class is expected. This is an inner class to }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 LongValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
. It is thread-safe as it is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 NotValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a specific type of a composite validator which validates based on a boolean NOT outcome of the \hich\af1\dbch\af13\loch\f1 
associated validator. In other words it reverses the validation outcome of the associated validator. Note that the message returned by this validator in case of failure doesn't take into account the associated validator since it reverses the successful va
\hich\af1\dbch\af13\loch\f1 l\hich\af1\dbch\af13\loch\f1 idation outcome of that validator. This class is thread-safe as it is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 NullValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a specific type of a simple validator which validates based on a boolean whether the input object is null or not. This class is thread-safe as it is imm\hich\af1\dbch\af13\loch\f1 utable.

\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 ObjectValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
This is the main contract for object validation. Here we have the ability for simple validation (true/false), which will tell us if the object input is valid, or not. We also have the ability to specify a validation that will produce a message if the vali
\hich\af1\dbch\af13\loch\f1 d\hich\af1\dbch\af13\loch\f1 
ation fails telling us something about the cause. For complex validation where we could have multiple failure points we have the ability to fetch all the messages that come from the validators that failed the object. This can further be refined into a sho
\hich\af1\dbch\af13\loch\f1 r\hich\af1\dbch\af13\loch\f1 
t-circuited evaluation or the non-short-circuited evaluation. In short-circuited evaluation we have a scenario where the validator will return a failed result (with associated) messages, the moment it can determine that the validation has failed. For exam
\hich\af1\dbch\af13\loch\f1 p\hich\af1\dbch\af13\loch\f1 le and }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 AndValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 need only fail the first of its constituent validators to know that the whole validation fails. Thus there is no need to invoke any further validators in the tree. Thus we have short-circuited }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 
AndValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  for failure. The same way the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 OrValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 is short-circuited for success. In non-short-circuited evaluation we keep on traversing the validator tree regardless of the fact that the composite outcome is already determined. This is good for situations where we would like to return to the
\hich\af1\dbch\af13\loch\f1 
 user as much as possible information so that they can correct the issues as in a web page input for example. There is also a variation on this with being able to limit the number of messages that are returned to the caller so as to put an upper limit on 
\hich\af1\dbch\af13\loch\f1 t\hich\af1\dbch\af13\loch\f1 he validator tree traversal. Implementations of this are required to be thread-safe.}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 OrValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a specific type of a composite validator which validates based on a boolean OR outcome of all the associated validators. This is basically a composite\hich\af1\dbch\af13\loch\f1 
 OR validator. By default it works in a short-circuited mode which means that the validator will return a 'valid' result the moment the first of the validators returns a true (or null for }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 
getMessage()}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 )  This class is thread safe since it adds no shared/mut\hich\af1\dbch\af13\loch\f1 able data
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 ParityIntegerValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
This is an extension of the IntegerValidator which specifically deals with validating numbers based on their parity (i.e. if the number is odd or even) Which parity should be validated against is set as a flag when creatin\hich\af1\dbch\af13\loch\f1 
g/initializing this validator and is basically odd (true) or even (false) As an example, if we create an instance of this validator set with a parity of odd (true) which would then accept only integers that are odd. This is an inner class to }{
\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 IntegerValidat\hich\af2\dbch\af13\loch\f2 or}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 . This class is thread-safe as it is immutable.}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 

\par }{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 ParityLongValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the LongValidator which specifically deals with validating numbers based on their parity (i.e. if the number is odd or even) Which parity should be validated aga
\hich\af1\dbch\af13\loch\f1 
inst is set as a flag when creating/initializing this validator and is basically odd (true) or even (false) As an example, if we create an instance of this validator set with a parity of odd (true) which would then accept only long integers that are odd. 
\hich\af1\dbch\af13\loch\f1 T\hich\af1\dbch\af13\loch\f1 his is an inner class to LongValidator. This class is thread-safe as it is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 PrimitiveValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a specific wrapper for all validators that deal with primitive type value validation such a }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 
Integer, Boolean, Long, Double, Float, Byte, }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 or }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 Sh\hich\af2\dbch\af13\loch\f2 ort }{\f1\fs20\cf2\insrsid12195522 
\hich\af1\dbch\af13\loch\f1 this is nothing more than a convenience wrapper. This is thread-safe since it is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 RangeDoubleValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 DoubleValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
, which specifically deals with validating a range. In other words we are creating a validator \hich\af1\dbch\af13\loch\f1 
that will validate if a given input number is in range (inclusive of the extremes as an option) Note that an acceptable comparison error can be set as well (i.e. the epsilon) which would be taken into account when deciding if the in-range criteria has bee
\hich\af1\dbch\af13\loch\f1 n\hich\af1\dbch\af13\loch\f1 
 met. As an example, if we create an instance of this validator set with a range of 2.5 - 7.88 with an epsilon of 1e-12 then a number like 5.0 would be in range and even a number like 7.88000000045 would be in range but a number like 7.89 would not be val
\hich\af1\dbch\af13\loch\f1 i\hich\af1\dbch\af13\loch\f1 d. This is an inner class to }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 DoubleValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
. This class is thread-safe as it is immutable.}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par 
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 RangeFloatValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 FloatValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
, which specifically deals with validating a range. In other words we are creating a validator that\hich\af1\dbch\af13\loch\f1 
 will validate if a given input number is in range (inclusive of the extremes as an option) Note that an acceptable comparison error can be set as well (i.e. the epsilon) which would be taken into account when deciding if the in-range criteria has been me
\hich\af1\dbch\af13\loch\f1 t\hich\af1\dbch\af13\loch\f1 
. As an example, if we create an instance of this validator set with a range of 2.5f - 7.88f with an epsilon of 1e-12 then a number like 5.0 would be in range and even a number like 7.88000000045 would be in range but a number like 7.89f would not be vali
\hich\af1\dbch\af13\loch\f1 d\hich\af1\dbch\af13\loch\f1 . This is an inner class to }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 FloatValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
. This class is thread-safe as it is immutable.}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par 
\par }{\b\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 RegexpStringValidator
\par }{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the }{\f2\fs20\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 StringValidator}{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
, which specifically deals with validating strings based on a regular expression. This is an inner class to StringValidator. This class is thread-safe as it is immutable.
\par }{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 ShortValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a simple short integer validator abstraction, which basically\hich\af1\dbch\af13\loch\f1 
 checks that a given value conforms to a specific short integer definition. This validator is abstract and will need to be extended to actually provide the validation routine for a specific short integer value validation. Note that this validator acts as 
\hich\af1\dbch\af13\loch\f1 a\hich\af1\dbch\af13\loch\f1 
 factory that allows for creation of other specialized ShortValidator instances that provide a number of convenience methods which validate such aspects as range (from, to and could also be exclusive of extremes) or general comparison of values such as gr
\hich\af1\dbch\af13\loch\f1 e\hich\af1\dbch\af13\loch\f1 ater-than, less-than, etc... Users will need to implement the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 valid(short value)}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 method to decide what the validator will do with the input short integer. This is thread-safe as the implementation is immutable.}{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 ShortValidatorWrapper
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is something of an adapter class, which gives us a simple implementation of the abstract }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 ShortValidator}{
\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  class. Note that this will wrap around any type of a validator but since this is an internal class only }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 ShortValidator}{
\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  class is expected. This is a\hich\af1\dbch\af13\loch\f1 n inner class to }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 ShortValidator}{\f1\fs20\cf2\insrsid12195522 
\hich\af1\dbch\af13\loch\f1 . It is thread-safe as it is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 StartsWithStringValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an extension of the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 StringValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
, which specifically deals with validating strings based on testing that strings start with a specific string. As a\hich\af1\dbch\af13\loch\f1 
n example, if we create an instance of this validator set with a string of "hello" then any user input that would start with this string (case-insensitive) would be considered valid. This is an inner class to }{\f2\fs20\cf2\insrsid12195522 
\hich\af2\dbch\af13\loch\f2 StringValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 . This class is thread-safe as i\hich\af1\dbch\af13\loch\f1 t is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 StringValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
This is a simple String validator abstraction, which basically checks that a given value conforms to a specific string definition. This validator is abstract and will need to be extended to actually provide the validation r\hich\af1\dbch\af13\loch\f1 
outine for a specific string value validation. Note that this validator comes with a number of convenience factory methods, which create specific valiators, which can tests/validate such aspects as if a string starts with, or end with some string. We also
\hich\af1\dbch\af13\loch\f1  \hich\af1\dbch\af13\loch\f1 
have the ability to create validators that will test for string containment (i.e. a string is valid if it contains a certain substring) or validators that test for length based comparisons such as exact length or a range. We also have the ability to

\par \hich\af1\dbch\af13\loch\f1 create\hich\af1\dbch\af13\loch\f1  validators that test an input string against  specific regular expression. User will need to implement the }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 valid(String value)}{
\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1  method to decide what the validator will do with the input String. This is thread-safe as the implementation is immutable.}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par 
\par 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Ty\hich\af1\dbch\af13\loch\f1 peValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is a simple }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 ObjectValidator}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
, which specifically deals with validating the input type of a value. It disregards all primitive based class types (such as }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 Double}{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
 for example) and considered any input that is primitive based wrapper to be inva\hich\af1\dbch\af13\loch\f1 
lid. User can create this validator with a specific class type and then it (or its descendants) would be considered as the valid type to be used by this validator. This class is thread-safe as it is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 WhitespaceCharacterValidator
\par }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 This is an exten\hich\af1\dbch\af13\loch\f1 
sion of the StringValidator which specifically deals with validating strings based on whether they are to be consider a white space or not. This is an inner class to }{\f2\fs20\cf2\insrsid12195522 \hich\af2\dbch\af13\loch\f2 StringValidator}{
\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 . This class is thread-safe as it is immutable.
\par }{\b\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }{\b\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 BundleInfo}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par }{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Th\hich\af1\dbch\af13\loch\f1 
is is a simple bean, which represents the resource bundle information for validators. This is a serializable bean and is not thread-safe. This doesn't affect the thread-safety of the component though since it will be utilized in a thread-safe manner.

\par }{\b\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 1.6\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Comp\hich\af1\dbch\af13\loch\f1 onent Exception Definitions
\par {\listtext\pard\plain\s3 \i\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 1.6.1\tab}}\pard\plain \s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 
\i\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Custom Exceptions
\par }\pard\plain \s29\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 None provided.
\par {\listtext\pard\plain\s3 \i\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 1.6.2\tab}}\pard\plain \s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 
\i\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 System exceptions 
\par {\listtext\pard\plain\s21 \f10\fs20\cf6 \loch\af10\dbch\af13\hich\f10 \'d8\tab}}\pard\plain \s21\ql \fi-360\li1080\ri0\sa120\widctlpar\tx1080\aspalpha\aspnum\faauto\ls6\adjustright\rin0\lin1080\itap0 
\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 IllegalArgumentException}{\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
: Exception thrown in various methods where value is invalid or null. This could be because some passed in value is NAN, or null or out of allowable ran\hich\af1\dbch\af13\loch\f1 ge for example.}{\b\cf6\insrsid12195522 
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 1.7\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Thread Safety
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
As required for this component the validator implementations are all thread safe. This is achieved by having most classes being immutable and where there is shared modifiable data (such as the }{\f2\fs20\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 
AbstractAssociativeObjectValidato\hich\af2\dbch\af13\loch\f2 r}{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1  validator list) we simply synchronize around read/write access to this data. 
\par \hich\af1\dbch\af13\loch\f1 The only exception is the }{\f2\fs20\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 BundleInfo}{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1  bean, whi\hich\af1\dbch\af13\loch\f1 
ch is mutable. But it is utilized in an immutable manner by making sure that a copy is always used and returned to the user so that there are no issues with multiple threads accessing this bean.
\par {\listtext\pard\plain\s1 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 2.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Environment Requirements
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 2.1\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Environment
\par {\listtext\pard\plain\f3\fs20 \loch\af3\dbch\af13\hich\f3 \'b7\tab}}\pard\plain \ql \fi-360\li1080\ri0\widctlpar\tx1080\aspalpha\aspnum\faauto\ls7\adjustright\rin0\lin1080\itap0 
\fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Development language: Ja\hich\af1\dbch\af13\loch\f1 va 1.4
\par {\listtext\pard\plain\f3\fs20\cf6 \loch\af3\dbch\af13\hich\f3 \'b7\tab}}{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Compile target: Java 1.4}{\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 2.2\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 TopCoder Software Components
\par }\pard\plain \s29\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 None used.
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 2.3\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Third Party Components
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 None used.
\par {\listtext\pard\plain\s1 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 3.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Installation and Configuration
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 3.1\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Package Name
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\i\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 com.topcoder.util.datavalidator
\par }{\fs20\loch\af1\hich\af1\dbch\af0\insrsid12195522 
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 3.2\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Configuration Parameters
\par }\pard\plain \s29\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 None.
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 3.3\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Dependencies Configuration
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 None
\par {\listtext\pard\plain\s1 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 4.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Usage Note\hich\af1\dbch\af13\loch\f1 s
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 4.1\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Required steps to test the component
\par {\listtext\pard\plain\s21 \f10\fs20 \loch\af10\dbch\af13\hich\f10 \'d8\tab}}\pard\plain \s21\ql \fi-420\li1140\ri0\sa120\widctlpar\tx1140\aspalpha\aspnum\faauto\ls8\adjustright\rin0\lin1140\itap0 
\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Extract the component distribution.
\par {\listtext\pard\plain\s21 \f10\fs20 \loch\af10\dbch\af13\hich\f10 \'d8\tab}\hich\af1\dbch\af13\loch\f1 Follow }{\field\fldedit{\*\fldinst {\insrsid12195522 \hich\af1\dbch\af13\loch\f1  HYPERLINK "C:\\filez\\work\\tc\\tcs_corp\\templates\\component\\" \\
l "_Dependencies_Configuration" }{\insrsid12195522\charrsid11544686 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000030000000303000000000000c00000000000004600002c000000433a5c66696c657a776f726b74637463735f636f727074656d706c61746573636f6d706f6e656e7422206c00ffffadde000000000000000000000000000000000000000000000000}}}{\fldrslt {
\cs18\f0\ul\cf2\insrsid12195522 \hich\af0\dbch\af13\loch\f0 Dependencies Configuration}}}{\insrsid12195522 \hich\af1\dbch\af13\loch\f1 .
\par {\listtext\pard\plain\s21 \f10\fs20 \loch\af10\dbch\af13\hich\f10 \'d8\tab}\hich\af1\dbch\af13\loch\f1 Execute \loch\af1\dbch\af13\hich\f1 \lquote \hich\af1\dbch\af13\loch\f1 ant test\loch\af1\dbch\af13\hich\f1 \rquote \hich\af1\dbch\af13\loch\f1 
 within the directory that the d\hich\af1\dbch\af13\loch\f1 istribution was extracted to.
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 4.2\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Required steps to use the component
\par }\pard\plain \s29\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
The usage of the component is quite clear in itself. 
\par \hich\af1\dbch\af13\loch\f1 1) Create validators with static factory methods. 
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\loch\af1\dbch\af0\insrsid12195522 
\par }{\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 - OR 
\par \hich\af1\dbch\af13\loch\f1 Extend a custom validator from ObjectValidator or primitive validators. 
\par \hich\af1\dbch\af13\loch\f1 2) Use PrimitiveValidator class to wrap custom validators if validation of various primitive data types is required. 
\par \hich\af1\dbch\af13\loch\f1 3) Use TypeValidator class to wrap validators if type-specific validation is required. 
\par \hich\af1\dbch\af13\loch\f1 4) Use composite validators to construct more comp\hich\af1\dbch\af13\loch\f1 lex validators }{\f1\fs20\cf2\insrsid12195522 \hich\af1\dbch\af13\loch\f1 with or without a resource bundle information.
\par }{\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 5) Validate the data by calling the valid() method. 
\par \hich\af1\dbch\af13\loch\f1 6) Get the validation message by calling the getMessage() method.
\par }{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 7) Get the validation messages by calling the getMessages() method.
\par \hich\af1\dbch\af13\loch\f1 8) Get \hich\af1\dbch\af13\loch\f1 all the validation messages by calling the getAllMessages() method.}{\fs20\loch\af1\dbch\af0\insrsid12195522 
\par 
\par {\listtext\pard\plain\s2 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 4.3\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Demo
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
The only visible change here for version 3.2, is in the auditing of the CRUD operations.
\par {\listtext\pard\plain\s3 \i\fs20\cf1\loch\af0 \hich\af0\dbch\af13\loch\f0 4.3.1\tab}}\pard\plain \s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 
\i\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Validate Strings with length from 6 to 20 characters.}{\insrsid12195522 
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 
StringValidator validator = new StringV\hich\af2\dbch\af13\loch\f2 alidator(IntegerValidator.inRange(6, 20));
\par }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 // validate and get the error message if the validation failed
\par \hich\af2\dbch\af13\loch\f2 String message = validator.valid(\loch\af2\dbch\af13\hich\f2 \'93\hich\af2\dbch\af13\loch\f2 Come and get them!\loch\af2\dbch\af13\hich\f2 \'94\hich\af2\dbch\af13\loch\f2 );
\par \hich\af2\dbch\af13\loch\f2 if(message == null)\{
\par \tab \hich\af2\dbch\af13\loch\f2 System.out.println(\loch\af2\dbch\af13\hich\f2 \'93\hich\af2\dbch\af13\loch\f2 valid\loch\af2\dbch\af13\hich\f2 \'94\hich\af2\dbch\af13\loch\f2 );
\par \}\hich\af2\dbch\af13\loch\f2 else\{
\par \tab \hich\af2\dbch\af13\loch\f2 System.out.println(\loch\af2\dbch\af13\hich\f2 \'93\hich\af2\dbch\af13\loch\f2 not valid. Caus\hich\af2\dbch\af13\loch\f2 e =  \loch\af2\dbch\af13\hich\f2 \'94\hich\af2\dbch\af13\loch\f2  + message);
\par \}}{\fs16\loch\af2\dbch\af0\insrsid12195522 
\par {\listtext\pard\plain\s3 \i\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 4.3.2\tab}}\pard\plain \s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 
\i\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Complex validation
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
To validate any of the following: 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 1) Boolean that is false 
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 2) String that contains \loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 fake
\loch\af1\dbch\af13\hich\f1 \'94\hich\af1\dbch\af13\loch\f1  as substring 
\par \hich\af1\dbch\af13\loch\f1 3) Character that is not letter or digit 
\par }\pard\plain \s19\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs24\cf1\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\insrsid12195522 
\par }\pard\plain \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
*These should not take conversion into consideration. 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs20\cf1\loch\af1\dbch\af0\insrsid12195522 \tab 
\par \tab }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 // create a aggregating or validator
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 OrValidator validator = new OrValidator(); 
\par }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 // add the first sub validator true if we have a boolean false
\par }{\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 validator.addValidator(new TypeValidator(new BooleanValidator(false)
\par }\pard \ql \fi720\li4320\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin4320\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 , Boolean.class)); 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 \tab }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 // add the second sub \hich\af2\dbch\af13\loch\f2 
validator, true if we have fake as substring
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 validator.addValidator(StringValidator.containsSubstring(\loch\af2\dbch\af13\hich\f2 \'93
\hich\af2\dbch\af13\loch\f2 fake\loch\af2\dbch\af13\hich\f2 \'94\hich\af2\dbch\af13\loch\f2 )); 
\par 
\par }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 // add a third sub validator, true if a character is NOT alphanumeric
\par }{\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 validator.addValidator(new TypeValidator(new NotValidator( 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 CharacterVal\hich\af2\dbch\af13\loch\f2 idator.isAlphaNumeric()), Character.class));
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 
\par }{\fs16\cf6\loch\af2\dbch\af0\insrsid12195522 \tab }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 validator.valid(\loch\af2\dbch\af13\hich\f2 \'93\hich\af2\dbch\af13\loch\f2 this is not fake\loch\af2\dbch\af13\hich\f2 \'94
\hich\af2\dbch\af13\loch\f2 ); \tab \tab // true, validation success
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 validator.valid(\loch\af2\dbch\af13\hich\f2 \'93\hich\af2\dbch\af13\loch\f2 this is not
\loch\af2\dbch\af13\hich\f2 \'94\hich\af2\dbch\af13\loch\f2 ); \tab \tab // false, validation failure
\par \hich\af2\dbch\af13\loch\f2 validator.valid(new Boolean(\loch\af2\dbch\af13\hich\f2 \'93\hich\af2\dbch\af13\loch\f2 false\loch\af2\dbch\af13\hich\f2 \'94\hich\af2\dbch\af13\loch\f2 )); \tab // true, validation success
\par \hich\af2\dbch\af13\loch\f2 validator.v\hich\af2\dbch\af13\loch\f2 alid(new Boolean(\loch\af2\dbch\af13\hich\f2 \'93\hich\af2\dbch\af13\loch\f2 true\loch\af2\dbch\af13\hich\f2 \'94\hich\af2\dbch\af13\loch\f2 )); \tab // false, validation failure
\par \hich\af2\dbch\af13\loch\f2 validator.valid(\loch\af2\dbch\af13\hich\f2 \'93\hich\af2\dbch\af13\loch\f2 !\loch\af2\dbch\af13\hich\f2 \'94\hich\af2\dbch\af13\loch\f2 ); \tab \tab \tab \tab // true, validation success
\par \hich\af2\dbch\af13\loch\f2 validator.valid(\loch\af2\dbch\af13\hich\f2 \'93\hich\af2\dbch\af13\loch\f2 A\loch\af2\dbch\af13\hich\f2 \'94\hich\af2\dbch\af13\loch\f2 ); \tab \tab \tab \tab // false, validation failure}{
\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 
\par {\listtext\pard\plain\s3 \i\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 4.3.3\tab}}\pard\plain \s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 
\i\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Example of custom validator
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\cf1\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
To validate any long or Long that can be converted into double\hich\af1\dbch\af13\loch\f1  or Strings can be parsed 
\par \hich\af1\dbch\af13\loch\f1 into a long that is multiple of 5.
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 
\par }{\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 ObjectValidator validator = new LongValidator() \{ 
\par }\pard \ql \fi720\li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2 public boolean valid(long value) \{ 
\par \hich\af2\dbch\af13\loch\f2 return value % 5 == 0; 
\par \}\hich\af2\dbch\af13\loch\f2  
\par \hich\af2\dbch\af13\loch\f2 public String getMessage(long value) \{ 
\par \hich\af2\dbch\af13\loch\f2 if (!valid(value)) \{ 
\par \hich\af2\dbch\af13\loch\f2 return \loch\af2\dbch\af13\hich\f2 \'93\hich\af2\dbch\af13\loch\f2 not multiple of 5\loch\af2\dbch\af13\hich\f2 \'94\hich\af2\dbch\af13\loch\f2 ; 
\par }\pard \ql \fi720\li2160\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin2160\itap0 {\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 \}}{\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2  
\par \hich\af2\dbch\af13\loch\f2 return null; 
\par }\pard \ql \fi720\li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {\fs16\cf1\loch\af2\dbch\af0\insrsid12195522 \}}{\f2\fs16\cf1\insrsid12195522 \hich\af2\dbch\af13\loch\f2  
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\fs16\loch\af2\dbch\af0\insrsid12195522 \}}{\f2\fs16\insrsid12195522 \hich\af2\dbch\af13\loch\f2 ;
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs16\loch\af2\dbch\af0\insrsid12195522 
\par {\listtext\pard\plain\s3 \i\fs20\cf6\loch\af0 \hich\af0\dbch\af13\loch\f0 4.3.4\tab}}\pard\plain \s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 
\i\fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Example of using a validator to obtain a number of messages from the validation process
\par }\pard\plain \s29\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs20\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
Here we will present the API that is used for getting multiple messages about a single object. Let us assume that the objec\hich\af1\dbch\af13\loch\f1 
t is a string that represents an email address entered at a website. What we need is the following composite validator:
\par }\pard\plain \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
1) Cannot be null 
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 2) must be between 7 and 35 characters long
\par \hich\af1\dbch\af13\loch\f1 3) must end with a \loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 .com\loch\af1\dbch\af13\hich\f1 \'94
\par \hich\af1\dbch\af13\loch\f1 4) must contain a substring of \loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 @\loch\af1\dbch\af13\hich\f1 \'94
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 \tab }{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 We will als\hich\af1\dbch\af13\loch\f1 
o assume the following resource bundle setup:
\par \tab 
\par }\trowd \irow0\irowband0\ts11\trleft720\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\clcbpat17\cltxlrtb\clftsWidth3\clwWidth1080\clcbpatraw17 \cellx1800\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \clcbpat17\cltxlrtb\clftsWidth3\clwWidth3780\clcbpatraw17 \cellx5580\clvertalt
\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \clcbpat17\cltxlrtb\clftsWidth3\clwWidth3060\clcbpatraw17 \cellx8640\pard \qc \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {
\b\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Locale\cell \hich\af1\dbch\af13\loch\f1 Key\cell \hich\af1\dbch\af13\loch\f1 Message\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid12195522 
\trowd \irow0\irowband0\ts11\trleft720\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\clcbpat17\cltxlrtb\clftsWidth3\clwWidth1080\clcbpatraw17 \cellx1800\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \clcbpat17\cltxlrtb\clftsWidth3\clwWidth3780\clcbpatraw17 \cellx5580\clvertalt
\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \clcbpat17\cltxlrtb\clftsWidth3\clwWidth3060\clcbpatraw17 \cellx8640\row }\trowd \irow1\irowband1\ts11\trleft720\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 
\trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 
\clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth1080\clshdrawnil \cellx1800\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3780\clshdrawnil 
\cellx5580\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3060\clshdrawnil \cellx8640\pard \qc \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {
\f1\fs20\cf6\insrsid12195522 \loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 En\loch\af1\dbch\af13\hich\f1 \'94\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\f1\fs20\cf6\insrsid12195522 
\loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 email.field.can.not.be.null\loch\af1\dbch\af13\hich\f1 \'94\cell \loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 Please ensure that the email field is filled in
\loch\af1\dbch\af13\hich\f1 \'94\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid12195522 \trowd \irow1\irowband1\ts11\trleft720\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr
\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr
\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth1080\clshdrawnil \cellx1800\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3780\clshdrawnil \cellx5580\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3060\clshdrawnil \cellx8640\row }\pard \qc \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {
\f1\fs20\cf6\insrsid12195522 \loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 En\loch\af1\dbch\af13\hich\f1 \'94\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\f1\fs20\cf6\insrsid12195522 
\loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 email.field.is incorrect.length\loch\af1\dbch\af13\hich\f1 \'94\cell \loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 
Please ensure that the text for email field is between 7 and 35 characters long \loch\af1\dbch\af13\hich\f1 \endash \hich\af1\dbch\af13\loch\f1  inclusive\loch\af1\dbch\af13\hich\f1 \'94\cell }\pard 
\ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid12195522 \trowd \irow2\irowband2\ts11\trleft720\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv
\brdrs\brdrw10 \trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth1080\clshdrawnil \cellx1800\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3780\clshdrawnil \cellx5580\clvertalt\clbrdrt\brdrs\brdrw10 
\clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3060\clshdrawnil \cellx8640\row }\pard \qc \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\f1\fs20\cf6\insrsid12195522 
\loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 En\loch\af1\dbch\af13\hich\f1 \'94\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\f1\fs20\cf6\insrsid12195522 \loch\af1\dbch\af13\hich\f1 \'93
\hich\af1\dbch\af13\loch\f1 email.field.must.end.with .com\loch\af1\dbch\af13\hich\f1 \'94\cell \loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 Please ensure that your email address ends with a .com\loch\af1\dbch\af13\hich\f1 \'94\cell }\pard 
\ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid12195522 \trowd \irow3\irowband3\ts11\trleft720\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv
\brdrs\brdrw10 \trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth1080\clshdrawnil \cellx1800\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3780\clshdrawnil \cellx5580\clvertalt\clbrdrt\brdrs\brdrw10 
\clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3060\clshdrawnil \cellx8640\row }\pard \qc \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\f1\fs20\cf6\insrsid12195522 
\loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 En\loch\af1\dbch\af13\hich\f1 \'94\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\f1\fs20\cf6\insrsid12195522 \loch\af1\dbch\af13\hich\f1 \'93
\hich\af1\dbch\af13\loch\f1 email.field.must.contain.the.at.char \loch\af1\dbch\af13\hich\f1 \'93\cell \loch\af1\dbch\af13\hich\f1 \'93\hich\af1\dbch\af13\loch\f1 An email address mus\hich\af1\dbch\af13\loch\f1 t contain the @ character.
\loch\af1\dbch\af13\hich\f1 \'94\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid12195522 \trowd \irow4\irowband4\lastrow \ts11\trleft720\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 
\trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \trftsWidth1\trftsWidthB3\trftsWidthA3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 
\clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth1080\clshdrawnil \cellx1800\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3780\clshdrawnil \cellx5580\clvertalt
\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3060\clshdrawnil \cellx8640\row }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\fs20\cf6\loch\af1\dbch\af0\insrsid12195522 \tab }{\f1\fs20\cf6\insrsid12195522 \hich\af1\dbch\af13\loch\f1 We will also assume that this set up is in a named bundle: \loch\af1\dbch\af13\hich\f1 \'93}{\f1\fs20\cf6\insrsid12195522 
\hich\af1\dbch\af13\loch\f1 property}{\f1\fs20\cf6\insrsid12195522 \loch\af1\dbch\af13\hich\f1 \'94
\par 
\par 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\fs16\cf6\loch\af2\dbch\af0\insrsid12195522 \tab }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par }\pard \qj \fi-660\li886\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin886\itap0\cufi-330\culi94\pararsid11890741 {\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 \hich\af0\dbch\af0\loch\f1         // Create a bundle info to be used
\par \hich\af0\dbch\af0\loch\f1         }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 BundleI\hich\af2\dbch\af13\loch\f2 nfo bundleInfo = new BundleInfo();
\par }\pard \qj \fi-528\li754\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin754\itap0\cufi-330\culi94\pararsid11890741 {\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2     }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2  }{
\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 bundleInfo.setBundle("property", Locale.ENGLISH);
\par \hich\af2\dbch\af13\loch\f2      bundleInfo.setMessageKey("email.field.can.not.be.null");
\par \hich\af2\dbch\af13\loch\f2      bundleInfo.setDefaultMessage("email field cannot be null");
\par }\pard \qj \fi-660\li886\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin886\itap0\cufi-330\culi94\pararsid11890741 {\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par \hich\af0\dbch\af0\loch\f1         // Create a aggregating or val\hich\af0\dbch\af0\loch\f1 idator
\par \hich\af0\dbch\af0\loch\f1         }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 AndValidator validator = new AndValidator();
\par }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par \hich\af0\dbch\af0\loch\f1         // Add the first sub validator, true if we have a not null string
\par \hich\af0\dbch\af0\loch\f1         }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 validator.addValidator(new NotValidator(new NullValidator(bundleInfo)));
\par }\pard \qj \fi-528\li754\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin754\itap0\cufi-330\culi94\pararsid11890741 {\f2\fs16\cf6\insrsid12195522 
\par \hich\af2\dbch\af13\loch\f2     }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2  }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 bundleInfo.setMessageKey("email.fi\hich\af2\dbch\af13\loch\f2 eld.is.incorrect.length");
\par \hich\af2\dbch\af13\loch\f2      bundleInfo.setDefaultMessage("email field is of the wrong length");
\par }\pard \qj \fi-660\li886\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin886\itap0\cufi-330\culi94\pararsid11890741 {\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par \hich\af0\dbch\af0\loch\f1         // Add the second sub validator, true if the string is in range of 7..35 chars long
\par \hich\af0\dbch\af0\loch\f1         }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 validator.addValidator(StringValidator.hasLength(Intege\hich\af2\dbch\af13\loch\f2 rValidator.inRange(7, 35, bundleInfo)));
\par }\pard \qj \fi-528\li754\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin754\itap0\cufi-330\culi94\pararsid11890741 {\f2\fs16\cf6\insrsid12195522 
\par \hich\af2\dbch\af13\loch\f2      bundleInfo.setMessageKey("email.field.must.end.with.com");
\par \hich\af2\dbch\af13\loch\f2      bundleInfo.setDefaultMessage("email field doesn\loch\af2\dbch\af13\hich\f2 \rquote \hich\af2\dbch\af13\loch\f2 t end in com");
\par }\pard \qj \fi-660\li886\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin886\itap0\cufi-330\culi94\pararsid11890741 {\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par \hich\af0\dbch\af0\loch\f1         // Add the third sub validator, true if the input string end with ".com"
\par \hich\af0\dbch\af0\loch\f1        }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2  validator.addValidator(StringValidator.endsWith(".com", bundleInfo));
\par }\pard \qj \fi-528\li754\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin754\itap0\cufi-330\culi94\pararsid11890741 {\f2\fs16\cf6\insrsid12195522 
\par \hich\af2\dbch\af13\loch\f2      bundleInfo.setMessageKey("email.field.must.contain.the.at.char");
\par \hich\af2\dbch\af13\loch\f2      bundleInfo.setDefaultMessage("email field doesn\loch\af2\dbch\af13\hich\f2 \rquote \hich\af2\dbch\af13\loch\f2 t contain the @ character");
\par 
\par }\pard \qj \fi-660\li886\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin886\itap0\cufi-330\culi94\pararsid11890741 {\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 \hich\af0\dbch\af0\loch\f1         // Add a fourt\hich\af0\dbch\af0\loch\f1 
h sub validator, true if the input string contains "@"
\par \hich\af0\dbch\af0\loch\f1        }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2  ObjectValidator containsValidator = StringValidator.containsSubstring("@", bundleInfo);
\par }\pard \qj \fi-528\li754\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin754\itap0\cufi-330\culi94\pararsid11890741 {\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2      validator.addValidator(containsValidator);
\par }\pard \qj \fi-660\li886\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin886\itap0\cufi-330\culi94\pararsid11890741 {\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par \hich\af0\dbch\af0\loch\f1         ////////////////////////////////////////////////\hich\af0\dbch\af0\loch\f1 //////////////////////////////////
\par \hich\af0\dbch\af0\loch\f1         // Now lets say that we run this validator with the following inputs
\par \hich\af0\dbch\af0\loch\f1         // 1) Input string of "hello" and we run the following:
\par \hich\af0\dbch\af0\loch\f1         //
\par \hich\af0\dbch\af0\loch\f1         // The result will be false, This is because the string is to\hich\af0\dbch\af0\loch\f1 o short
\par \hich\af0\dbch\af0\loch\f1         }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 validator.valid("hello");
\par }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par \hich\af0\dbch\af0\loch\f1         // This will return "Please ensure that the text for email field is between 7 and 35 characters long
\par \hich\af0\dbch\af0\loch\f1         // }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 \loch\af1\dbch\af0\hich\f0 \endash }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 \hich\af0\dbch\af0\loch\f1  inclusive"
\par \hich\af0\dbch\af0\loch\f1         // because the AndValidator will short-circuit on the first failed valid\hich\af0\dbch\af0\loch\f1 ator and these are done in order in 
\par \hich\af0\dbch\af0\loch\f1         // which they were placed. So the first validator to fail this is the inRange validator    \tab 
\par \hich\af0\dbch\af0\loch\f1        }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2  printResult("validator.getMessage(\\"hello\\")", validator.getMessage("hello"));
\par }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par \hich\af0\dbch\af0\loch\f1         // This will return "P\hich\af0\dbch\af0\loch\f1 lease ensure that the text for email field is between 7 and 35 characters long
\par \hich\af0\dbch\af0\loch\f1         // }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 \loch\af1\dbch\af0\hich\f0 \endash }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 \hich\af0\dbch\af0\loch\f1  inclusive"
\par \hich\af0\dbch\af0\loch\f1         // because the AndValidator will short-circuit on the first failed validator and these are done in order in
\par \hich\af0\dbch\af0\loch\f1         // which they were placed. So the first validator to fail this is the inRange validator and not other
\par \hich\af0\dbch\af0\loch\f1         // validators will be dealt with. This is not very useful.
\par \hich\af0\dbch\af0\loch\f1        }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2  printResult("validator.getMessage(\\"hello\\")", validator.getMessages("h\hich\af2\dbch\af13\loch\f2 ello"));
\par }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par \hich\af0\dbch\af0\loch\f1         // This will return the following messages:
\par \hich\af0\dbch\af0\loch\f1         //     \tab "Please ensure that the text for email field is between 7 and 35 characters long }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 \loch\af1\dbch\af0\hich\f0 \endash }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\hich\af0\dbch\af0\loch\f1  inclusive"
\par \hich\af0\dbch\af0\loch\f1         //    \tab "Please ensure that your email address ends with a .com"
\par \hich\af0\dbch\af0\loch\f1         //  \hich\af0\dbch\af0\loch\f1   \tab "An email address must contain the @ character."
\par \hich\af0\dbch\af0\loch\f1         // Because the AndValidator in this mode will NOT short-circuit on the first failed validator and will
\par \hich\af0\dbch\af0\loch\f1         // continue doing all validators.    \tab     \tab 
\par \hich\af0\dbch\af0\loch\f1        }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2  printResult("getAllMessages(\\"hel\hich\af2\dbch\af13\loch\f2 lo\\")", validator.getAllMessages("hello"));
\par }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par \hich\af0\dbch\af0\loch\f1         // This will only return the following two messages:
\par \hich\af0\dbch\af0\loch\f1         //\tab \tab "Please ensure that the text for email field is between 7 and 35 characters long }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 \loch\af1\dbch\af0\hich\f0 \endash }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\hich\af0\dbch\af0\loch\f1  inclusive"
\par \hich\af0\dbch\af0\loch\f1         //\tab \tab "Please ensure that your email a\hich\af0\dbch\af0\loch\f1 ddress ends with a .com"
\par \hich\af0\dbch\af0\loch\f1         // Because the AndValidator in this mode will NOT short-circuit on the first failed validator but will be 
\par \hich\af0\dbch\af0\loch\f1         // limited to only 2 messages.
\par \hich\af0\dbch\af0\loch\f1      }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2    printResult("getAllMessages(\\"hello\\", 2)", validator.getAllMessages(\hich\af2\dbch\af13\loch\f2 "hello", 2));
\par }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 
\par \hich\af0\dbch\af0\loch\f1         //////////////////////////////////////////////////////////////////////////////////
\par \hich\af0\dbch\af0\loch\f1         // 2) Here lets assume that we have the string "ivern#topcoder.org" which is invalid and lets say that we 
\par \hich\af0\dbch\af0\loch\f1         // use the non-existent resource bundle of "zh".
\par \hich\af0\dbch\af0\loch\f1         //\tab   Assuming the same code as before but with the difference of this line:
\par \hich\af0\dbch\af0\loch\f1        }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2  validator.removeValidator(containsValidator);
\par }\pard \qj \fi-528\li754\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin754\itap0\cufi-330\culi94\pararsid11890741 {\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2      \hich\af2\dbch\af13\loch\f2 
bundleInfo.setBundle("property", Locale.CHINA);
\par \hich\af2\dbch\af13\loch\f2      \hich\af2\dbch\af13\loch\f2 containsValidator = StringValidator.containsSubstring("@", bundleInfo);
\par \hich\af2\dbch\af13\loch\f2      \hich\af2\dbch\af13\loch\f2 validator.addValidator(containsValidator);
\par }{\f2\fs16\cf6\insrsid12195522\charrsid11544686 
\par }\pard \qj \fi-660\li886\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin886\itap0\cufi-330\culi94\pararsid11890741 {\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 \hich\af0\dbch\af0\loch\f1         // This will return the following messages:
\par \hich\af0\dbch\af0\loch\f1         // "email field doesn}{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 \loch\af1\dbch\af0\hich\f0 \rquote }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 \hich\af0\dbch\af0\loch\f1 t end in com"
\par \hich\af0\dbch\af0\loch\f1         // "email field doesn}{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 \loch\af1\dbch\af0\hich\f0 \rquote }{\fs20\cf2\loch\af1\dbch\af0\insrsid12195522 \hich\af0\dbch\af0\loch\f1 t contain the @ character"
\par \hich\af0\dbch\af0\loch\f1         // Because the resource bundle was not found and provided default messages have been used.
\par \hich\af0\dbch\af0\loch\f1         }{\f2\fs16\cf6\insrsid12195522 \hich\af2\dbch\af13\loch\f2 printResult("validator.getAllMessages(\\"ivern#topcoder.org\\")", validator.getAllMessages("ivern#topcoder.org"));
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs16\loch\af2\dbch\af0\insrsid12195522 
\par {\listtext\pard\plain\s1 \b\fs20\loch\af0 \hich\af0\dbch\af13\loch\f0 5.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa120\sl240\slmult0\keepn\nowidctlpar\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 Future E\hich\af1\dbch\af13\loch\f1 nhancements
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12195522 \hich\af1\dbch\af13\loch\f1 
Provide additional validators.
\par 
\par }}